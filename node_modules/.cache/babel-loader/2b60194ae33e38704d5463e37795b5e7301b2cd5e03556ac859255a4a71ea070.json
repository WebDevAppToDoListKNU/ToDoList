{"ast":null,"code":"var _jsxFileName = \"/Users/ldy/Code/React/\\u110B\\u1170\\u11B8\\u1100\\u1162\\u1107\\u1161\\u11AF\\u110B\\u1173\\u11BC\\u110B\\u116D\\u11BC/week15/Todolist/src/components/ToDoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { chat } from './openai';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToDoList() {\n  _s();\n  var _folders$find;\n  const navigate = useNavigate();\n  const [folders, setFolders] = useState([{\n    id: 1,\n    name: \"개인\"\n  }, {\n    id: 2,\n    name: \"업무\"\n  }, {\n    id: 3,\n    name: \"휴지통\"\n  }]);\n  const [todos, setTodos] = useState({\n    1: [{\n      id: 1,\n      title: \"운동하기\",\n      content: \"매일 아침 30분 운동\",\n      date: \"2024-11-09\"\n    }, {\n      id: 2,\n      title: \"책 읽기\",\n      content: \"소설 한 권 읽기\",\n      date: \"2024-11-30\"\n    }],\n    2: [{\n      id: 1,\n      title: \"프로젝트 보고서 작성\",\n      content: \"최종 보고서 작성 및 검토\",\n      date: \"2024-12-01\"\n    }, {\n      id: 2,\n      title: \"팀 회의 준비\",\n      content: \"발표 자료 준비 및 회의록 작성\",\n      date: \"2024-12-02\"\n    }],\n    3: []\n  });\n  const [favorites, setFavorites] = useState([]);\n  const [selectedFolder, setSelectedFolder] = useState(1);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [editingTodo, setEditingTodo] = useState(null);\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [newFolderName, setNewFolderName] = useState(\"\");\n  const [query, setQuery] = useState(\"\");\n  const [summary, setSummary] = useState(\"\");\n  const [sortOrder, setSortOrder] = useState(\"latest\");\n  const [filterDate, setFilterDate] = useState(\"\");\n  const getCurrentDate = () => {\n    const now = new Date();\n    return now.toISOString().slice(0, 19).replace(\"T\", \" \");\n  };\n  const onAddOrUpdate = () => {\n    if (title.trim() === \"\" || content.trim() === \"\") {\n      alert(\"제목과 내용을 입력하세요!\");\n      return;\n    }\n    const folderTodos = todos[selectedFolder] || [];\n    if (editingTodo) {\n      const updatedTodos = folderTodos.map(todo => todo.id === editingTodo.id ? {\n        ...todo,\n        title,\n        content,\n        filterDate\n      } : todo);\n      setTodos({\n        ...todos,\n        [selectedFolder]: updatedTodos\n      });\n    } else {\n      const id = folderTodos.length > 0 ? folderTodos[folderTodos.length - 1].id + 1 : 1;\n      const updatedTodos = [...folderTodos, {\n        id,\n        title,\n        content,\n        date: getCurrentDate()\n      }];\n      setTodos({\n        ...todos,\n        [selectedFolder]: updatedTodos\n      });\n    }\n    closeModal();\n  };\n  const onDelete = id => {\n    const folderTodos = todos[selectedFolder];\n    const updatedTodos = folderTodos.filter(todo => todo.id !== id);\n    const todoToDelete = folderTodos.find(todo => todo.id === id);\n    setTodos({\n      ...todos,\n      [selectedFolder]: updatedTodos\n    });\n    if (todoToDelete) {\n      setTodos(prevState => ({\n        ...prevState,\n        3: [...prevState[3], todoToDelete]\n      }));\n    }\n  };\n  const restoreTodo = id => {\n    const trashTodos = todos[3];\n    const todoToRestore = trashTodos.find(todo => todo.id === id);\n    if (todoToRestore) {\n      const originalFolder = todoToRestore.previousFolder || 1;\n      setTodos(prevState => {\n        const updatedTrashTodos = trashTodos.filter(todo => todo.id !== id);\n        const updatedOriginalFolderTodos = [...prevState[originalFolder], {\n          ...todoToRestore,\n          date: filterDate\n        }];\n        return {\n          ...prevState,\n          3: updatedTrashTodos,\n          [originalFolder]: updatedOriginalFolderTodos\n        };\n      });\n    }\n  };\n  const toggleFavorite = todoId => {\n    setFavorites(prev => prev.includes(todoId) ? prev.filter(id => id !== todoId) : [...prev, todoId]);\n  };\n  const openModal = (todo = null) => {\n    setIsModalOpen(true);\n    if (todo) {\n      setEditingTodo(todo);\n      setTitle(todo.title);\n      setContent(todo.content);\n      setFilterDate(todo.date);\n    } else {\n      setEditingTodo(null);\n      setTitle(\"\");\n      setContent(\"\");\n      setFilterDate(\"\");\n    }\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setEditingTodo(null);\n    setTitle(\"\");\n    setContent(\"\");\n    setSummary(\"\");\n    setFilterDate(\"\");\n  };\n  const sortTodos = todos => {\n    return todos.sort((a, b) => sortOrder === \"latest\" ? new Date(b.date) - new Date(a.date) : new Date(a.date) - new Date(b.date));\n  };\n  const filteredTodos = sortTodos((todos[selectedFolder] || []).filter(todo => (!filterDate || todo.date === filterDate) && (todo.title.toLowerCase().includes(query.toLowerCase()) || todo.content.toLowerCase().includes(query.toLowerCase()))));\n  const fetchSummary = () => {\n    const prompt = `다음은 사용자가 작성한 TodoList입니다. 내용을 간결하고, 가독성 있게 정리해주세요.\n        ${content}`;\n    chat(prompt, response => setSummary(response));\n  };\n  const updateTodoContent = () => {\n    setContent(summary);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      height: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"300px\",\n        padding: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"ToDoList\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(\"/login\"),\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => openModal(),\n        children: \"\\uBA54\\uBAA8 \\uC4F0\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: folders.map(folder => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => setSelectedFolder(folder.id),\n          style: {\n            cursor: \"pointer\",\n            backgroundColor: selectedFolder === folder.id ? \"#ddd\" : \"transparent\"\n          },\n          children: folder.name\n        }, folder.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newFolderName,\n        onChange: e => setNewFolderName(e.target.value),\n        placeholder: \"\\uC0C8 \\uD3F4\\uB354 \\uC774\\uB984\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          if (newFolderName.trim()) {\n            const id = folders.length > 0 ? folders[folders.length - 1].id + 1 : 1;\n            setFolders([...folders, {\n              id,\n              name: newFolderName.trim()\n            }]);\n            setNewFolderName(\"\");\n          }\n        },\n        children: \"\\uD3F4\\uB354 \\uCD94\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        padding: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: (_folders$find = folders.find(folder => folder.id === selectedFolder)) === null || _folders$find === void 0 ? void 0 : _folders$find.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uAC80\\uC0C9 (\\uC81C\\uBAA9/\\uB0B4\\uC6A9)\",\n        value: query,\n        onChange: e => setQuery(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: filterDate,\n        onChange: e => setFilterDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSortOrder(sortOrder === \"latest\" ? \"oldest\" : \"latest\"),\n        children: sortOrder === \"latest\" ? \"최신순\" : \"오래된 순\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(auto-fill, minmax(250px, 1fr))\",\n          gap: 20\n        },\n        children: filteredTodos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            onClick: () => openModal(todo),\n            children: todo.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: todo.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: todo.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => toggleFavorite(todo.id),\n            children: favorites.includes(todo.id) ? \"★\" : \"☆\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 29\n          }, this), selectedFolder !== 3 && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => onDelete(todo.id),\n            children: \"\\uC0AD\\uC81C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 54\n          }, this), selectedFolder === 3 && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => restoreTodo(todo.id),\n            children: \"\\uBCF5\\uC6D0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 54\n          }, this), selectedFolder === 3 && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => onDelete(todo.id),\n            children: \"\\uC644\\uC804 \\uC0AD\\uC81C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 54\n          }, this)]\n        }, todo.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        width: \"100%\",\n        height: \"100%\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        backgroundColor: \"rgba(0, 0, 0, 0.5)\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: \"white\",\n          padding: 20,\n          borderRadius: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          placeholder: \"\\uC81C\\uBAA9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: content,\n          onChange: e => setContent(e.target.value),\n          placeholder: \"\\uB0B4\\uC6A9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: fetchSummary,\n          children: \"\\uB0B4\\uC6A9 \\uC694\\uC57D\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 25\n        }, this), summary && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\uC694\\uC57D:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 42\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: summary\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 54\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onAddOrUpdate,\n          children: editingTodo ? \"수정 완료\" : \"추가\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeModal,\n          children: \"\\uCDE8\\uC18C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 9\n  }, this);\n}\n_s(ToDoList, \"LI72KpA1BjVgEHBf7XYm97rWjH4=\", false, function () {\n  return [useNavigate];\n});\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useState","chat","useNavigate","jsxDEV","_jsxDEV","ToDoList","_s","_folders$find","navigate","folders","setFolders","id","name","todos","setTodos","title","content","date","favorites","setFavorites","selectedFolder","setSelectedFolder","isModalOpen","setIsModalOpen","editingTodo","setEditingTodo","setTitle","setContent","newFolderName","setNewFolderName","query","setQuery","summary","setSummary","sortOrder","setSortOrder","filterDate","setFilterDate","getCurrentDate","now","Date","toISOString","slice","replace","onAddOrUpdate","trim","alert","folderTodos","updatedTodos","map","todo","length","closeModal","onDelete","filter","todoToDelete","find","prevState","restoreTodo","trashTodos","todoToRestore","originalFolder","previousFolder","updatedTrashTodos","updatedOriginalFolderTodos","toggleFavorite","todoId","prev","includes","openModal","sortTodos","sort","a","b","filteredTodos","toLowerCase","fetchSummary","prompt","response","updateTodoContent","style","display","height","children","width","padding","fileName","_jsxFileName","lineNumber","columnNumber","onClick","folder","cursor","backgroundColor","type","value","onChange","e","target","placeholder","flex","gridTemplateColumns","gap","position","justifyContent","alignItems","borderRadius","_c","$RefreshReg$"],"sources":["/Users/ldy/Code/React/웹개발응용/week15/Todolist/src/components/ToDoList.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { chat } from './openai';\nimport { useNavigate } from 'react-router-dom';\n\nfunction ToDoList() {\n    const navigate = useNavigate();\n\n    const [folders, setFolders] = useState([\n        { id: 1, name: \"개인\" },\n        { id: 2, name: \"업무\" },\n        { id: 3, name: \"휴지통\" },\n    ]);\n    const [todos, setTodos] = useState({\n        1: [\n            { id: 1, title: \"운동하기\", content: \"매일 아침 30분 운동\", date: \"2024-11-09\" },\n            { id: 2, title: \"책 읽기\", content: \"소설 한 권 읽기\", date: \"2024-11-30\" },\n        ],\n        2: [\n            { id: 1, title: \"프로젝트 보고서 작성\", content: \"최종 보고서 작성 및 검토\", date: \"2024-12-01\" },\n            { id: 2, title: \"팀 회의 준비\", content: \"발표 자료 준비 및 회의록 작성\", date: \"2024-12-02\" },\n        ],\n        3: []\n    });\n    const [favorites, setFavorites] = useState([]);\n    const [selectedFolder, setSelectedFolder] = useState(1);\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [editingTodo, setEditingTodo] = useState(null);\n    const [title, setTitle] = useState(\"\");\n    const [content, setContent] = useState(\"\");\n    const [newFolderName, setNewFolderName] = useState(\"\");\n    const [query, setQuery] = useState(\"\");\n    const [summary, setSummary] = useState(\"\");\n    const [sortOrder, setSortOrder] = useState(\"latest\");\n    const [filterDate, setFilterDate] = useState(\"\");\n\n    const getCurrentDate = () => {\n        const now = new Date();\n        return now.toISOString().slice(0, 19).replace(\"T\", \" \");\n    };\n\n    const onAddOrUpdate = () => {\n        if (title.trim() === \"\" || content.trim() === \"\") {\n            alert(\"제목과 내용을 입력하세요!\");\n            return;\n        }\n        const folderTodos = todos[selectedFolder] || [];\n        if (editingTodo) {\n            const updatedTodos = folderTodos.map((todo) =>\n                todo.id === editingTodo.id ? { ...todo, title, content, filterDate } : todo\n            );\n            setTodos({ ...todos, [selectedFolder]: updatedTodos });\n        } else {\n            const id = folderTodos.length > 0 ? folderTodos[folderTodos.length - 1].id + 1 : 1;\n            const updatedTodos = [...folderTodos, { id, title, content, date: getCurrentDate() }];\n            setTodos({ ...todos, [selectedFolder]: updatedTodos });\n        }\n        closeModal();\n    };\n\n    const onDelete = (id) => {\n        const folderTodos = todos[selectedFolder];\n        const updatedTodos = folderTodos.filter((todo) => todo.id !== id);\n        const todoToDelete = folderTodos.find((todo) => todo.id === id);\n        setTodos({ ...todos, [selectedFolder]: updatedTodos });\n        if (todoToDelete) {\n            setTodos(prevState => ({\n                ...prevState,\n                3: [...prevState[3], todoToDelete],\n            }));\n        }\n    };\n\n    const restoreTodo = (id) => {\n        const trashTodos = todos[3];\n        const todoToRestore = trashTodos.find((todo) => todo.id === id);\n\n        if (todoToRestore) {\n            const originalFolder = todoToRestore.previousFolder || 1;\n            setTodos((prevState) => {\n                const updatedTrashTodos = trashTodos.filter((todo) => todo.id !== id);\n                const updatedOriginalFolderTodos = [\n                    ...prevState[originalFolder],\n                    { ...todoToRestore, date: filterDate },\n                ];\n                return {\n                    ...prevState,\n                    3: updatedTrashTodos,\n                    [originalFolder]: updatedOriginalFolderTodos,\n                };\n            });\n        }\n    };\n\n    const toggleFavorite = (todoId) => {\n        setFavorites((prev) =>\n            prev.includes(todoId)\n                ? prev.filter((id) => id !== todoId)\n                : [...prev, todoId]\n        );\n    };\n\n    const openModal = (todo = null) => {\n        setIsModalOpen(true);\n        if (todo) {\n            setEditingTodo(todo);\n            setTitle(todo.title);\n            setContent(todo.content);\n            setFilterDate(todo.date);\n        } else {\n            setEditingTodo(null);\n            setTitle(\"\");\n            setContent(\"\");\n            setFilterDate(\"\");\n        }\n    };\n\n    const closeModal = () => {\n        setIsModalOpen(false);\n        setEditingTodo(null);\n        setTitle(\"\");\n        setContent(\"\");\n        setSummary(\"\");\n        setFilterDate(\"\");\n    };\n\n    const sortTodos = (todos) => {\n        return todos.sort((a, b) =>\n            sortOrder === \"latest\"\n                ? new Date(b.date) - new Date(a.date)\n                : new Date(a.date) - new Date(b.date)\n        );\n    };\n\n    const filteredTodos = sortTodos(\n        (todos[selectedFolder] || []).filter(\n            (todo) =>\n                (!filterDate || todo.date === filterDate) &&\n                (todo.title.toLowerCase().includes(query.toLowerCase()) ||\n                    todo.content.toLowerCase().includes(query.toLowerCase()))\n        )\n    );\n\n    const fetchSummary = () => {\n        const prompt = `다음은 사용자가 작성한 TodoList입니다. 내용을 간결하고, 가독성 있게 정리해주세요.\n        ${content}`;\n\n        chat(prompt, (response) => setSummary(response));\n    };\n\n    const updateTodoContent = () => {\n        setContent(summary);\n    };\n\n    return (\n        <div style={{ display: \"flex\", height: \"100vh\" }}>\n            {/* 폴더 리스트 */}\n            <div style={{ width: \"300px\", padding: 10 }}>\n                <h2>ToDoList</h2>\n                <button onClick={() => navigate(\"/login\")}>로그인</button>\n                <button onClick={() => openModal()}>메모 쓰기</button>\n\n                <ul>\n                    {folders.map((folder) => (\n                        <li\n                            key={folder.id}\n                            onClick={() => setSelectedFolder(folder.id)}\n                            style={{ cursor: \"pointer\", backgroundColor: selectedFolder === folder.id ? \"#ddd\" : \"transparent\" }}\n                        >\n                            {folder.name}\n                        </li>\n                    ))}\n                </ul>\n\n                <input\n                    type=\"text\"\n                    value={newFolderName}\n                    onChange={(e) => setNewFolderName(e.target.value)}\n                    placeholder=\"새 폴더 이름\"\n                />\n                <button\n                    onClick={() => {\n                        if (newFolderName.trim()) {\n                            const id = folders.length > 0 ? folders[folders.length - 1].id + 1 : 1;\n                            setFolders([...folders, { id, name: newFolderName.trim() }]);\n                            setNewFolderName(\"\");\n                        }\n                    }}\n                >\n                    폴더 추가\n                </button>\n            </div>\n\n            {/* 메모 영역 */}\n            <div style={{ flex: 1, padding: 20 }}>\n                <h2>{folders.find((folder) => folder.id === selectedFolder)?.name}</h2>\n                <input\n                    type=\"text\"\n                    placeholder=\"검색 (제목/내용)\"\n                    value={query}\n                    onChange={(e) => setQuery(e.target.value)}\n                />\n                <input\n                    type=\"date\"\n                    value={filterDate}\n                    onChange={(e) => setFilterDate(e.target.value)}\n                />\n                <button onClick={() => setSortOrder(sortOrder === \"latest\" ? \"oldest\" : \"latest\")}>\n                    {sortOrder === \"latest\" ? \"최신순\" : \"오래된 순\"}\n                </button>\n\n                <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(auto-fill, minmax(250px, 1fr))\", gap: 20 }}>\n                    {filteredTodos.map((todo) => (\n                        <div key={todo.id}>\n                            <h3 onClick={() => openModal(todo)}>{todo.title}</h3>\n                            <p>{todo.content}</p>\n                            <p>{todo.date}</p>\n\n                            <button onClick={() => toggleFavorite(todo.id)}>\n                                {favorites.includes(todo.id) ? \"★\" : \"☆\"}\n                            </button>\n\n                            {selectedFolder !== 3 && <button onClick={() => onDelete(todo.id)}>삭제</button>}\n                            {selectedFolder === 3 && <button onClick={() => restoreTodo(todo.id)}>복원</button>}\n                            {selectedFolder === 3 && <button onClick={() => onDelete(todo.id)}>완전 삭제</button>}\n                        </div>\n                    ))}\n                </div>\n            </div>\n\n            {isModalOpen && (\n                <div style={{ position: \"fixed\", width: \"100%\", height: \"100%\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\", backgroundColor: \"rgba(0, 0, 0, 0.5)\" }}>\n                    <div style={{ backgroundColor: \"white\", padding: 20, borderRadius: 10 }}>\n                        <input\n                            type=\"text\"\n                            value={title}\n                            onChange={(e) => setTitle(e.target.value)}\n                            placeholder=\"제목\"\n                        />\n                        <textarea\n                            value={content}\n                            onChange={(e) => setContent(e.target.value)}\n                            placeholder=\"내용\"\n                        />\n                        <button onClick={fetchSummary}>내용 요약하기</button>\n                        {summary && <div><h4>요약:</h4><p>{summary}</p></div>}\n                        <button onClick={onAddOrUpdate}>\n                            {editingTodo ? \"수정 완료\" : \"추가\"}\n                        </button>\n                        <button onClick={closeModal}>취소</button>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default ToDoList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}