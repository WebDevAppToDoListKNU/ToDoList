{"ast":null,"code":"var _jsxFileName = \"/Users/ldy/Code/React/\\u110B\\u1170\\u11B8\\u1100\\u1162\\u1107\\u1161\\u11AF\\u110B\\u1173\\u11BC\\u110B\\u116D\\u11BC/week15/Todolist/src/components/ToDoList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToDoList() {\n  _s();\n  var _folders$find;\n  const [folders, setFolders] = useState([]);\n  const [todos, setTodos] = useState({});\n  const [selectedFolder, setSelectedFolder] = useState(1);\n  const [query, setQuery] = useState(\"\");\n  const [sortOrder, setSortOrder] = useState(\"latest\");\n  const userId = localStorage.getItem(\"userId\"); // Retrieve user ID from localStorage\n\n  // Fetch TodoList for the logged-in user\n  useEffect(() => {\n    const fetchToDoList = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/todos`, {\n          params: {\n            userId\n          }\n        });\n        const fetchedTodos = response.data;\n\n        // Organize todos by folder\n        const organizedTodos = fetchedTodos.reduce((acc, todo) => {\n          const folderId = todo.folderId || 1; // Default folder ID is 1\n          if (!acc[folderId]) acc[folderId] = [];\n          acc[folderId].push(todo);\n          return acc;\n        }, {});\n        setTodos(organizedTodos);\n\n        // Fetch folders dynamically or use default folders\n        const uniqueFolderIds = [...new Set(fetchedTodos.map(todo => todo.folderId))];\n        const folderData = uniqueFolderIds.map(id => ({\n          id,\n          name: `Folder ${id}` // Customize folder names\n        }));\n        setFolders(folderData);\n      } catch (error) {\n        console.error(\"Error fetching ToDoList\", error);\n      }\n    };\n    if (userId) fetchToDoList();\n  }, [userId]);\n\n  // Filter and sort todos\n  const filteredTodos = (todos[selectedFolder] || []).filter(todo => todo.title.toLowerCase().includes(query.toLowerCase())).sort((a, b) => sortOrder === \"latest\" ? new Date(b.date) - new Date(a.date) : new Date(a.date) - new Date(b.date));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      height: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"300px\",\n        borderRight: \"2px solid #ccc\",\n        padding: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"ToDoList\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyle: \"none\",\n          padding: 0\n        },\n        children: folders.map(folder => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            padding: 10,\n            marginBottom: 5,\n            cursor: \"pointer\",\n            backgroundColor: selectedFolder === folder.id ? \"#ddd\" : \"transparent\"\n          },\n          onClick: () => setSelectedFolder(folder.id),\n          children: folder.name\n        }, folder.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        padding: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: ((_folders$find = folders.find(folder => folder.id === selectedFolder)) === null || _folders$find === void 0 ? void 0 : _folders$find.name) || \"Folder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search\",\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        style: {\n          width: \"100%\",\n          padding: 10,\n          marginBottom: 20\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSortOrder(sortOrder === \"latest\" ? \"oldest\" : \"latest\"),\n        children: sortOrder === \"latest\" ? \"Sort by Oldest\" : \"Sort by Latest\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: filteredTodos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            border: \"1px solid #ccc\",\n            borderRadius: 10,\n            padding: 10,\n            marginBottom: 10\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: todo.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: todo.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: todo.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this)]\n        }, todo.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(ToDoList, \"1NroLmbZ5MBSH1YCDZ67PJkX0os=\");\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","ToDoList","_s","_folders$find","folders","setFolders","todos","setTodos","selectedFolder","setSelectedFolder","query","setQuery","sortOrder","setSortOrder","userId","localStorage","getItem","fetchToDoList","response","get","params","fetchedTodos","data","organizedTodos","reduce","acc","todo","folderId","push","uniqueFolderIds","Set","map","folderData","id","name","error","console","filteredTodos","filter","title","toLowerCase","includes","sort","a","b","Date","date","style","display","height","children","width","borderRight","padding","fileName","_jsxFileName","lineNumber","columnNumber","listStyle","folder","marginBottom","cursor","backgroundColor","onClick","flex","find","type","placeholder","value","onChange","e","target","border","borderRadius","content","_c","$RefreshReg$"],"sources":["/Users/ldy/Code/React/웹개발응용/week15/Todolist/src/components/ToDoList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nfunction ToDoList() {\n    const [folders, setFolders] = useState([]);\n    const [todos, setTodos] = useState({});\n    const [selectedFolder, setSelectedFolder] = useState(1);\n    const [query, setQuery] = useState(\"\");\n    const [sortOrder, setSortOrder] = useState(\"latest\");\n    const userId = localStorage.getItem(\"userId\"); // Retrieve user ID from localStorage\n\n    // Fetch TodoList for the logged-in user\n    useEffect(() => {\n        const fetchToDoList = async () => {\n            try {\n                const response = await axios.get(`http://localhost:5000/todos`, {\n                    params: { userId },\n                });\n                const fetchedTodos = response.data;\n\n                // Organize todos by folder\n                const organizedTodos = fetchedTodos.reduce((acc, todo) => {\n                    const folderId = todo.folderId || 1; // Default folder ID is 1\n                    if (!acc[folderId]) acc[folderId] = [];\n                    acc[folderId].push(todo);\n                    return acc;\n                }, {});\n\n                setTodos(organizedTodos);\n\n                // Fetch folders dynamically or use default folders\n                const uniqueFolderIds = [...new Set(fetchedTodos.map(todo => todo.folderId))];\n                const folderData = uniqueFolderIds.map(id => ({\n                    id,\n                    name: `Folder ${id}`, // Customize folder names\n                }));\n                setFolders(folderData);\n            } catch (error) {\n                console.error(\"Error fetching ToDoList\", error);\n            }\n        };\n\n        if (userId) fetchToDoList();\n    }, [userId]);\n\n    // Filter and sort todos\n    const filteredTodos = (todos[selectedFolder] || [])\n        .filter(todo => todo.title.toLowerCase().includes(query.toLowerCase()))\n        .sort((a, b) =>\n            sortOrder === \"latest\"\n                ? new Date(b.date) - new Date(a.date)\n                : new Date(a.date) - new Date(b.date)\n        );\n\n    return (\n        <div style={{ display: \"flex\", height: \"100vh\" }}>\n            {/* Folder List */}\n            <div style={{ width: \"300px\", borderRight: \"2px solid #ccc\", padding: 10 }}>\n                <h2>ToDoList</h2>\n                <ul style={{ listStyle: \"none\", padding: 0 }}>\n                    {folders.map(folder => (\n                        <li\n                            key={folder.id}\n                            style={{\n                                padding: 10,\n                                marginBottom: 5,\n                                cursor: \"pointer\",\n                                backgroundColor: selectedFolder === folder.id ? \"#ddd\" : \"transparent\",\n                            }}\n                            onClick={() => setSelectedFolder(folder.id)}\n                        >\n                            {folder.name}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n\n            {/* Todo Items */}\n            <div style={{ flex: 1, padding: 20 }}>\n                <h2>{folders.find(folder => folder.id === selectedFolder)?.name || \"Folder\"}</h2>\n                <input\n                    type=\"text\"\n                    placeholder=\"Search\"\n                    value={query}\n                    onChange={e => setQuery(e.target.value)}\n                    style={{\n                        width: \"100%\",\n                        padding: 10,\n                        marginBottom: 20,\n                    }}\n                />\n                <button onClick={() => setSortOrder(sortOrder === \"latest\" ? \"oldest\" : \"latest\")}>\n                    {sortOrder === \"latest\" ? \"Sort by Oldest\" : \"Sort by Latest\"}\n                </button>\n                <div>\n                    {filteredTodos.map(todo => (\n                        <div\n                            key={todo.id}\n                            style={{\n                                border: \"1px solid #ccc\",\n                                borderRadius: 10,\n                                padding: 10,\n                                marginBottom: 10,\n                            }}\n                        >\n                            <h3>{todo.title}</h3>\n                            <p>{todo.content}</p>\n                            <p>{todo.date}</p>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ToDoList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}