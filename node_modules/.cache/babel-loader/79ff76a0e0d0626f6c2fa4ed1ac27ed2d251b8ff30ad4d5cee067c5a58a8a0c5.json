{"ast":null,"code":"var _jsxFileName = \"/Users/ldy/Code/React/\\u110B\\u1170\\u11B8\\u1100\\u1162\\u1107\\u1161\\u11AF\\u110B\\u1173\\u11BC\\u110B\\u116D\\u11BC/week15/Todolist/src/components/ToDoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { chat } from './openai';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToDoList() {\n  _s();\n  var _folders$find, _folders$find2;\n  const navigate = useNavigate();\n  const [loggedInUser, setLoggedInUser] = useState(null);\n  const [todos, setTodos] = useState({});\n  const [folders, setFolders] = useState([{\n    id: 1,\n    name: \"개인\"\n  }, {\n    id: 2,\n    name: \"업무\"\n  }, {\n    id: 3,\n    name: \"휴지통\"\n  }]);\n  const [favorites, setFavorites] = useState([]);\n  const [selectedFolder, setSelectedFolder] = useState(1);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [editingTodo, setEditingTodo] = useState(null);\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [newFolderName, setNewFolderName] = useState(\"\");\n  const [query, setQuery] = useState(\"\");\n  const [summary, setSummary] = useState(\"\");\n  const [sortOrder, setSortOrder] = useState(\"latest\");\n  const [filterDate, setFilterDate] = useState(\"\");\n  useEffect(() => {\n    const userId = sessionStorage.getItem(\"loggedInUserId\");\n    if (!userId) {\n      navigate(\"/login\"); // 로그인 안 되어 있다면 리다이렉트\n    } else {\n      axios.get(`http://localhost:8000/users/${userId}`).then(response => {\n        setLoggedInUser(response.data);\n        setTodos(response.data.todos || {});\n      }).catch(error => {\n        console.error(\"사용자 정보를 가져오는 데 실패했습니다:\", error);\n        navigate(\"/login\"); // 오류 시 로그인 페이지로 이동\n      });\n    }\n  }, [navigate]);\n  const onLogout = () => {\n    sessionStorage.removeItem(\"loggedInUserId\"); // 로그아웃 시 sessionStorage 초기화\n    navigate(\"/login\");\n  };\n  const getCurrentDate = () => {\n    const now = new Date();\n    const year = now.getFullYear();\n    const month = String(now.getMonth() + 1).padStart(2, \"0\");\n    const date = String(now.getDate()).padStart(2, \"0\");\n    const hours = String(now.getHours()).padStart(2, \"0\");\n    const minutes = String(now.getMinutes()).padStart(2, \"0\");\n    const seconds = String(now.getSeconds()).padStart(2, \"0\");\n    return `${year}-${month}-${date} ${hours}:${minutes}:${seconds}`;\n  };\n  const onAddOrUpdate = () => {\n    if (title.trim() === \"\" || content.trim() === \"\") {\n      alert(\"제목과 내용을 입력하세요!\");\n      return;\n    }\n    const folderTodos = todos[selectedFolder] || [];\n    if (editingTodo) {\n      const updatedTodos = folderTodos.map(todo => todo.id === editingTodo.id ? {\n        ...todo,\n        title,\n        content,\n        filterDate\n      } : todo);\n      setTodos({\n        ...todos,\n        [selectedFolder]: updatedTodos\n      });\n    } else {\n      const id = folderTodos.length > 0 ? folderTodos[folderTodos.length - 1].id + 1 : 1;\n      const updatedTodos = [...folderTodos, {\n        id,\n        title,\n        content,\n        date: getCurrentDate()\n      }];\n      setTodos({\n        ...todos,\n        [selectedFolder]: updatedTodos\n      });\n    }\n    closeModal();\n  };\n  const onDelete = id => {\n    const folderTodos = todos[selectedFolder];\n    const updatedTodos = folderTodos.filter(todo => todo.id !== id);\n    const todoToDelete = folderTodos.find(todo => todo.id === id);\n    setTodos({\n      ...todos,\n      [selectedFolder]: updatedTodos\n    });\n    if (todoToDelete) {\n      setTodos(prevState => ({\n        ...prevState,\n        3: [...prevState[3], todoToDelete]\n      }));\n    }\n  };\n  const onRealDelete = id => {\n    const folderTodos = todos[selectedFolder];\n    const updatedTodos = folderTodos.filter(todo => todo.id !== id);\n    setTodos({\n      ...todos,\n      [selectedFolder]: updatedTodos\n    });\n  };\n  const TRASH_FOLDER_ID = 3;\n  const restoreTodo = id => {\n    const trashTodos = todos[TRASH_FOLDER_ID];\n    const todoToRestore = trashTodos.find(todo => todo.id === id);\n    if (todoToRestore) {\n      const originalFolder = todoToRestore.previousFolder || 1;\n      setTodos(prevState => {\n        const updatedTrashTodos = trashTodos.filter(todo => todo.id !== id);\n        const updatedOriginalFolderTodos = [...prevState[originalFolder], {\n          ...todoToRestore,\n          date: filterDate\n        }];\n        return {\n          ...prevState,\n          [TRASH_FOLDER_ID]: updatedTrashTodos,\n          [originalFolder]: updatedOriginalFolderTodos\n        };\n      });\n    }\n  };\n  const toggleFavorite = todoId => {\n    setFavorites(prev => prev.includes(todoId) ? prev.filter(id => id !== todoId) : [...prev, todoId]);\n  };\n  const openModal = (todo = null) => {\n    setIsModalOpen(true);\n    if (todo) {\n      setEditingTodo(todo);\n      setTitle(todo.title);\n      setContent(todo.content);\n      setFilterDate(todo.date);\n    } else {\n      setEditingTodo(null);\n      setTitle(\"\");\n      setContent(\"\");\n      setFilterDate(\"\");\n    }\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setEditingTodo(null);\n    setTitle(\"\");\n    setContent(\"\");\n    setSummary(\"\");\n    setFilterDate(\"\");\n  };\n  const sortTodos = todos => {\n    return todos.sort((a, b) => sortOrder === \"latest\" ? new Date(b.date) - new Date(a.date) : new Date(a.date) - new Date(b.date));\n  };\n  const filteredTodos = sortTodos((todos[selectedFolder] || []).filter(todo => (!filterDate || todo.date === filterDate) && (todo.title.toLowerCase().includes(query.toLowerCase()) || todo.content.toLowerCase().includes(query.toLowerCase()))));\n  const fetchSummary = () => {\n    const prompt = `다음은 사용자가 작성한 TodoList입니다. 내용을 간결하고, 가독성 있게 정리해주세요.\n        ${content}`;\n    chat(prompt, response => setSummary(response));\n  };\n  const updateTodoContent = () => {\n    setContent(summary);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      height: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"300px\",\n        borderRight: \"2px solid #ccc\",\n        padding: 10,\n        boxSizing: \"border-box\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"ToDoList\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(\"/login\"),\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => openModal(),\n        children: \"\\uBA54\\uBAA8 \\uC4F0\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyle: \"none\",\n          padding: 0\n        },\n        children: folders.map(folder => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => setSelectedFolder(folder.id),\n          style: {\n            cursor: \"pointer\",\n            fontWeight: selectedFolder === folder.id ? \"bold\" : \"normal\",\n            backgroundColor: selectedFolder === folder.id ? \"#e0e0e0\" : \"transparent\",\n            padding: \"5px\",\n            borderRadius: \"4px\"\n          },\n          children: folder.name\n        }, folder.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newFolderName,\n          onChange: e => setNewFolderName(e.target.value),\n          placeholder: \"\\uC0C8 \\uD3F4\\uB354 \\uC774\\uB984\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            if (newFolderName.trim()) {\n              const id = folders.length > 0 ? folders[folders.length - 1].id + 1 : 1;\n              setFolders([...folders, {\n                id,\n                name: newFolderName.trim()\n              }]);\n              setNewFolderName(\"\");\n            }\n          },\n          children: \"\\uD3F4\\uB354 \\uCD94\\uAC00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [(_folders$find = folders.find(folder => folder.id === selectedFolder)) === null || _folders$find === void 0 ? void 0 : _folders$find.name, \" \\uD3F4\\uB354 \\uC990\\uACA8\\uCC3E\\uAE30\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this), favorites.map(id => {\n        var _todos$selectedFolder;\n        const note = (_todos$selectedFolder = todos[selectedFolder]) === null || _todos$selectedFolder === void 0 ? void 0 : _todos$selectedFolder.find(todo => todo.id === id);\n        return note ? /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => openModal(note),\n          children: note.title\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 25\n        }, this) : null;\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        padding: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: (_folders$find2 = folders.find(folder => folder.id === selectedFolder)) === null || _folders$find2 === void 0 ? void 0 : _folders$find2.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uAC80\\uC0C9 (\\uC81C\\uBAA9/\\uB0B4\\uC6A9)\",\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        style: {\n          width: \"100%\",\n          padding: 10,\n          marginBottom: 20,\n          boxSizing: \"border-box\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: filterDate,\n        onChange: e => setFilterDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSortOrder(sortOrder === \"latest\" ? \"oldest\" : \"latest\"),\n        style: {\n          cursor: \"pointer\"\n        },\n        children: sortOrder === \"latest\" ? \"최신순\" : \"오래된 순\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(auto-fill, minmax(250px, 1fr))\",\n          gap: 20\n        },\n        children: filteredTodos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            border: \"1px solid #ccc\",\n            borderRadius: 10,\n            padding: 10,\n            backgroundColor: \"white\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            onClick: () => openModal(todo),\n            style: {\n              cursor: \"pointer\"\n            },\n            children: todo.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: 14,\n              color: \"#555\"\n            },\n            children: todo.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: todo.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => toggleFavorite(todo.id),\n            style: {\n              cursor: \"pointer\"\n            },\n            children: favorites.includes(todo.id) ? \"★\" : \"☆\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 29\n          }, this), selectedFolder !== 3 && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => onDelete(todo.id),\n            style: {\n              cursor: \"pointer\"\n            },\n            children: \"\\uC0AD\\uC81C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 33\n          }, this), selectedFolder === 3 && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => restoreTodo(todo.id),\n            style: {\n              cursor: \"pointer\"\n            },\n            children: \"\\uBCF5\\uC6D0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 33\n          }, this), selectedFolder === 3 && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => onRealDelete(todo.id),\n            style: {\n              cursor: \"pointer\"\n            },\n            children: \"\\uC644\\uC804 \\uC0AD\\uC81C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 33\n          }, this)]\n        }, todo.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        width: \"100%\",\n        height: \"100%\",\n        backgroundColor: \"rgba(0, 0, 0, 0.05)\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: \"white\",\n          width: \"50%\",\n          height: \"50%\",\n          borderRadius: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeModal,\n          style: {\n            cursor: \"pointer\"\n          },\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: 10\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: title,\n            onChange: e => setTitle(e.target.value),\n            placeholder: \"\\uC81C\\uBAA9 \\uC785\\uB825\",\n            style: {\n              width: \"100%\",\n              padding: 10,\n              fontSize: 16,\n              boxSizing: \"border-box\",\n              marginBottom: 10\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: content,\n            onChange: e => setContent(e.target.value),\n            placeholder: \"\\uB0B4\\uC6A9 \\uC785\\uB825\",\n            style: {\n              width: \"100%\",\n              height: 200,\n              padding: 10,\n              fontSize: 16,\n              boxSizing: \"border-box\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: fetchSummary,\n            style: {\n              cursor: \"pointer\"\n            },\n            children: \"GPT \\uB0B4\\uC6A9 \\uC694\\uC57D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 29\n          }, this), summary && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: summary\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: updateTodoContent,\n              style: {\n                cursor: \"pointer\"\n              },\n              children: \"\\uBCC0\\uACBD\\uD558\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onAddOrUpdate,\n            style: {\n              cursor: \"pointer\"\n            },\n            children: \"\\uC800\\uC7A5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 9\n  }, this);\n}\n_s(ToDoList, \"4tYV2+IoTIXo16s4+dm/03YLsNQ=\", false, function () {\n  return [useNavigate];\n});\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useState","axios","chat","useNavigate","jsxDEV","_jsxDEV","ToDoList","_s","_folders$find","_folders$find2","navigate","loggedInUser","setLoggedInUser","todos","setTodos","folders","setFolders","id","name","favorites","setFavorites","selectedFolder","setSelectedFolder","isModalOpen","setIsModalOpen","editingTodo","setEditingTodo","title","setTitle","content","setContent","newFolderName","setNewFolderName","query","setQuery","summary","setSummary","sortOrder","setSortOrder","filterDate","setFilterDate","useEffect","userId","sessionStorage","getItem","get","then","response","data","catch","error","console","onLogout","removeItem","getCurrentDate","now","Date","year","getFullYear","month","String","getMonth","padStart","date","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","onAddOrUpdate","trim","alert","folderTodos","updatedTodos","map","todo","length","closeModal","onDelete","filter","todoToDelete","find","prevState","onRealDelete","TRASH_FOLDER_ID","restoreTodo","trashTodos","todoToRestore","originalFolder","previousFolder","updatedTrashTodos","updatedOriginalFolderTodos","toggleFavorite","todoId","prev","includes","openModal","sortTodos","sort","a","b","filteredTodos","toLowerCase","fetchSummary","prompt","updateTodoContent","style","display","height","children","width","borderRight","padding","boxSizing","fileName","_jsxFileName","lineNumber","columnNumber","onClick","listStyle","folder","cursor","fontWeight","backgroundColor","borderRadius","type","value","onChange","e","target","placeholder","_todos$selectedFolder","note","flex","marginBottom","gridTemplateColumns","gap","border","fontSize","color","position","justifyContent","alignItems","_c","$RefreshReg$"],"sources":["/Users/ldy/Code/React/웹개발응용/week15/Todolist/src/components/ToDoList.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { chat } from './openai';\nimport { useNavigate } from 'react-router-dom';\n\n\nfunction ToDoList() {\n\n\n    const navigate = useNavigate();\n    const [loggedInUser, setLoggedInUser] = useState(null);\n    const [todos, setTodos] = useState({});\n    const [folders, setFolders] = useState([\n        { id: 1, name: \"개인\" },\n        { id: 2, name: \"업무\" },\n        { id: 3, name: \"휴지통\" },\n    ]);\n\n    const [favorites, setFavorites] = useState([]);\n    const [selectedFolder, setSelectedFolder] = useState(1);\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [editingTodo, setEditingTodo] = useState(null);\n    const [title, setTitle] = useState(\"\");\n    const [content, setContent] = useState(\"\");\n    const [newFolderName, setNewFolderName] = useState(\"\");\n    const [query, setQuery] = useState(\"\");\n    const [summary, setSummary] = useState(\"\");\n    const [sortOrder, setSortOrder] = useState(\"latest\");\n    const [filterDate, setFilterDate] = useState(\"\");\n\n\n    useEffect(() => {\n        const userId = sessionStorage.getItem(\"loggedInUserId\");\n        if (!userId) {\n            navigate(\"/login\"); // 로그인 안 되어 있다면 리다이렉트\n        } else {\n            axios.get(`http://localhost:8000/users/${userId}`)\n                .then((response) => {\n                    setLoggedInUser(response.data);\n                    setTodos(response.data.todos || {});\n                })\n                .catch((error) => {\n                    console.error(\"사용자 정보를 가져오는 데 실패했습니다:\", error);\n                    navigate(\"/login\"); // 오류 시 로그인 페이지로 이동\n                });\n        }\n    }, [navigate]);\n\n    const onLogout = () => {\n        sessionStorage.removeItem(\"loggedInUserId\"); // 로그아웃 시 sessionStorage 초기화\n        navigate(\"/login\");\n    };\n\n    const getCurrentDate = () => {\n        const now = new Date();\n        const year = now.getFullYear();\n        const month = String(now.getMonth() + 1).padStart(2, \"0\");\n        const date = String(now.getDate()).padStart(2, \"0\");\n        const hours = String(now.getHours()).padStart(2, \"0\");\n        const minutes = String(now.getMinutes()).padStart(2, \"0\");\n        const seconds = String(now.getSeconds()).padStart(2, \"0\");\n\n        return `${year}-${month}-${date} ${hours}:${minutes}:${seconds}`;\n    };\n\n\n    const onAddOrUpdate = () => {\n        if (title.trim() === \"\" || content.trim() === \"\") {\n            alert(\"제목과 내용을 입력하세요!\");\n            return;\n        }\n        const folderTodos = todos[selectedFolder] || [];\n        if (editingTodo) {\n            const updatedTodos = folderTodos.map((todo) =>\n                todo.id === editingTodo.id ? { ...todo, title, content, filterDate } : todo\n            );\n            setTodos({ ...todos, [selectedFolder]: updatedTodos });\n        } else {\n            const id = folderTodos.length > 0 ? folderTodos[folderTodos.length - 1].id + 1 : 1;\n            const updatedTodos = [...folderTodos, { id, title, content, date: getCurrentDate() }];\n            setTodos({ ...todos, [selectedFolder]: updatedTodos });\n        }\n        closeModal();\n    };\n\n\n    const onDelete = (id) => {\n        const folderTodos = todos[selectedFolder];\n        const updatedTodos = folderTodos.filter((todo) => todo.id !== id);\n        const todoToDelete = folderTodos.find((todo) => todo.id === id);\n        setTodos({ ...todos, [selectedFolder]: updatedTodos });\n        if (todoToDelete) {\n            setTodos(prevState => ({\n                ...prevState,\n                3: [...prevState[3], todoToDelete],\n            }));\n        }\n\n    };\n    const onRealDelete = (id) => {\n        const folderTodos = todos[selectedFolder];\n        const updatedTodos = folderTodos.filter((todo) => todo.id !== id);\n        setTodos({ ...todos, [selectedFolder]: updatedTodos });\n    };\n\n    const TRASH_FOLDER_ID = 3;\n\n    const restoreTodo = (id) => {\n        const trashTodos = todos[TRASH_FOLDER_ID];\n        const todoToRestore = trashTodos.find((todo) => todo.id === id);\n\n        if (todoToRestore) {\n            const originalFolder = todoToRestore.previousFolder || 1;\n            setTodos((prevState) => {\n                const updatedTrashTodos = trashTodos.filter((todo) => todo.id !== id);\n                const updatedOriginalFolderTodos = [\n                    ...prevState[originalFolder],\n                    { ...todoToRestore, date: filterDate },\n                ];\n                return {\n                    ...prevState,\n                    [TRASH_FOLDER_ID]: updatedTrashTodos,\n                    [originalFolder]: updatedOriginalFolderTodos,\n                };\n            });\n        }\n    };\n\n    const toggleFavorite = (todoId) => {\n        setFavorites((prev) =>\n            prev.includes(todoId)\n                ? prev.filter((id) => id !== todoId)\n                : [...prev, todoId]\n        );\n    };\n\n    const openModal = (todo = null) => {\n        setIsModalOpen(true);\n        if (todo) {\n            setEditingTodo(todo);\n            setTitle(todo.title);\n            setContent(todo.content);\n            setFilterDate(todo.date);\n        } else {\n            setEditingTodo(null);\n            setTitle(\"\");\n            setContent(\"\");\n            setFilterDate(\"\");\n        }\n    };\n\n    const closeModal = () => {\n        setIsModalOpen(false);\n        setEditingTodo(null);\n        setTitle(\"\");\n        setContent(\"\");\n        setSummary(\"\");\n        setFilterDate(\"\");\n    };\n\n    const sortTodos = (todos) => {\n        return todos.sort((a, b) =>\n            sortOrder === \"latest\"\n                ? new Date(b.date) - new Date(a.date)\n                : new Date(a.date) - new Date(b.date)\n        );\n    };\n\n    const filteredTodos = sortTodos(\n        (todos[selectedFolder] || []).filter(\n            (todo) =>\n                (!filterDate || todo.date === filterDate) &&\n                (todo.title.toLowerCase().includes(query.toLowerCase()) ||\n                    todo.content.toLowerCase().includes(query.toLowerCase()))\n        )\n    );\n\n    const fetchSummary = () => {\n        const prompt = `다음은 사용자가 작성한 TodoList입니다. 내용을 간결하고, 가독성 있게 정리해주세요.\n        ${content}`;\n\n        chat(prompt, (response) => setSummary(response));\n    };\n\n    const updateTodoContent = () => {\n        setContent(summary);\n    };\n\n    return (\n        <div style={{ display: \"flex\", height: \"100vh\" }}>\n            {/* 폴더 리스트 */}\n            <div\n                style={{\n                    width: \"300px\",\n                    borderRight: \"2px solid #ccc\",\n                    padding: 10,\n                    boxSizing: \"border-box\",\n                }}\n            >\n                <h2>ToDoList</h2>\n                <button\n                    onClick={() => navigate(\"/login\")}\n\n                >\n                    로그인\n                </button>\n\n                <button\n                    onClick={() => openModal()}\n                >\n                    메모 쓰기\n                </button>\n\n                <ul style={{ listStyle: \"none\", padding: 0 }}>\n                    {folders.map((folder) => (\n                        <li\n                            key={folder.id}\n                            onClick={() => setSelectedFolder(folder.id)}\n                            style={{\n                                cursor: \"pointer\",\n                                fontWeight: selectedFolder === folder.id ? \"bold\" : \"normal\",\n                                backgroundColor: selectedFolder === folder.id ? \"#e0e0e0\" : \"transparent\",\n                                padding: \"5px\",\n                                borderRadius: \"4px\"\n                            }}\n                        >\n                            {folder.name}\n                        </li>\n                    ))}\n                </ul>\n\n                <div>\n                    <input\n                        type=\"text\"\n                        value={newFolderName}\n                        onChange={(e) => setNewFolderName(e.target.value)}\n                        placeholder=\"새 폴더 이름\"\n                    />\n                    <button\n                        onClick={() => {\n                            if (newFolderName.trim()) {\n                                const id = folders.length > 0 ? folders[folders.length - 1].id + 1 : 1;\n                                setFolders([...folders, { id, name: newFolderName.trim() }]);\n                                setNewFolderName(\"\");\n                            }\n                        }}\n\n                    >\n                        폴더 추가\n                    </button>\n                </div>\n                <h3>{folders.find((folder) => folder.id === selectedFolder)?.name} 폴더 즐겨찾기</h3>\n                {favorites.map((id) => {\n                    const note = todos[selectedFolder]?.find((todo) => todo.id === id);\n                    return note ? (\n                        <div key={id} onClick={() => openModal(note)}>\n                            {note.title}\n                        </div>\n                    ) : null;\n                })}\n            </div>\n\n            {/* 메모 영역 */}\n            <div style={{ flex: 1, padding: 20 }}>\n                <h2>{folders.find((folder) => folder.id === selectedFolder)?.name}</h2>\n                <input\n                    type=\"text\"\n                    placeholder=\"검색 (제목/내용)\"\n                    value={query}\n                    onChange={(e) => setQuery(e.target.value)}\n                    style={{\n                        width: \"100%\",\n                        padding: 10,\n                        marginBottom: 20,\n                        boxSizing: \"border-box\",\n                    }}\n                />\n                <input\n                    type=\"date\"\n                    value={filterDate}\n                    onChange={(e) => setFilterDate(e.target.value)}\n\n                />\n                <button onClick={() => setSortOrder(sortOrder === \"latest\" ? \"oldest\" : \"latest\")}\n                    style={{\n                        cursor: \"pointer\"\n                    }}>\n                    {sortOrder === \"latest\" ? \"최신순\" : \"오래된 순\"}\n                </button>\n                <div\n                    style={{\n                        display: \"grid\",\n                        gridTemplateColumns: \"repeat(auto-fill, minmax(250px, 1fr))\",\n                        gap: 20,\n                    }}\n                >\n                    {filteredTodos.map((todo) => (\n                        <div\n                            key={todo.id}\n                            style={{\n                                border: \"1px solid #ccc\",\n                                borderRadius: 10,\n                                padding: 10,\n                                backgroundColor: \"white\",\n                            }}\n                        >\n                            <h3\n                                onClick={() => openModal(todo)}\n                                style={{\n                                    cursor: \"pointer\"\n                                }}>\n                                {todo.title}\n                            </h3>\n                            <p style={{ fontSize: 14, color: \"#555\" }}>{todo.content}</p>\n                            <p>{todo.date}</p>\n\n                            <button onClick={() => toggleFavorite(todo.id)}\n                                style={{\n                                    cursor: \"pointer\"\n                                }}>\n                                {favorites.includes(todo.id) ? \"★\" : \"☆\"}\n                            </button>\n                            {selectedFolder !== 3 && (\n                                <button onClick={() => onDelete(todo.id)}\n                                    style={{\n                                        cursor: \"pointer\"\n                                    }}>\n                                    삭제\n                                </button>)}\n                            {selectedFolder === 3 && (\n                                <button\n                                    onClick={() => restoreTodo(todo.id)}\n                                    style={{\n                                        cursor: \"pointer\"\n                                    }}>\n                                    복원\n                                </button>\n                            )}\n                            {selectedFolder === 3 && (\n                                <button onClick={() => onRealDelete(todo.id)}\n                                    style={{\n                                        cursor: \"pointer\"\n                                    }}>\n                                    완전 삭제\n                                </button>\n                            )}\n                        </div>\n                    ))}\n                </div>\n            </div>\n\n            {isModalOpen && (\n                <div\n                    style={{\n                        position: \"fixed\",\n                        width: \"100%\",\n                        height: \"100%\",\n                        backgroundColor: \"rgba(0, 0, 0, 0.05)\",\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                    }}>\n                    <div\n                        style={{\n                            backgroundColor: \"white\",\n                            width: \"50%\",\n                            height: \"50%\",\n                            borderRadius: 10,\n                        }}>\n                        <button\n                            onClick={closeModal}\n                            style={{\n                                cursor: \"pointer\"\n                            }}>\n                            ✕\n                        </button>\n                        <div style={{ padding: 10 }}>\n                            <input\n                                type=\"text\"\n                                value={title}\n                                onChange={(e) => setTitle(e.target.value)}\n                                placeholder=\"제목 입력\"\n                                style={{\n                                    width: \"100%\",\n                                    padding: 10,\n                                    fontSize: 16,\n                                    boxSizing: \"border-box\",\n                                    marginBottom: 10,\n                                }}\n                            />\n                            <textarea\n                                value={content}\n                                onChange={(e) => setContent(e.target.value)}\n                                placeholder=\"내용 입력\"\n                                style={{\n                                    width: \"100%\",\n                                    height: 200,\n                                    padding: 10,\n                                    fontSize: 16,\n                                    boxSizing: \"border-box\",\n                                }}\n                            ></textarea>\n\n                            <button\n                                onClick={fetchSummary}\n                                style={{\n                                    cursor: \"pointer\"\n                                }}>\n                                GPT 내용 요약\n                            </button>\n                            {summary && (\n                                <div>\n                                    <p>{summary}</p>\n                                    <button\n                                        onClick={updateTodoContent}\n                                        style={{\n                                            cursor: \"pointer\"\n                                        }}>\n                                        변경하기\n                                    </button>\n                                </div>\n                            )}\n                            <button\n                                onClick={onAddOrUpdate}\n                                style={{\n                                    cursor: \"pointer\"\n                                }}>\n                                저장\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default ToDoList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}