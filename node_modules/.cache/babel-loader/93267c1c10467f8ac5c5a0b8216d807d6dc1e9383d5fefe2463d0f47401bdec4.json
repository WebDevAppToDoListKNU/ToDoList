{"ast":null,"code":"var _jsxFileName = \"/Users/ldy/Code/React/\\u110B\\u1170\\u11B8\\u1100\\u1162\\u1107\\u1161\\u11AF\\u110B\\u1173\\u11BC\\u110B\\u116D\\u11BC/week15/Todolist/src/components/ToDoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToDoList() {\n  _s();\n  var _folders$find;\n  const navigate = useNavigate();\n  const [loggedInUser, setLoggedInUser] = useState(null); // 현재 로그인한 사용자\n  const [folders, setFolders] = useState([{\n    id: 1,\n    name: \"개인\"\n  }, {\n    id: 2,\n    name: \"업무\"\n  }, {\n    id: 3,\n    name: \"휴지통\"\n  }]);\n  const [todos, setTodos] = useState({}); // 서버에서 불러온 todos\n  const [selectedFolder, setSelectedFolder] = useState(1);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [editingTodo, setEditingTodo] = useState(null);\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [newFolderName, setNewFolderName] = useState(\"\");\n  const [query, setQuery] = useState(\"\");\n  const [filterDate, setFilterDate] = useState(\"\");\n  const [sortOrder, setSortOrder] = useState(\"latest\");\n\n  // 로그인 사용자 가져오기\n  useEffect(() => {\n    const userId = sessionStorage.getItem(\"loggedInUserId\");\n    if (userId) {\n      axios.get(`http://localhost:8000/users/${userId}`).then(response => {\n        setLoggedInUser(response.data);\n        setTodos(response.data.todos || {}); // 해당 사용자의 todos 설정\n      }).catch(error => console.error(\"사용자 정보를 가져오는 데 실패했습니다.\", error));\n    } else {\n      navigate(\"/login\"); // 로그인이 안 되어 있다면 로그인 페이지로 리다이렉트\n    }\n  }, [navigate]);\n  const saveTodosToServer = updatedTodos => {\n    if (loggedInUser) {\n      axios.patch(`http://localhost:8000/users/${loggedInUser.id}`, {\n        todos: updatedTodos\n      }).then(() => setTodos(updatedTodos)).catch(error => console.error(\"데이터 저장 실패:\", error));\n    }\n  };\n  const onAddOrUpdate = () => {\n    if (title.trim() === \"\" || content.trim() === \"\") {\n      alert(\"제목과 내용을 입력하세요!\");\n      return;\n    }\n    const folderTodos = todos[selectedFolder] || [];\n    let updatedTodos;\n    if (editingTodo) {\n      // 수정\n      const updatedFolderTodos = folderTodos.map(todo => todo.id === editingTodo.id ? {\n        ...todo,\n        title,\n        content,\n        date: getCurrentDate()\n      } : todo);\n      updatedTodos = {\n        ...todos,\n        [selectedFolder]: updatedFolderTodos\n      };\n    } else {\n      // 추가\n      const id = folderTodos.length > 0 ? folderTodos[folderTodos.length - 1].id + 1 : 1;\n      const newTodo = {\n        id,\n        title,\n        content,\n        date: getCurrentDate()\n      };\n      updatedTodos = {\n        ...todos,\n        [selectedFolder]: [...folderTodos, newTodo]\n      };\n    }\n    saveTodosToServer(updatedTodos); // 서버에 저장\n    closeModal();\n  };\n  const onDelete = id => {\n    const folderTodos = todos[selectedFolder];\n    const updatedFolderTodos = folderTodos.filter(todo => todo.id !== id);\n    const updatedTodos = {\n      ...todos,\n      [selectedFolder]: updatedFolderTodos\n    };\n    saveTodosToServer(updatedTodos); // 서버에 저장\n  };\n  const getCurrentDate = () => {\n    const now = new Date();\n    return now.toISOString().split(\"T\")[0]; // YYYY-MM-DD 형식 반환\n  };\n  const openModal = (todo = null) => {\n    setIsModalOpen(true);\n    if (todo) {\n      setEditingTodo(todo);\n      setTitle(todo.title);\n      setContent(todo.content);\n    } else {\n      setEditingTodo(null);\n      setTitle(\"\");\n      setContent(\"\");\n    }\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setEditingTodo(null);\n    setTitle(\"\");\n    setContent(\"\");\n  };\n  const filteredTodos = (todos[selectedFolder] || []).filter(todo => (!filterDate || todo.date === filterDate) && (todo.title.toLowerCase().includes(query.toLowerCase()) || todo.content.toLowerCase().includes(query.toLowerCase())));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      height: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"300px\",\n        borderRight: \"2px solid #ccc\",\n        padding: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"ToDoList\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(\"/login\"),\n        children: \"\\uB85C\\uADF8\\uC544\\uC6C3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => openModal(),\n        children: \"\\uBA54\\uBAA8 \\uC4F0\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyle: \"none\",\n          padding: 0\n        },\n        children: folders.map(folder => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => setSelectedFolder(folder.id),\n          style: {\n            cursor: \"pointer\",\n            fontWeight: selectedFolder === folder.id ? \"bold\" : \"normal\"\n          },\n          children: folder.name\n        }, folder.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        padding: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: (_folders$find = folders.find(folder => folder.id === selectedFolder)) === null || _folders$find === void 0 ? void 0 : _folders$find.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uAC80\\uC0C9\",\n        value: query,\n        onChange: e => setQuery(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: filteredTodos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: todo.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: todo.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: todo.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => onDelete(todo.id),\n            children: \"\\uC0AD\\uC81C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 29\n          }, this)]\n        }, todo.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        backgroundColor: \"rgba(0,0,0,0.5)\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: \"white\",\n          margin: \"auto\",\n          padding: 20\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          placeholder: \"\\uC81C\\uBAA9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: content,\n          onChange: e => setContent(e.target.value),\n          placeholder: \"\\uB0B4\\uC6A9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onAddOrUpdate,\n          children: \"\\uC800\\uC7A5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeModal,\n          children: \"\\uCDE8\\uC18C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 9\n  }, this);\n}\n_s(ToDoList, \"uAcbUAyYnjLW8YdFaj/ka6xpELA=\", false, function () {\n  return [useNavigate];\n});\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","ToDoList","_s","_folders$find","navigate","loggedInUser","setLoggedInUser","folders","setFolders","id","name","todos","setTodos","selectedFolder","setSelectedFolder","isModalOpen","setIsModalOpen","editingTodo","setEditingTodo","title","setTitle","content","setContent","newFolderName","setNewFolderName","query","setQuery","filterDate","setFilterDate","sortOrder","setSortOrder","userId","sessionStorage","getItem","get","then","response","data","catch","error","console","saveTodosToServer","updatedTodos","patch","onAddOrUpdate","trim","alert","folderTodos","updatedFolderTodos","map","todo","date","getCurrentDate","length","newTodo","closeModal","onDelete","filter","now","Date","toISOString","split","openModal","filteredTodos","toLowerCase","includes","style","display","height","children","width","borderRight","padding","fileName","_jsxFileName","lineNumber","columnNumber","onClick","listStyle","folder","cursor","fontWeight","flex","find","type","placeholder","value","onChange","e","target","position","top","left","backgroundColor","margin","_c","$RefreshReg$"],"sources":["/Users/ldy/Code/React/웹개발응용/week15/Todolist/src/components/ToDoList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction ToDoList() {\n    const navigate = useNavigate();\n\n    const [loggedInUser, setLoggedInUser] = useState(null); // 현재 로그인한 사용자\n    const [folders, setFolders] = useState([\n        { id: 1, name: \"개인\" },\n        { id: 2, name: \"업무\" },\n        { id: 3, name: \"휴지통\" },\n    ]);\n    const [todos, setTodos] = useState({}); // 서버에서 불러온 todos\n    const [selectedFolder, setSelectedFolder] = useState(1);\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [editingTodo, setEditingTodo] = useState(null);\n    const [title, setTitle] = useState(\"\");\n    const [content, setContent] = useState(\"\");\n    const [newFolderName, setNewFolderName] = useState(\"\");\n    const [query, setQuery] = useState(\"\");\n    const [filterDate, setFilterDate] = useState(\"\");\n    const [sortOrder, setSortOrder] = useState(\"latest\");\n\n    // 로그인 사용자 가져오기\n    useEffect(() => {\n        const userId = sessionStorage.getItem(\"loggedInUserId\");\n        if (userId) {\n            axios.get(`http://localhost:8000/users/${userId}`)\n                .then((response) => {\n                    setLoggedInUser(response.data);\n                    setTodos(response.data.todos || {}); // 해당 사용자의 todos 설정\n                })\n                .catch((error) => console.error(\"사용자 정보를 가져오는 데 실패했습니다.\", error));\n        } else {\n            navigate(\"/login\"); // 로그인이 안 되어 있다면 로그인 페이지로 리다이렉트\n        }\n    }, [navigate]);\n\n    const saveTodosToServer = (updatedTodos) => {\n        if (loggedInUser) {\n            axios.patch(`http://localhost:8000/users/${loggedInUser.id}`, {\n                todos: updatedTodos,\n            })\n                .then(() => setTodos(updatedTodos))\n                .catch((error) => console.error(\"데이터 저장 실패:\", error));\n        }\n    };\n\n    const onAddOrUpdate = () => {\n        if (title.trim() === \"\" || content.trim() === \"\") {\n            alert(\"제목과 내용을 입력하세요!\");\n            return;\n        }\n        const folderTodos = todos[selectedFolder] || [];\n        let updatedTodos;\n\n        if (editingTodo) {\n            // 수정\n            const updatedFolderTodos = folderTodos.map((todo) =>\n                todo.id === editingTodo.id ? { ...todo, title, content, date: getCurrentDate() } : todo\n            );\n            updatedTodos = { ...todos, [selectedFolder]: updatedFolderTodos };\n        } else {\n            // 추가\n            const id = folderTodos.length > 0 ? folderTodos[folderTodos.length - 1].id + 1 : 1;\n            const newTodo = { id, title, content, date: getCurrentDate() };\n            updatedTodos = { ...todos, [selectedFolder]: [...folderTodos, newTodo] };\n        }\n\n        saveTodosToServer(updatedTodos); // 서버에 저장\n        closeModal();\n    };\n\n    const onDelete = (id) => {\n        const folderTodos = todos[selectedFolder];\n        const updatedFolderTodos = folderTodos.filter((todo) => todo.id !== id);\n        const updatedTodos = { ...todos, [selectedFolder]: updatedFolderTodos };\n\n        saveTodosToServer(updatedTodos); // 서버에 저장\n    };\n\n    const getCurrentDate = () => {\n        const now = new Date();\n        return now.toISOString().split(\"T\")[0]; // YYYY-MM-DD 형식 반환\n    };\n\n    const openModal = (todo = null) => {\n        setIsModalOpen(true);\n        if (todo) {\n            setEditingTodo(todo);\n            setTitle(todo.title);\n            setContent(todo.content);\n        } else {\n            setEditingTodo(null);\n            setTitle(\"\");\n            setContent(\"\");\n        }\n    };\n\n    const closeModal = () => {\n        setIsModalOpen(false);\n        setEditingTodo(null);\n        setTitle(\"\");\n        setContent(\"\");\n    };\n\n    const filteredTodos = (todos[selectedFolder] || []).filter((todo) =>\n        (!filterDate || todo.date === filterDate) &&\n        (todo.title.toLowerCase().includes(query.toLowerCase()) ||\n            todo.content.toLowerCase().includes(query.toLowerCase()))\n    );\n\n    return (\n        <div style={{ display: \"flex\", height: \"100vh\" }}>\n            {/* 폴더 영역 */}\n            <div style={{ width: \"300px\", borderRight: \"2px solid #ccc\", padding: 10 }}>\n                <h2>ToDoList</h2>\n                <button onClick={() => navigate(\"/login\")}>로그아웃</button>\n                <button onClick={() => openModal()}>메모 쓰기</button>\n                <ul style={{ listStyle: \"none\", padding: 0 }}>\n                    {folders.map((folder) => (\n                        <li\n                            key={folder.id}\n                            onClick={() => setSelectedFolder(folder.id)}\n                            style={{\n                                cursor: \"pointer\",\n                                fontWeight: selectedFolder === folder.id ? \"bold\" : \"normal\",\n                            }}\n                        >\n                            {folder.name}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n\n            {/* 메모 영역 */}\n            <div style={{ flex: 1, padding: 20 }}>\n                <h2>{folders.find((folder) => folder.id === selectedFolder)?.name}</h2>\n                <input\n                    type=\"text\"\n                    placeholder=\"검색\"\n                    value={query}\n                    onChange={(e) => setQuery(e.target.value)}\n                />\n                <div>\n                    {filteredTodos.map((todo) => (\n                        <div key={todo.id}>\n                            <h3>{todo.title}</h3>\n                            <p>{todo.content}</p>\n                            <p>{todo.date}</p>\n                            <button onClick={() => onDelete(todo.id)}>삭제</button>\n                        </div>\n                    ))}\n                </div>\n            </div>\n\n            {/* 모달 */}\n            {isModalOpen && (\n                <div style={{ position: \"fixed\", top: 0, left: 0, width: \"100%\", height: \"100%\", backgroundColor: \"rgba(0,0,0,0.5)\" }}>\n                    <div style={{ backgroundColor: \"white\", margin: \"auto\", padding: 20 }}>\n                        <input\n                            type=\"text\"\n                            value={title}\n                            onChange={(e) => setTitle(e.target.value)}\n                            placeholder=\"제목\"\n                        />\n                        <textarea\n                            value={content}\n                            onChange={(e) => setContent(e.target.value)}\n                            placeholder=\"내용\"\n                        ></textarea>\n                        <button onClick={onAddOrUpdate}>저장</button>\n                        <button onClick={closeModal}>취소</button>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default ToDoList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}