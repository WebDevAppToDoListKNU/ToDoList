{"ast":null,"code":"var _jsxFileName = \"/Users/ldy/Code/React/\\u110B\\u1170\\u11B8\\u1100\\u1162\\u1107\\u1161\\u11AF\\u110B\\u1173\\u11BC\\u110B\\u116D\\u11BC/week15/src/components/CombinedTodolist.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Todolist() {\n  _s();\n  var _folders$find;\n  const [folders, setFolders] = useState([{\n    id: 1,\n    name: \"개인\"\n  }, {\n    id: 2,\n    name: \"업무\"\n  }]);\n  const [todos, setTodos] = useState({\n    1: [{\n      id: 1,\n      title: \"운동하기\",\n      content: \"매일 아침 30분 운동\",\n      check: false\n    }, {\n      id: 2,\n      title: \"책 읽기\",\n      content: \"소설 한 권 읽기\",\n      check: true\n    }],\n    2: [{\n      id: 1,\n      title: \"프로젝트 보고서 작성\",\n      content: \"최종 보고서 작성 및 검토\",\n      check: false\n    }, {\n      id: 2,\n      title: \"팀 회의 준비\",\n      content: \"발표 자료 준비 및 회의록 작성\",\n      check: true\n    }]\n  });\n  const [selectedFolder, setSelectedFolder] = useState(1);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [editingTodo, setEditingTodo] = useState(null);\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [newFolderName, setNewFolderName] = useState(\"\");\n  const [query, setQuery] = useState(\"\");\n  const onAddOrUpdate = () => {\n    if (title.trim() === \"\" || content.trim() === \"\") {\n      alert(\"제목과 내용을 입력하세요!\");\n      return;\n    }\n    const folderTodos = todos[selectedFolder] || [];\n    if (editingTodo) {\n      const updatedTodos = folderTodos.map(todo => todo.id === editingTodo.id ? {\n        ...todo,\n        title,\n        content\n      } : todo);\n      setTodos({\n        ...todos,\n        [selectedFolder]: updatedTodos\n      });\n    } else {\n      const id = folderTodos.length > 0 ? folderTodos[folderTodos.length - 1].id + 1 : 1;\n      const updatedTodos = [...folderTodos, {\n        id,\n        title,\n        content,\n        check: false\n      }];\n      setTodos({\n        ...todos,\n        [selectedFolder]: updatedTodos\n      });\n    }\n    closeModal();\n  };\n  const onDelete = id => {\n    const folderTodos = todos[selectedFolder];\n    const updatedTodos = folderTodos.filter(todo => todo.id !== id);\n    setTodos({\n      ...todos,\n      [selectedFolder]: updatedTodos\n    });\n  };\n  const openModal = (todo = null) => {\n    setIsModalOpen(true);\n    if (todo) {\n      setEditingTodo(todo);\n      setTitle(todo.title);\n      setContent(todo.content);\n    } else {\n      setEditingTodo(null);\n      setTitle(\"\");\n      setContent(\"\");\n    }\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setEditingTodo(null);\n    setTitle(\"\");\n    setContent(\"\");\n  };\n  const filteredTodos = (todos[selectedFolder] || []).filter(todo => todo.title.toLowerCase().includes(query.toLowerCase()) || todo.content.toLowerCase().includes(query.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      height: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"300px\",\n        borderRight: \"2px solid #ccc\",\n        padding: 10,\n        boxSizing: \"border-box\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"ToDoList\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => openModal(),\n        style: {\n          width: \"100%\",\n          padding: 10,\n          backgroundColor: \"#2196f3\",\n          fontSize: 16,\n          fontWeight: \"bold\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: 5,\n          cursor: \"pointer\"\n        },\n        children: \"\\uBA54\\uBAA8 \\uC4F0\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyle: \"none\",\n          padding: 0\n        },\n        children: folders.map(folder => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            padding: 10,\n            marginBottom: 5,\n            cursor: \"pointer\",\n            backgroundColor: selectedFolder === folder.id ? \"#ddd\" : \"transparent\"\n          },\n          onClick: () => setSelectedFolder(folder.id),\n          children: folder.name\n        }, folder.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newFolderName,\n          onChange: e => setNewFolderName(e.target.value),\n          placeholder: \"\\uC0C8 \\uD3F4\\uB354 \\uC774\\uB984\",\n          style: {\n            width: \"100%\",\n            padding: 5,\n            marginBottom: 5,\n            boxSizing: \"border-box\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            if (newFolderName.trim()) {\n              const id = folders.length > 0 ? folders[folders.length - 1].id + 1 : 1;\n              setFolders([...folders, {\n                id,\n                name: newFolderName.trim()\n              }]);\n              setNewFolderName(\"\");\n            }\n          },\n          style: {\n            width: \"100%\",\n            padding: 10,\n            backgroundColor: \"#4caf50\",\n            color: \"white\",\n            border: \"none\",\n            cursor: \"pointer\"\n          },\n          children: \"\\uD3F4\\uB354 \\uCD94\\uAC00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        padding: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [(_folders$find = folders.find(folder => folder.id === selectedFolder)) === null || _folders$find === void 0 ? void 0 : _folders$find.name, \" To-Do List\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uAC80\\uC0C9 (\\uC81C\\uBAA9/\\uB0B4\\uC6A9)\",\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        style: {\n          width: \"100%\",\n          padding: 10,\n          marginBottom: 20,\n          boxSizing: \"border-box\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(auto-fill, minmax(250px, 1fr))\",\n          gap: 20\n        },\n        children: filteredTodos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            border: \"1px solid #ccc\",\n            borderRadius: 10,\n            padding: 10,\n            backgroundColor: \"white\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            onClick: () => openModal(todo),\n            style: {\n              cursor: \"pointer\",\n              fontSize: 18,\n              margin: 0,\n              textDecoration: todo.check ? \"line-through\" : \"none\"\n            },\n            children: todo.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: 14,\n              color: \"#555\"\n            },\n            children: todo.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => onDelete(todo.id),\n            style: {\n              backgroundColor: \"#ff4d4d\",\n              color: \"white\",\n              border: \"none\",\n              borderRadius: 5,\n              padding: \"5px 10px\",\n              cursor: \"pointer\",\n              fontSize: 12,\n              float: \"right\"\n            },\n            children: \"\\uC0AD\\uC81C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 29\n          }, this)]\n        }, todo.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        width: \"100%\",\n        height: \"100%\",\n        backgroundColor: \"rgba(0, 0, 0, 0.3)\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: \"white\",\n          width: \"80%\",\n          height: \"80%\",\n          borderRadius: 10,\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: \"100%\",\n            height: \"10%\",\n            backgroundColor: \"rgba(0, 0, 0, 0.05)\",\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onAddOrUpdate,\n            style: {\n              padding: 5,\n              marginLeft: 10,\n              fontSize: 20,\n              color: \"black\",\n              cursor: \"pointer\"\n            },\n            children: \"\\uC800\\uC7A5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeModal,\n            style: {\n              padding: 5,\n              marginRight: 10,\n              fontSize: 30,\n              color: \"gray\",\n              border: \"none\",\n              cursor: \"pointer\"\n            },\n            children: \"\\u2715\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          placeholder: \"\\uC81C\\uBAA9\",\n          maxLength: 100,\n          style: {\n            width: \"80%\",\n            height: \"10%\",\n            fontSize: 30,\n            fontWeight: \"bold\",\n            marginTop: 20,\n            marginBottom: 15,\n            border: \"none\",\n            resize: \"none\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: content,\n          onChange: e => setContent(e.target.value),\n          placeholder: \"\\uB0B4\\uC6A9\",\n          style: {\n            width: \"80%\",\n            height: \"60%\",\n            fontSize: 20,\n            lineHeight: 1.5,\n            border: \"none\",\n            resize: \"none\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n_s(Todolist, \"HcYKm3vG/fqpPfnsB0Kw5ZV2MSk=\");\n_c = Todolist;\nexport default Todolist;\nvar _c;\n$RefreshReg$(_c, \"Todolist\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Todolist","_s","_folders$find","folders","setFolders","id","name","todos","setTodos","title","content","check","selectedFolder","setSelectedFolder","isModalOpen","setIsModalOpen","editingTodo","setEditingTodo","setTitle","setContent","newFolderName","setNewFolderName","query","setQuery","onAddOrUpdate","trim","alert","folderTodos","updatedTodos","map","todo","length","closeModal","onDelete","filter","openModal","filteredTodos","toLowerCase","includes","style","display","height","children","width","borderRight","padding","boxSizing","fileName","_jsxFileName","lineNumber","columnNumber","onClick","backgroundColor","fontSize","fontWeight","color","border","borderRadius","cursor","listStyle","folder","marginBottom","type","value","onChange","e","target","placeholder","flex","find","gridTemplateColumns","gap","margin","textDecoration","float","position","justifyContent","alignItems","textAlign","marginLeft","marginRight","maxLength","marginTop","resize","lineHeight","_c","$RefreshReg$"],"sources":["/Users/ldy/Code/React/웹개발응용/week15/src/components/CombinedTodolist.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction Todolist() {\n    const [folders, setFolders] = useState([\n        { id: 1, name: \"개인\" },\n        { id: 2, name: \"업무\" },\n    ]);\n    const [todos, setTodos] = useState({\n        1: [\n            { id: 1, title: \"운동하기\", content: \"매일 아침 30분 운동\", check: false },\n            { id: 2, title: \"책 읽기\", content: \"소설 한 권 읽기\", check: true },\n        ],\n        2: [\n            { id: 1, title: \"프로젝트 보고서 작성\", content: \"최종 보고서 작성 및 검토\", check: false },\n            { id: 2, title: \"팀 회의 준비\", content: \"발표 자료 준비 및 회의록 작성\", check: true },\n        ],\n    });\n    const [selectedFolder, setSelectedFolder] = useState(1);\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [editingTodo, setEditingTodo] = useState(null);\n    const [title, setTitle] = useState(\"\");\n    const [content, setContent] = useState(\"\");\n    const [newFolderName, setNewFolderName] = useState(\"\");\n    const [query, setQuery] = useState(\"\");\n\n    const onAddOrUpdate = () => {\n        if (title.trim() === \"\" || content.trim() === \"\") {\n            alert(\"제목과 내용을 입력하세요!\");\n            return;\n        }\n        const folderTodos = todos[selectedFolder] || [];\n        if (editingTodo) {\n            const updatedTodos = folderTodos.map((todo) =>\n                todo.id === editingTodo.id ? { ...todo, title, content } : todo\n            );\n            setTodos({ ...todos, [selectedFolder]: updatedTodos });\n        } else {\n            const id = folderTodos.length > 0 ? folderTodos[folderTodos.length - 1].id + 1 : 1;\n            const updatedTodos = [...folderTodos, { id, title, content, check: false }];\n            setTodos({ ...todos, [selectedFolder]: updatedTodos });\n        }\n        closeModal();\n    };\n\n    const onDelete = (id) => {\n        const folderTodos = todos[selectedFolder];\n        const updatedTodos = folderTodos.filter((todo) => todo.id !== id);\n        setTodos({ ...todos, [selectedFolder]: updatedTodos });\n    };\n\n    const openModal = (todo = null) => {\n        setIsModalOpen(true);\n        if (todo) {\n            setEditingTodo(todo);\n            setTitle(todo.title);\n            setContent(todo.content);\n        } else {\n            setEditingTodo(null);\n            setTitle(\"\");\n            setContent(\"\");\n        }\n    };\n\n    const closeModal = () => {\n        setIsModalOpen(false);\n        setEditingTodo(null);\n        setTitle(\"\");\n        setContent(\"\");\n    };\n\n    const filteredTodos = (todos[selectedFolder] || []).filter(\n        (todo) =>\n            todo.title.toLowerCase().includes(query.toLowerCase()) ||\n            todo.content.toLowerCase().includes(query.toLowerCase())\n    );\n\n    return (\n        <div style={{ display: \"flex\", height: \"100vh\" }}>\n            {/* 폴더 리스트 */}\n            <div\n                style={{\n                    width: \"300px\",\n                    borderRight: \"2px solid #ccc\",\n                    padding: 10,\n                    boxSizing: \"border-box\",\n                }}\n            >\n                <h2>ToDoList</h2>\n                <button\n                    onClick={() => openModal()}\n                    style={{\n                        width: \"100%\",\n                        padding: 10,\n                        backgroundColor: \"#2196f3\",\n                        fontSize: 16,\n                        fontWeight: \"bold\",\n                        color: \"white\",\n                        border: \"none\",\n                        borderRadius: 5,\n                        cursor: \"pointer\",\n                    }}\n                >\n                    메모 쓰기\n                </button>\n\n                <ul style={{ listStyle: \"none\", padding: 0 }}>\n                    {folders.map((folder) => (\n                        <li\n                            key={folder.id}\n                            style={{\n                                padding: 10,\n                                marginBottom: 5,\n                                cursor: \"pointer\",\n                                backgroundColor: selectedFolder === folder.id ? \"#ddd\" : \"transparent\",\n                            }}\n                            onClick={() => setSelectedFolder(folder.id)}\n                        >\n                            {folder.name}\n                        </li>\n                    ))}\n                </ul>\n                <div>\n                    <input\n                        type=\"text\"\n                        value={newFolderName}\n                        onChange={(e) => setNewFolderName(e.target.value)}\n                        placeholder=\"새 폴더 이름\"\n                        style={{\n                            width: \"100%\",\n                            padding: 5,\n                            marginBottom: 5,\n                            boxSizing: \"border-box\",\n                        }}\n                    />\n                    <button\n                        onClick={() => {\n                            if (newFolderName.trim()) {\n                                const id = folders.length > 0 ? folders[folders.length - 1].id + 1 : 1;\n                                setFolders([...folders, { id, name: newFolderName.trim() }]);\n                                setNewFolderName(\"\");\n                            }\n                        }}\n                        style={{\n                            width: \"100%\",\n                            padding: 10,\n                            backgroundColor: \"#4caf50\",\n                            color: \"white\",\n                            border: \"none\",\n                            cursor: \"pointer\",\n                        }}\n                    >\n                        폴더 추가\n                    </button>\n                </div>\n            </div>\n\n            {/* 메모 영역 */}\n            <div style={{ flex: 1, padding: 20 }}>\n                <h2>{folders.find((folder) => folder.id === selectedFolder)?.name} To-Do List</h2>\n                <input\n                    type=\"text\"\n                    placeholder=\"검색 (제목/내용)\"\n                    value={query}\n                    onChange={(e) => setQuery(e.target.value)}\n                    style={{\n                        width: \"100%\",\n                        padding: 10,\n                        marginBottom: 20,\n                        boxSizing: \"border-box\",\n                    }}\n                />\n                <div\n                    style={{\n                        display: \"grid\",\n                        gridTemplateColumns: \"repeat(auto-fill, minmax(250px, 1fr))\",\n                        gap: 20,\n                    }}\n                >\n                    {filteredTodos.map((todo) => (\n                        <div\n                            key={todo.id}\n                            style={{\n                                border: \"1px solid #ccc\",\n                                borderRadius: 10,\n                                padding: 10,\n                                backgroundColor: \"white\",\n                            }}\n                        >\n                            <h3\n                                onClick={() => openModal(todo)}\n                                style={{\n                                    cursor: \"pointer\",\n                                    fontSize: 18,\n                                    margin: 0,\n                                    textDecoration: todo.check ? \"line-through\" : \"none\",\n                                }}\n                            >\n                                {todo.title}\n                            </h3>\n                            <p style={{ fontSize: 14, color: \"#555\" }}>{todo.content}</p>\n                            <button\n                                onClick={() => onDelete(todo.id)}\n                                style={{\n                                    backgroundColor: \"#ff4d4d\",\n                                    color: \"white\",\n                                    border: \"none\",\n                                    borderRadius: 5,\n                                    padding: \"5px 10px\",\n                                    cursor: \"pointer\",\n                                    fontSize: 12,\n                                    float: \"right\",\n                                }}\n                            >\n                                삭제\n                            </button>\n                        </div>\n                    ))}\n                </div>\n            </div>\n\n            {isModalOpen && (\n                <div\n                    style={{\n                        position: \"fixed\",\n                        width: \"100%\",\n                        height: \"100%\",\n                        backgroundColor: \"rgba(0, 0, 0, 0.3)\",\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                    }}\n                >\n                    <div\n                        style={{\n                            backgroundColor: \"white\",\n                            width: \"80%\",\n                            height: \"80%\",\n                            borderRadius: 10,\n                            textAlign: \"center\",\n                        }}\n                    >\n                        <div\n                            style={{\n                                width: \"100%\",\n                                height: \"10%\",\n                                backgroundColor: \"rgba(0, 0, 0, 0.05)\",\n                                display: \"flex\",\n                                justifyContent: \"space-between\",\n                                alignItems: \"center\",\n                            }}\n                        >\n                            <button\n                                onClick={onAddOrUpdate}\n                                style={{\n                                    padding: 5,\n                                    marginLeft: 10,\n                                    fontSize: 20,\n                                    color: \"black\",\n                                    cursor: \"pointer\",\n                                }}\n                            >\n                                저장\n                            </button>\n                            <button\n                                onClick={closeModal}\n                                style={{\n                                    padding: 5,\n                                    marginRight: 10,\n                                    fontSize: 30,\n                                    color: \"gray\",\n                                    border: \"none\",\n                                    cursor: \"pointer\",\n                                }}\n                            >\n                                ✕\n                            </button>\n                        </div>\n\n                        <textarea\n                            value={title}\n                            onChange={(e) => setTitle(e.target.value)}\n                            placeholder=\"제목\"\n                            maxLength={100}\n                            style={{\n                                width: \"80%\",\n                                height: \"10%\",\n                                fontSize: 30,\n                                fontWeight: \"bold\",\n                                marginTop: 20,\n                                marginBottom: 15,\n                                border: \"none\",\n                                resize: \"none\",\n                            }}\n                        />\n                        <textarea\n                            value={content}\n                            onChange={(e) => setContent(e.target.value)}\n                            placeholder=\"내용\"\n                            style={{\n                                width: \"80%\",\n                                height: \"60%\",\n                                fontSize: 20,\n                                lineHeight: 1.5,\n                                border: \"none\",\n                                resize: \"none\",\n                            }}\n                        />\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default Todolist;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}