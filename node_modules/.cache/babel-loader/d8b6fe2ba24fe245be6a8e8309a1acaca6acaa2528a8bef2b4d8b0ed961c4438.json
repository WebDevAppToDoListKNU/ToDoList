{"ast":null,"code":"var _jsxFileName = \"/Users/ldy/Code/React/\\u110B\\u1170\\u11B8\\u1100\\u1162\\u1107\\u1161\\u11AF\\u110B\\u1173\\u11BC\\u110B\\u116D\\u11BC/week15/TodoList/src/AppGptMail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { chat } from './openai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AppGptMail() {\n  _s();\n  const [subject, setSubject] = useState('오늘 오전에 다툰사건');\n  const [to, setTo] = useState('친구');\n  const [style, setStyle] = useState('서운한 감정이 들어나도록');\n  const [result, setReult] = useState('');\n  const generateMail = () => {\n    const prompt = `당신은 글을 매우 잘쓰는 작가입니다. \n아래와 같은 내용으로 ${style} 메일을 작성해주세요.\n내용 :  ${subject}\n대상 :  ${to}`;\n    chat(prompt, result => setReult(result));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flexDirection: 'row'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\uC8FC\\uC81C: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        style: {\n          fontSize: 15,\n          borderWidth: 2\n        },\n        onChange: evt => setSubject(evt.target.value),\n        value: subject\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flexDirection: 'row'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\uB300\\uC0C1: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        style: {\n          fontSize: 15,\n          borderWidth: 2\n        },\n        onChange: evt => setTo(evt.target.value),\n        value: to\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flexDirection: 'row'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\uC2A4\\uD0C0\\uC77C: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        style: {\n          fontSize: 15,\n          borderWidth: 2\n        },\n        onChange: evt => setStyle(evt.target.value),\n        value: style\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => generateMail(),\n      children: \"\\uBA54\\uC77C\\uC791\\uC131\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uACB0\\uACFC:\", result]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(AppGptMail, \"Ct4hF5wVIzeWDyJk3nVtVvapj0c=\");\n_c = AppGptMail;\nvar _c;\n$RefreshReg$(_c, \"AppGptMail\");","map":{"version":3,"names":["React","useState","useRef","chat","jsxDEV","_jsxDEV","AppGptMail","_s","subject","setSubject","to","setTo","style","setStyle","result","setReult","generateMail","prompt","children","flexDirection","fileName","_jsxFileName","lineNumber","columnNumber","type","fontSize","borderWidth","onChange","evt","target","value","onClick","_c","$RefreshReg$"],"sources":["/Users/ldy/Code/React/웹개발응용/week15/TodoList/src/AppGptMail.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { chat } from './openai';\r\n\r\nexport default function AppGptMail() {\r\n  const [subject, setSubject] = useState('오늘 오전에 다툰사건');\r\n  const [to, setTo] = useState('친구');\r\n  const [style, setStyle] = useState('서운한 감정이 들어나도록');\r\n  const [result, setReult] = useState('');\r\n\r\n  const generateMail = () => {\r\n    const prompt = `당신은 글을 매우 잘쓰는 작가입니다. \r\n아래와 같은 내용으로 ${style} 메일을 작성해주세요.\r\n내용 :  ${subject}\r\n대상 :  ${to}`;\r\n    chat(prompt, (result) => setReult(result));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ flexDirection: 'row' }}>\r\n        <div>주제: </div>\r\n        <input\r\n          type=\"text\"\r\n          style={{ fontSize: 15, borderWidth: 2 }}\r\n          onChange={(evt) => setSubject(evt.target.value)}\r\n          value={subject}\r\n        />\r\n      </div>\r\n      <div style={{ flexDirection: 'row' }}>\r\n        <div>대상: </div>\r\n        <input\r\n          type=\"text\"\r\n          style={{ fontSize: 15, borderWidth: 2 }}\r\n          onChange={(evt) => setTo(evt.target.value)}\r\n          value={to}\r\n        />\r\n      </div>\r\n      <div style={{ flexDirection: 'row' }}>\r\n        <div>스타일: </div>\r\n        <input\r\n          type=\"text\"\r\n          style={{ fontSize: 15, borderWidth: 2 }}\r\n          onChange={(evt) => setStyle(evt.target.value)}\r\n          value={style}\r\n        />\r\n      </div>\r\n\r\n      <button onClick={() => generateMail()}>메일작성</button>\r\n      <div>결과:{result}</div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}