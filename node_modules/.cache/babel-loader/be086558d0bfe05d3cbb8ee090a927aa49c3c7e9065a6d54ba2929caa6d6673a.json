{"ast":null,"code":"var _jsxFileName = \"/Users/ldy/Code/React/\\u110B\\u1170\\u11B8\\u1100\\u1162\\u1107\\u1161\\u11AF\\u110B\\u1173\\u11BC\\u110B\\u116D\\u11BC/week15/Todolist/src/components/ToDoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { chat } from './openai';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToDoList() {\n  _s();\n  var _folders$find, _folders$find2;\n  const navigate = useNavigate();\n  const [folders, setFolders] = useState([{\n    id: 1,\n    name: \"개인\"\n  }, {\n    id: 2,\n    name: \"업무\"\n  }, {\n    id: 3,\n    name: \"휴지통\"\n  }]);\n  const [todos, setTodos] = useState({});\n  const [selectedFolder, setSelectedFolder] = useState(1);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [editingTodo, setEditingTodo] = useState(null);\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [query, setQuery] = useState(\"\");\n  const [summary, setSummary] = useState(\"\");\n  const [sortOrder, setSortOrder] = useState(\"latest\");\n  const [filterDate, setFilterDate] = useState(\"\");\n\n  // State to hold the logged-in user ID\n  const [loggedInUserId, setLoggedInUserId] = useState(null);\n  useEffect(() => {\n    if (loggedInUserId !== null) {\n      // Fetch todos for the logged-in user\n      axios.get(`http://localhost:3000/todos?userId=${loggedInUserId}`).then(response => {\n        const userTodos = response.data;\n        const todosByFolder = {\n          1: [],\n          // Personal\n          2: [],\n          // Work\n          3: [] // Trash\n        };\n        userTodos.forEach(todo => {\n          if (todo.folderId) {\n            todosByFolder[todo.folderId].push(todo);\n          }\n        });\n        setTodos(todosByFolder);\n      }).catch(error => console.error(\"Error fetching todos:\", error));\n    }\n  }, [loggedInUserId]);\n  const login = (userId, password) => {\n    axios.get(`http://localhost:3000/users?userId=${userId}&password=${password}`).then(response => {\n      if (response.data.length > 0) {\n        setLoggedInUserId(response.data[0].id);\n        navigate(\"/todo\"); // Navigate to the todo page after login\n      } else {\n        alert(\"Invalid login credentials.\");\n      }\n    }).catch(error => console.error(\"Error during login:\", error));\n  };\n  const getCurrentDate = () => {\n    const now = new Date();\n    const year = now.getFullYear();\n    const month = String(now.getMonth() + 1).padStart(2, \"0\");\n    const date = String(now.getDate()).padStart(2, \"0\");\n    const hours = String(now.getHours()).padStart(2, \"0\");\n    const minutes = String(now.getMinutes()).padStart(2, \"0\");\n    const seconds = String(now.getSeconds()).padStart(2, \"0\");\n    return `${year}-${month}-${date} ${hours}:${minutes}:${seconds}`;\n  };\n  const onAddOrUpdate = () => {\n    if (title.trim() === \"\" || content.trim() === \"\") {\n      alert(\"제목과 내용을 입력하세요!\");\n      return;\n    }\n    const folderTodos = todos[selectedFolder] || [];\n    if (editingTodo) {\n      const updatedTodos = folderTodos.map(todo => todo.id === editingTodo.id ? {\n        ...todo,\n        title,\n        content,\n        date: getCurrentDate()\n      } : todo);\n      setTodos({\n        ...todos,\n        [selectedFolder]: updatedTodos\n      });\n    } else {\n      const id = folderTodos.length > 0 ? folderTodos[folderTodos.length - 1].id + 1 : 1;\n      const updatedTodos = [...folderTodos, {\n        id,\n        title,\n        content,\n        date: getCurrentDate(),\n        folderId: selectedFolder\n      }];\n      setTodos({\n        ...todos,\n        [selectedFolder]: updatedTodos\n      });\n    }\n    closeModal();\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setEditingTodo(null);\n    setTitle(\"\");\n    setContent(\"\");\n    setSummary(\"\");\n    setFilterDate(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      height: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"300px\",\n        borderRight: \"2px solid #ccc\",\n        padding: 10,\n        boxSizing: \"border-box\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"ToDoList\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(\"/login\"),\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => openModal(),\n        children: \"\\uBA54\\uBAA8 \\uC4F0\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyle: \"none\",\n          padding: 0\n        },\n        children: folders.map(folder => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => setSelectedFolder(folder.id),\n          style: {\n            cursor: \"pointer\",\n            fontWeight: selectedFolder === folder.id ? \"bold\" : \"normal\",\n            backgroundColor: selectedFolder === folder.id ? \"#e0e0e0\" : \"transparent\",\n            padding: \"5px\",\n            borderRadius: \"4px\"\n          },\n          children: folder.name\n        }, folder.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newFolderName,\n          onChange: e => setNewFolderName(e.target.value),\n          placeholder: \"\\uC0C8 \\uD3F4\\uB354 \\uC774\\uB984\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            if (newFolderName.trim()) {\n              const id = folders.length > 0 ? folders[folders.length - 1].id + 1 : 1;\n              setFolders([...folders, {\n                id,\n                name: newFolderName.trim()\n              }]);\n              setNewFolderName(\"\");\n            }\n          },\n          children: \"\\uD3F4\\uB354 \\uCD94\\uAC00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [(_folders$find = folders.find(folder => folder.id === selectedFolder)) === null || _folders$find === void 0 ? void 0 : _folders$find.name, \" \\uD3F4\\uB354 \\uC990\\uACA8\\uCC3E\\uAE30\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this), favorites.map(id => {\n        var _todos$selectedFolder;\n        const note = (_todos$selectedFolder = todos[selectedFolder]) === null || _todos$selectedFolder === void 0 ? void 0 : _todos$selectedFolder.find(todo => todo.id === id);\n        return note ? /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => openModal(note),\n          children: note.title\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 25\n        }, this) : null;\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        padding: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: (_folders$find2 = folders.find(folder => folder.id === selectedFolder)) === null || _folders$find2 === void 0 ? void 0 : _folders$find2.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uAC80\\uC0C9 (\\uC81C\\uBAA9/\\uB0B4\\uC6A9)\",\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        style: {\n          width: \"100%\",\n          padding: 10,\n          marginBottom: 20,\n          boxSizing: \"border-box\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: filterDate,\n        onChange: e => setFilterDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSortOrder(sortOrder === \"latest\" ? \"oldest\" : \"latest\"),\n        style: {\n          cursor: \"pointer\"\n        },\n        children: sortOrder === \"latest\" ? \"최신순\" : \"오래된 순\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(auto-fill, minmax(250px, 1fr))\",\n          gap: 20\n        },\n        children: filteredTodos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            border: \"1px solid #ccc\",\n            borderRadius: 10,\n            padding: 10,\n            backgroundColor: \"white\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            onClick: () => openModal(todo),\n            style: {\n              cursor: \"pointer\"\n            },\n            children: todo.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: 14,\n              color: \"#555\"\n            },\n            children: todo.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: todo.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => toggleFavorite(todo.id),\n            style: {\n              cursor: \"pointer\"\n            },\n            children: favorites.includes(todo.id) ? \"★\" : \"☆\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 29\n          }, this), selectedFolder !== 3 && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => onDelete(todo.id),\n            style: {\n              cursor: \"pointer\"\n            },\n            children: \"\\uC0AD\\uC81C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 33\n          }, this), selectedFolder === 3 && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => restoreTodo(todo.id),\n            style: {\n              cursor: \"pointer\"\n            },\n            children: \"\\uBCF5\\uC6D0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 33\n          }, this), selectedFolder === 3 && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => onRealDelete(todo.id),\n            style: {\n              cursor: \"pointer\"\n            },\n            children: \"\\uC644\\uC804 \\uC0AD\\uC81C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 33\n          }, this)]\n        }, todo.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        width: \"100%\",\n        height: \"100%\",\n        backgroundColor: \"rgba(0, 0, 0, 0.05)\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: \"white\",\n          width: \"50%\",\n          height: \"50%\",\n          borderRadius: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeModal,\n          style: {\n            cursor: \"pointer\"\n          },\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: 10\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: title,\n            onChange: e => setTitle(e.target.value),\n            placeholder: \"\\uC81C\\uBAA9 \\uC785\\uB825\",\n            style: {\n              width: \"100%\",\n              padding: 10,\n              fontSize: 16,\n              boxSizing: \"border-box\",\n              marginBottom: 10\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: content,\n            onChange: e => setContent(e.target.value),\n            placeholder: \"\\uB0B4\\uC6A9 \\uC785\\uB825\",\n            style: {\n              width: \"100%\",\n              height: 200,\n              padding: 10,\n              fontSize: 16,\n              boxSizing: \"border-box\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: fetchSummary,\n            style: {\n              cursor: \"pointer\"\n            },\n            children: \"GPT \\uB0B4\\uC6A9 \\uC694\\uC57D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 29\n          }, this), summary && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: summary\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: updateTodoContent,\n              style: {\n                cursor: \"pointer\"\n              },\n              children: \"\\uBCC0\\uACBD\\uD558\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onAddOrUpdate,\n            style: {\n              cursor: \"pointer\"\n            },\n            children: \"\\uC800\\uC7A5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }, this);\n}\n_s(ToDoList, \"2OadwHOOeztIJ4NYsu4AGDsu+ss=\", false, function () {\n  return [useNavigate];\n});\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useState","chat","useNavigate","jsxDEV","_jsxDEV","ToDoList","_s","_folders$find","_folders$find2","navigate","folders","setFolders","id","name","todos","setTodos","selectedFolder","setSelectedFolder","isModalOpen","setIsModalOpen","editingTodo","setEditingTodo","title","setTitle","content","setContent","query","setQuery","summary","setSummary","sortOrder","setSortOrder","filterDate","setFilterDate","loggedInUserId","setLoggedInUserId","useEffect","axios","get","then","response","userTodos","data","todosByFolder","forEach","todo","folderId","push","catch","error","console","login","userId","password","length","alert","getCurrentDate","now","Date","year","getFullYear","month","String","getMonth","padStart","date","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","onAddOrUpdate","trim","folderTodos","updatedTodos","map","closeModal","style","display","height","children","width","borderRight","padding","boxSizing","fileName","_jsxFileName","lineNumber","columnNumber","onClick","openModal","listStyle","folder","cursor","fontWeight","backgroundColor","borderRadius","type","value","newFolderName","onChange","e","setNewFolderName","target","placeholder","find","favorites","_todos$selectedFolder","note","flex","marginBottom","gridTemplateColumns","gap","filteredTodos","border","fontSize","color","toggleFavorite","includes","onDelete","restoreTodo","onRealDelete","position","justifyContent","alignItems","fetchSummary","updateTodoContent","_c","$RefreshReg$"],"sources":["/Users/ldy/Code/React/웹개발응용/week15/Todolist/src/components/ToDoList.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { chat } from './openai';\nimport { useNavigate } from 'react-router-dom';\n\n\nfunction ToDoList() {\n\n\n    const navigate = useNavigate();\n\n    const [folders, setFolders] = useState([\n        { id: 1, name: \"개인\" },\n        { id: 2, name: \"업무\" },\n        { id: 3, name: \"휴지통\" },\n    ]);\n\n    const [todos, setTodos] = useState({});\n    const [selectedFolder, setSelectedFolder] = useState(1);\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [editingTodo, setEditingTodo] = useState(null);\n    const [title, setTitle] = useState(\"\");\n    const [content, setContent] = useState(\"\");\n    const [query, setQuery] = useState(\"\");\n    const [summary, setSummary] = useState(\"\");\n    const [sortOrder, setSortOrder] = useState(\"latest\");\n    const [filterDate, setFilterDate] = useState(\"\");\n\n    // State to hold the logged-in user ID\n    const [loggedInUserId, setLoggedInUserId] = useState(null);\n\n    useEffect(() => {\n        if (loggedInUserId !== null) {\n            // Fetch todos for the logged-in user\n            axios.get(`http://localhost:3000/todos?userId=${loggedInUserId}`)\n                .then(response => {\n                    const userTodos = response.data;\n                    const todosByFolder = {\n                        1: [], // Personal\n                        2: [], // Work\n                        3: []  // Trash\n                    };\n\n                    userTodos.forEach(todo => {\n                        if (todo.folderId) {\n                            todosByFolder[todo.folderId].push(todo);\n                        }\n                    });\n                    setTodos(todosByFolder);\n                })\n                .catch(error => console.error(\"Error fetching todos:\", error));\n        }\n    }, [loggedInUserId]);\n\n    const login = (userId, password) => {\n        axios.get(`http://localhost:3000/users?userId=${userId}&password=${password}`)\n            .then(response => {\n                if (response.data.length > 0) {\n                    setLoggedInUserId(response.data[0].id);\n                    navigate(\"/todo\"); // Navigate to the todo page after login\n                } else {\n                    alert(\"Invalid login credentials.\");\n                }\n            })\n            .catch(error => console.error(\"Error during login:\", error));\n    };\n\n    const getCurrentDate = () => {\n        const now = new Date();\n        const year = now.getFullYear();\n        const month = String(now.getMonth() + 1).padStart(2, \"0\");\n        const date = String(now.getDate()).padStart(2, \"0\");\n        const hours = String(now.getHours()).padStart(2, \"0\");\n        const minutes = String(now.getMinutes()).padStart(2, \"0\");\n        const seconds = String(now.getSeconds()).padStart(2, \"0\");\n\n        return `${year}-${month}-${date} ${hours}:${minutes}:${seconds}`;\n    };\n\n    const onAddOrUpdate = () => {\n        if (title.trim() === \"\" || content.trim() === \"\") {\n            alert(\"제목과 내용을 입력하세요!\");\n            return;\n        }\n        const folderTodos = todos[selectedFolder] || [];\n        if (editingTodo) {\n            const updatedTodos = folderTodos.map((todo) =>\n                todo.id === editingTodo.id ? { ...todo, title, content, date: getCurrentDate() } : todo\n            );\n            setTodos({ ...todos, [selectedFolder]: updatedTodos });\n        } else {\n            const id = folderTodos.length > 0 ? folderTodos[folderTodos.length - 1].id + 1 : 1;\n            const updatedTodos = [...folderTodos, { id, title, content, date: getCurrentDate(), folderId: selectedFolder }];\n            setTodos({ ...todos, [selectedFolder]: updatedTodos });\n        }\n        closeModal();\n    };\n\n    const closeModal = () => {\n        setIsModalOpen(false);\n        setEditingTodo(null);\n        setTitle(\"\");\n        setContent(\"\");\n        setSummary(\"\");\n        setFilterDate(\"\");\n    };\n\n    return (\n        <div style={{ display: \"flex\", height: \"100vh\" }}>\n            {/* 폴더 리스트 */}\n            <div\n                style={{\n                    width: \"300px\",\n                    borderRight: \"2px solid #ccc\",\n                    padding: 10,\n                    boxSizing: \"border-box\",\n                }}\n            >\n                <h2>ToDoList</h2>\n                <button\n                    onClick={() => navigate(\"/login\")}\n\n                >\n                    로그인\n                </button>\n\n                <button\n                    onClick={() => openModal()}\n                >\n                    메모 쓰기\n                </button>\n\n                <ul style={{ listStyle: \"none\", padding: 0 }}>\n                    {folders.map((folder) => (\n                        <li\n                            key={folder.id}\n                            onClick={() => setSelectedFolder(folder.id)}\n                            style={{\n                                cursor: \"pointer\",\n                                fontWeight: selectedFolder === folder.id ? \"bold\" : \"normal\",\n                                backgroundColor: selectedFolder === folder.id ? \"#e0e0e0\" : \"transparent\",\n                                padding: \"5px\",\n                                borderRadius: \"4px\"\n                            }}\n                        >\n                            {folder.name}\n                        </li>\n                    ))}\n                </ul>\n\n                <div>\n                    <input\n                        type=\"text\"\n                        value={newFolderName}\n                        onChange={(e) => setNewFolderName(e.target.value)}\n                        placeholder=\"새 폴더 이름\"\n                    />\n                    <button\n                        onClick={() => {\n                            if (newFolderName.trim()) {\n                                const id = folders.length > 0 ? folders[folders.length - 1].id + 1 : 1;\n                                setFolders([...folders, { id, name: newFolderName.trim() }]);\n                                setNewFolderName(\"\");\n                            }\n                        }}\n\n                    >\n                        폴더 추가\n                    </button>\n                </div>\n                <h3>{folders.find((folder) => folder.id === selectedFolder)?.name} 폴더 즐겨찾기</h3>\n                {favorites.map((id) => {\n                    const note = todos[selectedFolder]?.find((todo) => todo.id === id);\n                    return note ? (\n                        <div key={id} onClick={() => openModal(note)}>\n                            {note.title}\n                        </div>\n                    ) : null;\n                })}\n            </div>\n\n            {/* 메모 영역 */}\n            <div style={{ flex: 1, padding: 20 }}>\n                <h2>{folders.find((folder) => folder.id === selectedFolder)?.name}</h2>\n                <input\n                    type=\"text\"\n                    placeholder=\"검색 (제목/내용)\"\n                    value={query}\n                    onChange={(e) => setQuery(e.target.value)}\n                    style={{\n                        width: \"100%\",\n                        padding: 10,\n                        marginBottom: 20,\n                        boxSizing: \"border-box\",\n                    }}\n                />\n                <input\n                    type=\"date\"\n                    value={filterDate}\n                    onChange={(e) => setFilterDate(e.target.value)}\n\n                />\n                <button onClick={() => setSortOrder(sortOrder === \"latest\" ? \"oldest\" : \"latest\")}\n                    style={{\n                        cursor: \"pointer\"\n                    }}>\n                    {sortOrder === \"latest\" ? \"최신순\" : \"오래된 순\"}\n                </button>\n                <div\n                    style={{\n                        display: \"grid\",\n                        gridTemplateColumns: \"repeat(auto-fill, minmax(250px, 1fr))\",\n                        gap: 20,\n                    }}\n                >\n                    {filteredTodos.map((todo) => (\n                        <div\n                            key={todo.id}\n                            style={{\n                                border: \"1px solid #ccc\",\n                                borderRadius: 10,\n                                padding: 10,\n                                backgroundColor: \"white\",\n                            }}\n                        >\n                            <h3\n                                onClick={() => openModal(todo)}\n                                style={{\n                                    cursor: \"pointer\"\n                                }}>\n                                {todo.title}\n                            </h3>\n                            <p style={{ fontSize: 14, color: \"#555\" }}>{todo.content}</p>\n                            <p>{todo.date}</p>\n\n                            <button onClick={() => toggleFavorite(todo.id)}\n                                style={{\n                                    cursor: \"pointer\"\n                                }}>\n                                {favorites.includes(todo.id) ? \"★\" : \"☆\"}\n                            </button>\n                            {selectedFolder !== 3 && (\n                                <button onClick={() => onDelete(todo.id)}\n                                    style={{\n                                        cursor: \"pointer\"\n                                    }}>\n                                    삭제\n                                </button>)}\n                            {selectedFolder === 3 && (\n                                <button\n                                    onClick={() => restoreTodo(todo.id)}\n                                    style={{\n                                        cursor: \"pointer\"\n                                    }}>\n                                    복원\n                                </button>\n                            )}\n                            {selectedFolder === 3 && (\n                                <button onClick={() => onRealDelete(todo.id)}\n                                    style={{\n                                        cursor: \"pointer\"\n                                    }}>\n                                    완전 삭제\n                                </button>\n                            )}\n                        </div>\n                    ))}\n                </div>\n            </div>\n\n            {isModalOpen && (\n                <div\n                    style={{\n                        position: \"fixed\",\n                        width: \"100%\",\n                        height: \"100%\",\n                        backgroundColor: \"rgba(0, 0, 0, 0.05)\",\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                    }}>\n                    <div\n                        style={{\n                            backgroundColor: \"white\",\n                            width: \"50%\",\n                            height: \"50%\",\n                            borderRadius: 10,\n                        }}>\n                        <button\n                            onClick={closeModal}\n                            style={{\n                                cursor: \"pointer\"\n                            }}>\n                            ✕\n                        </button>\n                        <div style={{ padding: 10 }}>\n                            <input\n                                type=\"text\"\n                                value={title}\n                                onChange={(e) => setTitle(e.target.value)}\n                                placeholder=\"제목 입력\"\n                                style={{\n                                    width: \"100%\",\n                                    padding: 10,\n                                    fontSize: 16,\n                                    boxSizing: \"border-box\",\n                                    marginBottom: 10,\n                                }}\n                            />\n                            <textarea\n                                value={content}\n                                onChange={(e) => setContent(e.target.value)}\n                                placeholder=\"내용 입력\"\n                                style={{\n                                    width: \"100%\",\n                                    height: 200,\n                                    padding: 10,\n                                    fontSize: 16,\n                                    boxSizing: \"border-box\",\n                                }}\n                            ></textarea>\n\n                            <button\n                                onClick={fetchSummary}\n                                style={{\n                                    cursor: \"pointer\"\n                                }}>\n                                GPT 내용 요약\n                            </button>\n                            {summary && (\n                                <div>\n                                    <p>{summary}</p>\n                                    <button\n                                        onClick={updateTodoContent}\n                                        style={{\n                                            cursor: \"pointer\"\n                                        }}>\n                                        변경하기\n                                    </button>\n                                </div>\n                            )}\n                            <button\n                                onClick={onAddOrUpdate}\n                                style={{\n                                    cursor: \"pointer\"\n                                }}>\n                                저장\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default ToDoList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,UAAU;AAC/B,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG/C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,aAAA,EAAAC,cAAA;EAGhB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,CACnC;IAAEY,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAK,CAAC,EACrB;IAAED,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAK,CAAC,EACrB;IAAED,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAM,CAAC,CACzB,CAAC;EAEF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtC,MAAM,CAACgB,cAAc,EAAEC,iBAAiB,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACkB,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACsB,KAAK,EAAEC,QAAQ,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACwB,OAAO,EAAEC,UAAU,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC0B,KAAK,EAAEC,QAAQ,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC4B,OAAO,EAAEC,UAAU,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC8B,SAAS,EAAEC,YAAY,CAAC,GAAG/B,QAAQ,CAAC,QAAQ,CAAC;EACpD,MAAM,CAACgC,UAAU,EAAEC,aAAa,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA,MAAM,CAACkC,cAAc,EAAEC,iBAAiB,CAAC,GAAGnC,QAAQ,CAAC,IAAI,CAAC;EAE1DoC,SAAS,CAAC,MAAM;IACZ,IAAIF,cAAc,KAAK,IAAI,EAAE;MACzB;MACAG,KAAK,CAACC,GAAG,CAAC,sCAAsCJ,cAAc,EAAE,CAAC,CAC5DK,IAAI,CAACC,QAAQ,IAAI;QACd,MAAMC,SAAS,GAAGD,QAAQ,CAACE,IAAI;QAC/B,MAAMC,aAAa,GAAG;UAClB,CAAC,EAAE,EAAE;UAAE;UACP,CAAC,EAAE,EAAE;UAAE;UACP,CAAC,EAAE,EAAE,CAAE;QACX,CAAC;QAEDF,SAAS,CAACG,OAAO,CAACC,IAAI,IAAI;UACtB,IAAIA,IAAI,CAACC,QAAQ,EAAE;YACfH,aAAa,CAACE,IAAI,CAACC,QAAQ,CAAC,CAACC,IAAI,CAACF,IAAI,CAAC;UAC3C;QACJ,CAAC,CAAC;QACF9B,QAAQ,CAAC4B,aAAa,CAAC;MAC3B,CAAC,CAAC,CACDK,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CAAC;IACtE;EACJ,CAAC,EAAE,CAACf,cAAc,CAAC,CAAC;EAEpB,MAAMiB,KAAK,GAAGA,CAACC,MAAM,EAAEC,QAAQ,KAAK;IAChChB,KAAK,CAACC,GAAG,CAAC,sCAAsCc,MAAM,aAAaC,QAAQ,EAAE,CAAC,CACzEd,IAAI,CAACC,QAAQ,IAAI;MACd,IAAIA,QAAQ,CAACE,IAAI,CAACY,MAAM,GAAG,CAAC,EAAE;QAC1BnB,iBAAiB,CAACK,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC,CAAC9B,EAAE,CAAC;QACtCH,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;MACvB,CAAC,MAAM;QACH8C,KAAK,CAAC,4BAA4B,CAAC;MACvC;IACJ,CAAC,CAAC,CACDP,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC,CAAC;EACpE,CAAC;EAED,MAAMO,cAAc,GAAGA,CAAA,KAAM;IACzB,MAAMC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;IACtB,MAAMC,IAAI,GAAGF,GAAG,CAACG,WAAW,CAAC,CAAC;IAC9B,MAAMC,KAAK,GAAGC,MAAM,CAACL,GAAG,CAACM,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IACzD,MAAMC,IAAI,GAAGH,MAAM,CAACL,GAAG,CAACS,OAAO,CAAC,CAAC,CAAC,CAACF,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IACnD,MAAMG,KAAK,GAAGL,MAAM,CAACL,GAAG,CAACW,QAAQ,CAAC,CAAC,CAAC,CAACJ,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IACrD,MAAMK,OAAO,GAAGP,MAAM,CAACL,GAAG,CAACa,UAAU,CAAC,CAAC,CAAC,CAACN,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IACzD,MAAMO,OAAO,GAAGT,MAAM,CAACL,GAAG,CAACe,UAAU,CAAC,CAAC,CAAC,CAACR,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IAEzD,OAAO,GAAGL,IAAI,IAAIE,KAAK,IAAII,IAAI,IAAIE,KAAK,IAAIE,OAAO,IAAIE,OAAO,EAAE;EACpE,CAAC;EAED,MAAME,aAAa,GAAGA,CAAA,KAAM;IACxB,IAAInD,KAAK,CAACoD,IAAI,CAAC,CAAC,KAAK,EAAE,IAAIlD,OAAO,CAACkD,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC9CnB,KAAK,CAAC,gBAAgB,CAAC;MACvB;IACJ;IACA,MAAMoB,WAAW,GAAG7D,KAAK,CAACE,cAAc,CAAC,IAAI,EAAE;IAC/C,IAAII,WAAW,EAAE;MACb,MAAMwD,YAAY,GAAGD,WAAW,CAACE,GAAG,CAAEhC,IAAI,IACtCA,IAAI,CAACjC,EAAE,KAAKQ,WAAW,CAACR,EAAE,GAAG;QAAE,GAAGiC,IAAI;QAAEvB,KAAK;QAAEE,OAAO;QAAEyC,IAAI,EAAET,cAAc,CAAC;MAAE,CAAC,GAAGX,IACvF,CAAC;MACD9B,QAAQ,CAAC;QAAE,GAAGD,KAAK;QAAE,CAACE,cAAc,GAAG4D;MAAa,CAAC,CAAC;IAC1D,CAAC,MAAM;MACH,MAAMhE,EAAE,GAAG+D,WAAW,CAACrB,MAAM,GAAG,CAAC,GAAGqB,WAAW,CAACA,WAAW,CAACrB,MAAM,GAAG,CAAC,CAAC,CAAC1C,EAAE,GAAG,CAAC,GAAG,CAAC;MAClF,MAAMgE,YAAY,GAAG,CAAC,GAAGD,WAAW,EAAE;QAAE/D,EAAE;QAAEU,KAAK;QAAEE,OAAO;QAAEyC,IAAI,EAAET,cAAc,CAAC,CAAC;QAAEV,QAAQ,EAAE9B;MAAe,CAAC,CAAC;MAC/GD,QAAQ,CAAC;QAAE,GAAGD,KAAK;QAAE,CAACE,cAAc,GAAG4D;MAAa,CAAC,CAAC;IAC1D;IACAE,UAAU,CAAC,CAAC;EAChB,CAAC;EAED,MAAMA,UAAU,GAAGA,CAAA,KAAM;IACrB3D,cAAc,CAAC,KAAK,CAAC;IACrBE,cAAc,CAAC,IAAI,CAAC;IACpBE,QAAQ,CAAC,EAAE,CAAC;IACZE,UAAU,CAAC,EAAE,CAAC;IACdI,UAAU,CAAC,EAAE,CAAC;IACdI,aAAa,CAAC,EAAE,CAAC;EACrB,CAAC;EAED,oBACI7B,OAAA;IAAK2E,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBAE7C9E,OAAA;MACI2E,KAAK,EAAE;QACHI,KAAK,EAAE,OAAO;QACdC,WAAW,EAAE,gBAAgB;QAC7BC,OAAO,EAAE,EAAE;QACXC,SAAS,EAAE;MACf,CAAE;MAAAJ,QAAA,gBAEF9E,OAAA;QAAA8E,QAAA,EAAI;MAAQ;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjBtF,OAAA;QACIuF,OAAO,EAAEA,CAAA,KAAMlF,QAAQ,CAAC,QAAQ,CAAE;QAAAyE,QAAA,EAErC;MAED;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAETtF,OAAA;QACIuF,OAAO,EAAEA,CAAA,KAAMC,SAAS,CAAC,CAAE;QAAAV,QAAA,EAC9B;MAED;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAETtF,OAAA;QAAI2E,KAAK,EAAE;UAAEc,SAAS,EAAE,MAAM;UAAER,OAAO,EAAE;QAAE,CAAE;QAAAH,QAAA,EACxCxE,OAAO,CAACmE,GAAG,CAAEiB,MAAM,iBAChB1F,OAAA;UAEIuF,OAAO,EAAEA,CAAA,KAAM1E,iBAAiB,CAAC6E,MAAM,CAAClF,EAAE,CAAE;UAC5CmE,KAAK,EAAE;YACHgB,MAAM,EAAE,SAAS;YACjBC,UAAU,EAAEhF,cAAc,KAAK8E,MAAM,CAAClF,EAAE,GAAG,MAAM,GAAG,QAAQ;YAC5DqF,eAAe,EAAEjF,cAAc,KAAK8E,MAAM,CAAClF,EAAE,GAAG,SAAS,GAAG,aAAa;YACzEyE,OAAO,EAAE,KAAK;YACda,YAAY,EAAE;UAClB,CAAE;UAAAhB,QAAA,EAEDY,MAAM,CAACjF;QAAI,GAVPiF,MAAM,CAAClF,EAAE;UAAA2E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAWd,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eAELtF,OAAA;QAAA8E,QAAA,gBACI9E,OAAA;UACI+F,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEC,aAAc;UACrBC,QAAQ,EAAGC,CAAC,IAAKC,gBAAgB,CAACD,CAAC,CAACE,MAAM,CAACL,KAAK,CAAE;UAClDM,WAAW,EAAC;QAAS;UAAAnB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CAAC,eACFtF,OAAA;UACIuF,OAAO,EAAEA,CAAA,KAAM;YACX,IAAIU,aAAa,CAAC3B,IAAI,CAAC,CAAC,EAAE;cACtB,MAAM9D,EAAE,GAAGF,OAAO,CAAC4C,MAAM,GAAG,CAAC,GAAG5C,OAAO,CAACA,OAAO,CAAC4C,MAAM,GAAG,CAAC,CAAC,CAAC1C,EAAE,GAAG,CAAC,GAAG,CAAC;cACtED,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAE;gBAAEE,EAAE;gBAAEC,IAAI,EAAEwF,aAAa,CAAC3B,IAAI,CAAC;cAAE,CAAC,CAAC,CAAC;cAC5D8B,gBAAgB,CAAC,EAAE,CAAC;YACxB;UACJ,CAAE;UAAAtB,QAAA,EAEL;QAED;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,eACNtF,OAAA;QAAA8E,QAAA,IAAA3E,aAAA,GAAKG,OAAO,CAACiG,IAAI,CAAEb,MAAM,IAAKA,MAAM,CAAClF,EAAE,KAAKI,cAAc,CAAC,cAAAT,aAAA,uBAAtDA,aAAA,CAAwDM,IAAI,EAAC,wCAAQ;MAAA;QAAA0E,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC9EkB,SAAS,CAAC/B,GAAG,CAAEjE,EAAE,IAAK;QAAA,IAAAiG,qBAAA;QACnB,MAAMC,IAAI,IAAAD,qBAAA,GAAG/F,KAAK,CAACE,cAAc,CAAC,cAAA6F,qBAAA,uBAArBA,qBAAA,CAAuBF,IAAI,CAAE9D,IAAI,IAAKA,IAAI,CAACjC,EAAE,KAAKA,EAAE,CAAC;QAClE,OAAOkG,IAAI,gBACP1G,OAAA;UAAcuF,OAAO,EAAEA,CAAA,KAAMC,SAAS,CAACkB,IAAI,CAAE;UAAA5B,QAAA,EACxC4B,IAAI,CAACxF;QAAK,GADLV,EAAE;UAAA2E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEP,CAAC,GACN,IAAI;MACZ,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eAGNtF,OAAA;MAAK2E,KAAK,EAAE;QAAEgC,IAAI,EAAE,CAAC;QAAE1B,OAAO,EAAE;MAAG,CAAE;MAAAH,QAAA,gBACjC9E,OAAA;QAAA8E,QAAA,GAAA1E,cAAA,GAAKE,OAAO,CAACiG,IAAI,CAAEb,MAAM,IAAKA,MAAM,CAAClF,EAAE,KAAKI,cAAc,CAAC,cAAAR,cAAA,uBAAtDA,cAAA,CAAwDK;MAAI;QAAA0E,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACvEtF,OAAA;QACI+F,IAAI,EAAC,MAAM;QACXO,WAAW,EAAC,0CAAY;QACxBN,KAAK,EAAE1E,KAAM;QACb4E,QAAQ,EAAGC,CAAC,IAAK5E,QAAQ,CAAC4E,CAAC,CAACE,MAAM,CAACL,KAAK,CAAE;QAC1CrB,KAAK,EAAE;UACHI,KAAK,EAAE,MAAM;UACbE,OAAO,EAAE,EAAE;UACX2B,YAAY,EAAE,EAAE;UAChB1B,SAAS,EAAE;QACf;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACFtF,OAAA;QACI+F,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEpE,UAAW;QAClBsE,QAAQ,EAAGC,CAAC,IAAKtE,aAAa,CAACsE,CAAC,CAACE,MAAM,CAACL,KAAK;MAAE;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAElD,CAAC,eACFtF,OAAA;QAAQuF,OAAO,EAAEA,CAAA,KAAM5D,YAAY,CAACD,SAAS,KAAK,QAAQ,GAAG,QAAQ,GAAG,QAAQ,CAAE;QAC9EiD,KAAK,EAAE;UACHgB,MAAM,EAAE;QACZ,CAAE;QAAAb,QAAA,EACDpD,SAAS,KAAK,QAAQ,GAAG,KAAK,GAAG;MAAO;QAAAyD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC,eACTtF,OAAA;QACI2E,KAAK,EAAE;UACHC,OAAO,EAAE,MAAM;UACfiC,mBAAmB,EAAE,uCAAuC;UAC5DC,GAAG,EAAE;QACT,CAAE;QAAAhC,QAAA,EAEDiC,aAAa,CAACtC,GAAG,CAAEhC,IAAI,iBACpBzC,OAAA;UAEI2E,KAAK,EAAE;YACHqC,MAAM,EAAE,gBAAgB;YACxBlB,YAAY,EAAE,EAAE;YAChBb,OAAO,EAAE,EAAE;YACXY,eAAe,EAAE;UACrB,CAAE;UAAAf,QAAA,gBAEF9E,OAAA;YACIuF,OAAO,EAAEA,CAAA,KAAMC,SAAS,CAAC/C,IAAI,CAAE;YAC/BkC,KAAK,EAAE;cACHgB,MAAM,EAAE;YACZ,CAAE;YAAAb,QAAA,EACDrC,IAAI,CAACvB;UAAK;YAAAiE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC,eACLtF,OAAA;YAAG2E,KAAK,EAAE;cAAEsC,QAAQ,EAAE,EAAE;cAAEC,KAAK,EAAE;YAAO,CAAE;YAAApC,QAAA,EAAErC,IAAI,CAACrB;UAAO;YAAA+D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC7DtF,OAAA;YAAA8E,QAAA,EAAIrC,IAAI,CAACoB;UAAI;YAAAsB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAElBtF,OAAA;YAAQuF,OAAO,EAAEA,CAAA,KAAM4B,cAAc,CAAC1E,IAAI,CAACjC,EAAE,CAAE;YAC3CmE,KAAK,EAAE;cACHgB,MAAM,EAAE;YACZ,CAAE;YAAAb,QAAA,EACD0B,SAAS,CAACY,QAAQ,CAAC3E,IAAI,CAACjC,EAAE,CAAC,GAAG,GAAG,GAAG;UAAG;YAAA2E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpC,CAAC,EACR1E,cAAc,KAAK,CAAC,iBACjBZ,OAAA;YAAQuF,OAAO,EAAEA,CAAA,KAAM8B,QAAQ,CAAC5E,IAAI,CAACjC,EAAE,CAAE;YACrCmE,KAAK,EAAE;cACHgB,MAAM,EAAE;YACZ,CAAE;YAAAb,QAAA,EAAC;UAEP;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAE,EACb1E,cAAc,KAAK,CAAC,iBACjBZ,OAAA;YACIuF,OAAO,EAAEA,CAAA,KAAM+B,WAAW,CAAC7E,IAAI,CAACjC,EAAE,CAAE;YACpCmE,KAAK,EAAE;cACHgB,MAAM,EAAE;YACZ,CAAE;YAAAb,QAAA,EAAC;UAEP;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CACX,EACA1E,cAAc,KAAK,CAAC,iBACjBZ,OAAA;YAAQuF,OAAO,EAAEA,CAAA,KAAMgC,YAAY,CAAC9E,IAAI,CAACjC,EAAE,CAAE;YACzCmE,KAAK,EAAE;cACHgB,MAAM,EAAE;YACZ,CAAE;YAAAb,QAAA,EAAC;UAEP;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CACX;QAAA,GA/CI7C,IAAI,CAACjC,EAAE;UAAA2E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAgDX,CACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,EAELxE,WAAW,iBACRd,OAAA;MACI2E,KAAK,EAAE;QACH6C,QAAQ,EAAE,OAAO;QACjBzC,KAAK,EAAE,MAAM;QACbF,MAAM,EAAE,MAAM;QACdgB,eAAe,EAAE,qBAAqB;QACtCjB,OAAO,EAAE,MAAM;QACf6C,cAAc,EAAE,QAAQ;QACxBC,UAAU,EAAE;MAChB,CAAE;MAAA5C,QAAA,eACF9E,OAAA;QACI2E,KAAK,EAAE;UACHkB,eAAe,EAAE,OAAO;UACxBd,KAAK,EAAE,KAAK;UACZF,MAAM,EAAE,KAAK;UACbiB,YAAY,EAAE;QAClB,CAAE;QAAAhB,QAAA,gBACF9E,OAAA;UACIuF,OAAO,EAAEb,UAAW;UACpBC,KAAK,EAAE;YACHgB,MAAM,EAAE;UACZ,CAAE;UAAAb,QAAA,EAAC;QAEP;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTtF,OAAA;UAAK2E,KAAK,EAAE;YAAEM,OAAO,EAAE;UAAG,CAAE;UAAAH,QAAA,gBACxB9E,OAAA;YACI+F,IAAI,EAAC,MAAM;YACXC,KAAK,EAAE9E,KAAM;YACbgF,QAAQ,EAAGC,CAAC,IAAKhF,QAAQ,CAACgF,CAAC,CAACE,MAAM,CAACL,KAAK,CAAE;YAC1CM,WAAW,EAAC,2BAAO;YACnB3B,KAAK,EAAE;cACHI,KAAK,EAAE,MAAM;cACbE,OAAO,EAAE,EAAE;cACXgC,QAAQ,EAAE,EAAE;cACZ/B,SAAS,EAAE,YAAY;cACvB0B,YAAY,EAAE;YAClB;UAAE;YAAAzB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,eACFtF,OAAA;YACIgG,KAAK,EAAE5E,OAAQ;YACf8E,QAAQ,EAAGC,CAAC,IAAK9E,UAAU,CAAC8E,CAAC,CAACE,MAAM,CAACL,KAAK,CAAE;YAC5CM,WAAW,EAAC,2BAAO;YACnB3B,KAAK,EAAE;cACHI,KAAK,EAAE,MAAM;cACbF,MAAM,EAAE,GAAG;cACXI,OAAO,EAAE,EAAE;cACXgC,QAAQ,EAAE,EAAE;cACZ/B,SAAS,EAAE;YACf;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACK,CAAC,eAEZtF,OAAA;YACIuF,OAAO,EAAEoC,YAAa;YACtBhD,KAAK,EAAE;cACHgB,MAAM,EAAE;YACZ,CAAE;YAAAb,QAAA,EAAC;UAEP;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EACR9D,OAAO,iBACJxB,OAAA;YAAA8E,QAAA,gBACI9E,OAAA;cAAA8E,QAAA,EAAItD;YAAO;cAAA2D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAChBtF,OAAA;cACIuF,OAAO,EAAEqC,iBAAkB;cAC3BjD,KAAK,EAAE;gBACHgB,MAAM,EAAE;cACZ,CAAE;cAAAb,QAAA,EAAC;YAEP;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR,CACR,eACDtF,OAAA;YACIuF,OAAO,EAAElB,aAAc;YACvBM,KAAK,EAAE;cACHgB,MAAM,EAAE;YACZ,CAAE;YAAAb,QAAA,EAAC;UAEP;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACpF,EAAA,CA5VQD,QAAQ;EAAA,QAGIH,WAAW;AAAA;AAAA+H,EAAA,GAHvB5H,QAAQ;AA8VjB,eAAeA,QAAQ;AAAC,IAAA4H,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}