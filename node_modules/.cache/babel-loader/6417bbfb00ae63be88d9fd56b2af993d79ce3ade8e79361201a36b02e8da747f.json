{"ast":null,"code":"var _jsxFileName = \"/Users/ldy/Code/React/\\u110B\\u1170\\u11B8\\u1100\\u1162\\u1107\\u1161\\u11AF\\u110B\\u1173\\u11BC\\u110B\\u116D\\u11BC/week15/Todolist/src/components/ToDoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToDoList() {\n  _s();\n  const navigate = useNavigate();\n  const [loggedInUser, setLoggedInUser] = useState(null);\n  const [todos, setTodos] = useState({});\n  const [folders, setFolders] = useState([{\n    id: 1,\n    name: \"개인\"\n  }, {\n    id: 2,\n    name: \"업무\"\n  }, {\n    id: 3,\n    name: \"휴지통\"\n  }]);\n  const [selectedFolder, setSelectedFolder] = useState(1);\n\n  // 로그인 확인 및 사용자 정보 가져오기\n  useEffect(() => {\n    const userId = sessionStorage.getItem(\"loggedInUserId\");\n    if (!userId) {\n      navigate(\"/login\"); // 로그인 안 되어 있다면 리다이렉트\n    } else {\n      axios.get(`http://localhost:8000/users/${userId}`).then(response => {\n        setLoggedInUser(response.data);\n        setTodos(response.data.todos || {});\n      }).catch(error => {\n        console.error(\"사용자 정보를 가져오는 데 실패했습니다:\", error);\n        navigate(\"/login\"); // 오류 시 로그인 페이지로 이동\n      });\n    }\n  }, [navigate]);\n  const onLogout = () => {\n    sessionStorage.removeItem(\"loggedInUserId\"); // 로그아웃 시 sessionStorage 초기화\n    navigate(\"/login\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ToDoList\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), loggedInUser && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uC548\\uB155\\uD558\\uC138\\uC694, \", loggedInUser.userId, \"\\uB2D8!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onLogout,\n      children: \"\\uB85C\\uADF8\\uC544\\uC6C3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(ToDoList, \"76xIKxDmiSZDAgMjoqX6KukL730=\", false, function () {\n  return [useNavigate];\n});\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","ToDoList","_s","navigate","loggedInUser","setLoggedInUser","todos","setTodos","folders","setFolders","id","name","selectedFolder","setSelectedFolder","userId","sessionStorage","getItem","get","then","response","data","catch","error","console","onLogout","removeItem","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/ldy/Code/React/웹개발응용/week15/Todolist/src/components/ToDoList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction ToDoList() {\n    const navigate = useNavigate();\n    const [loggedInUser, setLoggedInUser] = useState(null);\n    const [todos, setTodos] = useState({});\n    const [folders, setFolders] = useState([\n        { id: 1, name: \"개인\" },\n        { id: 2, name: \"업무\" },\n        { id: 3, name: \"휴지통\" },\n    ]);\n    const [selectedFolder, setSelectedFolder] = useState(1);\n\n    // 로그인 확인 및 사용자 정보 가져오기\n    useEffect(() => {\n        const userId = sessionStorage.getItem(\"loggedInUserId\");\n        if (!userId) {\n            navigate(\"/login\"); // 로그인 안 되어 있다면 리다이렉트\n        } else {\n            axios.get(`http://localhost:8000/users/${userId}`)\n                .then((response) => {\n                    setLoggedInUser(response.data);\n                    setTodos(response.data.todos || {});\n                })\n                .catch((error) => {\n                    console.error(\"사용자 정보를 가져오는 데 실패했습니다:\", error);\n                    navigate(\"/login\"); // 오류 시 로그인 페이지로 이동\n                });\n        }\n    }, [navigate]);\n\n    const onLogout = () => {\n        sessionStorage.removeItem(\"loggedInUserId\"); // 로그아웃 시 sessionStorage 초기화\n        navigate(\"/login\");\n    };\n\n    return (\n        <div>\n            <h1>ToDoList</h1>\n            {loggedInUser && <p>안녕하세요, {loggedInUser.userId}님!</p>}\n            <button onClick={onLogout}>로그아웃</button>\n            {/* 나머지 UI는 생략 */}\n        </div>\n    );\n}\n\nexport default ToDoList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACM,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtC,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,CACnC;IAAEe,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAK,CAAC,EACrB;IAAED,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAK,CAAC,EACrB;IAAED,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAM,CAAC,CACzB,CAAC;EACF,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;;EAEvD;EACAC,SAAS,CAAC,MAAM;IACZ,MAAMkB,MAAM,GAAGC,cAAc,CAACC,OAAO,CAAC,gBAAgB,CAAC;IACvD,IAAI,CAACF,MAAM,EAAE;MACTX,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;IACxB,CAAC,MAAM;MACHN,KAAK,CAACoB,GAAG,CAAC,+BAA+BH,MAAM,EAAE,CAAC,CAC7CI,IAAI,CAAEC,QAAQ,IAAK;QAChBd,eAAe,CAACc,QAAQ,CAACC,IAAI,CAAC;QAC9Bb,QAAQ,CAACY,QAAQ,CAACC,IAAI,CAACd,KAAK,IAAI,CAAC,CAAC,CAAC;MACvC,CAAC,CAAC,CACDe,KAAK,CAAEC,KAAK,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAC9CnB,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;MACxB,CAAC,CAAC;IACV;EACJ,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,MAAMqB,QAAQ,GAAGA,CAAA,KAAM;IACnBT,cAAc,CAACU,UAAU,CAAC,gBAAgB,CAAC,CAAC,CAAC;IAC7CtB,QAAQ,CAAC,QAAQ,CAAC;EACtB,CAAC;EAED,oBACIH,OAAA;IAAA0B,QAAA,gBACI1B,OAAA;MAAA0B,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChB1B,YAAY,iBAAIJ,OAAA;MAAA0B,QAAA,GAAG,kCAAO,EAACtB,YAAY,CAACU,MAAM,EAAC,SAAE;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACtD9B,OAAA;MAAQ+B,OAAO,EAAEP,QAAS;MAAAE,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEvC,CAAC;AAEd;AAAC5B,EAAA,CA1CQD,QAAQ;EAAA,QACIH,WAAW;AAAA;AAAAkC,EAAA,GADvB/B,QAAQ;AA4CjB,eAAeA,QAAQ;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}