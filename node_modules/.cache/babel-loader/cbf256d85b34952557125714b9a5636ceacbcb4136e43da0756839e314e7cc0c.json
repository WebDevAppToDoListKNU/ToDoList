{"ast":null,"code":"var _jsxFileName = \"/Users/ldy/Code/React/\\u110B\\u1170\\u11B8\\u1100\\u1162\\u1107\\u1161\\u11AF\\u110B\\u1173\\u11BC\\u110B\\u116D\\u11BC/week15/TodoGPT/src/components/ToDoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToDoList() {\n  _s();\n  var _todos$selectedFolder, _folders$find;\n  const navigate = useNavigate();\n  const [logInUser, setLogInUser] = useState(null);\n  const [todos, setTodos] = useState({});\n  const [folders, setFolders] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n  const [selectedFolder, setSelectedFolder] = useState(1);\n  const [editorOpen, setEditorOpen] = useState(false);\n  const [edit, setEdit] = useState(null);\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [newFolderName, setNewFolderName] = useState(\"\");\n  const [query, setQuery] = useState(\"\");\n  const [summary, setSummary] = useState(\"\");\n  const [sortOrder, setSortOrder] = useState(\"latest\");\n  const [filterDate, setFilterDate] = useState(\"\");\n  const TRASH_FOLDER_ID = 1;\n  useEffect(() => {\n    const userId = sessionStorage.getItem(\"logInUserId\");\n    if (userId) {\n      axios.get(`http://localhost:8000/users/${userId}`).then(response => {\n        const data = response.data;\n        setLogInUser(data);\n        setTodos(data.todos || {});\n        setFolders(data.folders || []);\n        setFavorites(data.favorites || []);\n      }).catch(error => console.error(\"로딩 실패\", error));\n    }\n  }, []);\n  const updateUserData = updates => {\n    const userId = logInUser === null || logInUser === void 0 ? void 0 : logInUser.id;\n    if (!userId) return;\n    axios.patch(`http://localhost:8000/users/${userId}`, updates).then(() => console.log(\"데이터 업데이트 성공\")).catch(error => console.error(\"데이터 업데이트 실패\", error));\n  };\n  const handleAddOrUpdateTodo = () => {\n    if (!title.trim() || !content.trim()) {\n      alert(\"제목과 내용을 입력하세요!\");\n      return;\n    }\n    const folderTodos = todos[selectedFolder] || [];\n    const newTodo = {\n      id: edit ? edit.id : folderTodos.length ? folderTodos[folderTodos.length - 1].id + 1 : 1,\n      title,\n      content,\n      date: edit ? filterDate : new Date().toISOString(),\n      folderId: selectedFolder\n    };\n    const updatedTodos = edit ? folderTodos.map(todo => todo.id === edit.id ? newTodo : todo) : [...folderTodos, newTodo];\n    const updatedData = {\n      ...todos,\n      [selectedFolder]: updatedTodos\n    };\n    setTodos(updatedData);\n    updateUserData({\n      todos: updatedData\n    });\n    closeEditor();\n  };\n  const handleDeleteTodo = id => {\n    const folderTodos = todos[selectedFolder] || [];\n    const updatedTodos = folderTodos.filter(todo => todo.id !== id);\n    const updatedData = {\n      ...todos,\n      [selectedFolder]: updatedTodos\n    };\n    setTodos(updatedData);\n    updateUserData({\n      todos: updatedData\n    });\n  };\n  const handleToggleFavorite = todoId => {\n    const isFavorite = favorites.some(fav => fav.todoId === todoId && fav.folderId === selectedFolder);\n    const updatedFavorites = isFavorite ? favorites.filter(fav => !(fav.todoId === todoId && fav.folderId === selectedFolder)) : [...favorites, {\n      todoId,\n      folderId: selectedFolder\n    }];\n    setFavorites(updatedFavorites);\n    updateUserData({\n      favorites: updatedFavorites\n    });\n  };\n  const handleAddFolder = () => {\n    if (!newFolderName.trim()) return;\n    const newFolder = {\n      id: folders.length + 1,\n      name: newFolderName.trim()\n    };\n    const updatedFolders = [...folders, newFolder];\n    setFolders(updatedFolders);\n    setNewFolderName(\"\");\n    updateUserData({\n      folders: updatedFolders\n    });\n  };\n  const closeEditor = () => {\n    setEditorOpen(false);\n    setEdit(null);\n    setTitle(\"\");\n    setContent(\"\");\n    setSummary(\"\");\n    setFilterDate(\"\");\n  };\n  const filteredTodos = (_todos$selectedFolder = todos[selectedFolder]) === null || _todos$selectedFolder === void 0 ? void 0 : _todos$selectedFolder.filter(todo => (!filterDate || todo.date === filterDate) && (todo.title.toLowerCase().includes(query.toLowerCase()) || todo.content.toLowerCase().includes(query.toLowerCase())));\n  const sortedTodos = (filteredTodos || []).sort((a, b) => sortOrder === \"latest\" ? new Date(b.date) - new Date(a.date) : new Date(a.date) - new Date(b.date));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      height: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      style: {\n        width: \"250px\",\n        borderRight: \"2px solid #ccc\",\n        padding: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"ToDoList\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), logInUser && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC548\\uB155\\uD558\\uC138\\uC694, \", logInUser.userId, \"\\uB2D8!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 31\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => logInUser ? sessionStorage.removeItem(\"logInUserId\") || navigate(\"/\") : navigate(\"/login\"),\n        children: logInUser ? \"로그아웃\" : \"로그인\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: folders.map(folder => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => setSelectedFolder(folder.id),\n          children: folder.name\n        }, folder.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newFolderName,\n        onChange: e => setNewFolderName(e.target.value),\n        placeholder: \"\\uC0C8 \\uD3F4\\uB354 \\uC774\\uB984\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddFolder,\n        children: \"\\uD3F4\\uB354 \\uCD94\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      style: {\n        flex: 1,\n        padding: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: ((_folders$find = folders.find(folder => folder.id === selectedFolder)) === null || _folders$find === void 0 ? void 0 : _folders$find.name) || \"메모\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\uAC80\\uC0C9\",\n          value: query,\n          onChange: e => setQuery(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSortOrder(sortOrder === \"latest\" ? \"oldest\" : \"latest\"),\n          children: sortOrder === \"latest\" ? \"최신순\" : \"오래된 순\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: sortedTodos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            onClick: () => setEditorOpen(true) || setEdit(todo),\n            children: todo.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteTodo(todo.id),\n            children: \"\\uC0AD\\uC81C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleToggleFavorite(todo.id),\n            children: favorites.some(fav => fav.todoId === todo.id) ? \"★\" : \"☆\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 29\n          }, this)]\n        }, todo.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 9\n  }, this);\n}\n_s(ToDoList, \"irulTPXx+JRnAVaQqJt7F45JzPc=\", false, function () {\n  return [useNavigate];\n});\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","ToDoList","_s","_todos$selectedFolder","_folders$find","navigate","logInUser","setLogInUser","todos","setTodos","folders","setFolders","favorites","setFavorites","selectedFolder","setSelectedFolder","editorOpen","setEditorOpen","edit","setEdit","title","setTitle","content","setContent","newFolderName","setNewFolderName","query","setQuery","summary","setSummary","sortOrder","setSortOrder","filterDate","setFilterDate","TRASH_FOLDER_ID","userId","sessionStorage","getItem","get","then","response","data","catch","error","console","updateUserData","updates","id","patch","log","handleAddOrUpdateTodo","trim","alert","folderTodos","newTodo","length","date","Date","toISOString","folderId","updatedTodos","map","todo","updatedData","closeEditor","handleDeleteTodo","filter","handleToggleFavorite","todoId","isFavorite","some","fav","updatedFavorites","handleAddFolder","newFolder","name","updatedFolders","filteredTodos","toLowerCase","includes","sortedTodos","sort","a","b","style","display","height","children","width","borderRight","padding","fileName","_jsxFileName","lineNumber","columnNumber","onClick","removeItem","folder","type","value","onChange","e","target","placeholder","flex","find","_c","$RefreshReg$"],"sources":["/Users/ldy/Code/React/웹개발응용/week15/TodoGPT/src/components/ToDoList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction ToDoList() {\n    const navigate = useNavigate();\n    const [logInUser, setLogInUser] = useState(null);\n    const [todos, setTodos] = useState({});\n    const [folders, setFolders] = useState([]);\n    const [favorites, setFavorites] = useState([]);\n    const [selectedFolder, setSelectedFolder] = useState(1);\n    const [editorOpen, setEditorOpen] = useState(false);\n    const [edit, setEdit] = useState(null);\n    const [title, setTitle] = useState(\"\");\n    const [content, setContent] = useState(\"\");\n    const [newFolderName, setNewFolderName] = useState(\"\");\n    const [query, setQuery] = useState(\"\");\n    const [summary, setSummary] = useState(\"\");\n    const [sortOrder, setSortOrder] = useState(\"latest\");\n    const [filterDate, setFilterDate] = useState(\"\");\n\n    const TRASH_FOLDER_ID = 1;\n\n    useEffect(() => {\n        const userId = sessionStorage.getItem(\"logInUserId\");\n        if (userId) {\n            axios.get(`http://localhost:8000/users/${userId}`)\n                .then((response) => {\n                    const data = response.data;\n                    setLogInUser(data);\n                    setTodos(data.todos || {});\n                    setFolders(data.folders || []);\n                    setFavorites(data.favorites || []);\n                })\n                .catch((error) => console.error(\"로딩 실패\", error));\n        }\n    }, []);\n\n    const updateUserData = (updates) => {\n        const userId = logInUser?.id;\n        if (!userId) return;\n\n        axios.patch(`http://localhost:8000/users/${userId}`, updates)\n            .then(() => console.log(\"데이터 업데이트 성공\"))\n            .catch((error) => console.error(\"데이터 업데이트 실패\", error));\n    };\n\n    const handleAddOrUpdateTodo = () => {\n        if (!title.trim() || !content.trim()) {\n            alert(\"제목과 내용을 입력하세요!\");\n            return;\n        }\n        const folderTodos = todos[selectedFolder] || [];\n        const newTodo = {\n            id: edit ? edit.id : (folderTodos.length ? folderTodos[folderTodos.length - 1].id + 1 : 1),\n            title,\n            content,\n            date: edit ? filterDate : new Date().toISOString(),\n            folderId: selectedFolder,\n        };\n        const updatedTodos = edit\n            ? folderTodos.map((todo) => (todo.id === edit.id ? newTodo : todo))\n            : [...folderTodos, newTodo];\n\n        const updatedData = { ...todos, [selectedFolder]: updatedTodos };\n        setTodos(updatedData);\n        updateUserData({ todos: updatedData });\n        closeEditor();\n    };\n\n    const handleDeleteTodo = (id) => {\n        const folderTodos = todos[selectedFolder] || [];\n        const updatedTodos = folderTodos.filter((todo) => todo.id !== id);\n        const updatedData = { ...todos, [selectedFolder]: updatedTodos };\n\n        setTodos(updatedData);\n        updateUserData({ todos: updatedData });\n    };\n\n    const handleToggleFavorite = (todoId) => {\n        const isFavorite = favorites.some((fav) => fav.todoId === todoId && fav.folderId === selectedFolder);\n        const updatedFavorites = isFavorite\n            ? favorites.filter((fav) => !(fav.todoId === todoId && fav.folderId === selectedFolder))\n            : [...favorites, { todoId, folderId: selectedFolder }];\n\n        setFavorites(updatedFavorites);\n        updateUserData({ favorites: updatedFavorites });\n    };\n\n    const handleAddFolder = () => {\n        if (!newFolderName.trim()) return;\n\n        const newFolder = { id: folders.length + 1, name: newFolderName.trim() };\n        const updatedFolders = [...folders, newFolder];\n\n        setFolders(updatedFolders);\n        setNewFolderName(\"\");\n        updateUserData({ folders: updatedFolders });\n    };\n\n    const closeEditor = () => {\n        setEditorOpen(false);\n        setEdit(null);\n        setTitle(\"\");\n        setContent(\"\");\n        setSummary(\"\");\n        setFilterDate(\"\");\n    };\n\n    const filteredTodos = todos[selectedFolder]?.filter((todo) =>\n        (!filterDate || todo.date === filterDate) &&\n        (todo.title.toLowerCase().includes(query.toLowerCase()) ||\n            todo.content.toLowerCase().includes(query.toLowerCase()))\n    );\n\n    const sortedTodos = (filteredTodos || []).sort((a, b) =>\n        sortOrder === \"latest\" ? new Date(b.date) - new Date(a.date) : new Date(a.date) - new Date(b.date)\n    );\n\n    return (\n        <div style={{ display: \"flex\", height: \"100vh\" }}>\n            <aside style={{ width: \"250px\", borderRight: \"2px solid #ccc\", padding: 10 }}>\n                <h2>ToDoList</h2>\n                {logInUser && <p>안녕하세요, {logInUser.userId}님!</p>}\n                <button onClick={() => logInUser ? sessionStorage.removeItem(\"logInUserId\") || navigate(\"/\") : navigate(\"/login\")}>\n                    {logInUser ? \"로그아웃\" : \"로그인\"}\n                </button>\n                <ul>\n                    {folders.map((folder) => (\n                        <li key={folder.id} onClick={() => setSelectedFolder(folder.id)}>\n                            {folder.name}\n                        </li>\n                    ))}\n                </ul>\n                <input\n                    type=\"text\"\n                    value={newFolderName}\n                    onChange={(e) => setNewFolderName(e.target.value)}\n                    placeholder=\"새 폴더 이름\"\n                />\n                <button onClick={handleAddFolder}>폴더 추가</button>\n            </aside>\n            <main style={{ flex: 1, padding: 20 }}>\n                <h2>{folders.find((folder) => folder.id === selectedFolder)?.name || \"메모\"}</h2>\n                <div>\n                    <input\n                        type=\"text\"\n                        placeholder=\"검색\"\n                        value={query}\n                        onChange={(e) => setQuery(e.target.value)}\n                    />\n                    <button onClick={() => setSortOrder(sortOrder === \"latest\" ? \"oldest\" : \"latest\")}>\n                        {sortOrder === \"latest\" ? \"최신순\" : \"오래된 순\"}\n                    </button>\n                </div>\n                <div>\n                    {sortedTodos.map((todo) => (\n                        <div key={todo.id}>\n                            <h3 onClick={() => setEditorOpen(true) || setEdit(todo)}>\n                                {todo.title}\n                            </h3>\n                            <button onClick={() => handleDeleteTodo(todo.id)}>삭제</button>\n                            <button onClick={() => handleToggleFavorite(todo.id)}>\n                                {favorites.some((fav) => fav.todoId === todo.id) ? \"★\" : \"☆\"}\n                            </button>\n                        </div>\n                    ))}\n                </div>\n            </main>\n        </div>\n    );\n}\n\nexport default ToDoList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}