{"ast":null,"code":"var _jsxFileName = \"/Users/ldy/Code/React/\\u110B\\u1170\\u11B8\\u1100\\u1162\\u1107\\u1161\\u11AF\\u110B\\u1173\\u11BC\\u110B\\u116D\\u11BC/week15/TodoGPT/src/components/ToDoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { chat } from './openai';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToDoList() {\n  _s();\n  var _folders$find, _folders$find2;\n  const navigate = useNavigate();\n  const [logInUser, setLogInUser] = useState(null);\n  const [todos, setTodos] = useState({});\n  const [folders, setFolders] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n  const [selectedFolder, setSelectedFolder] = useState(1);\n  const [editorOpen, setEditorOpen] = useState(false);\n  const [edit, setEdit] = useState(null);\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [newFolderName, setNewFolderName] = useState(\"\");\n  const [query, setQuery] = useState(\"\");\n  const [summary, setSummary] = useState(\"\");\n  const [sortOrder, setSortOrder] = useState(\"latest\");\n  const [filterDate, setFilterDate] = useState(\"\");\n  useEffect(() => {\n    const userData = async () => {\n      const userId = sessionStorage.getItem(\"logInUserId\");\n      if (userId) {\n        try {\n          const response = await axios.get(`http://localhost:8000/users/${userId}`);\n          setLogInUser(response.data);\n          setTodos(response.data.todos || {});\n          setFolders(response.data.folders || []);\n          setFavorites(response.data.favorites || []);\n        } catch (error) {\n          console.error(\"로딩 실패\", error);\n        }\n      }\n    };\n    userData();\n  }, []);\n  const updateFavorite = async updatedFavorites => {\n    const userId = logInUser === null || logInUser === void 0 ? void 0 : logInUser.id;\n    try {\n      await axios.patch(`http://localhost:8000/users/${userId}`, {\n        favorites: updatedFavorites\n      });\n      console.log(\"즐찾 업데이트\");\n    } catch (error) {\n      console.error(\"즐찾 실패, \", error);\n    }\n  };\n  const logout = () => {\n    sessionStorage.removeItem(\"logInUserId\");\n    setLogInUser(null);\n    navigate(\"/\");\n  };\n  const getCurrentDate = () => {\n    const now = new Date();\n    const year = now.getFullYear();\n    const month = String(now.getMonth() + 1).padStart(2, \"0\");\n    const date = String(now.getDate()).padStart(2, \"0\");\n    const hours = String(now.getHours()).padStart(2, \"0\");\n    const minutes = String(now.getMinutes()).padStart(2, \"0\");\n    const seconds = String(now.getSeconds()).padStart(2, \"0\");\n    return `${year}-${month}-${date} ${hours}:${minutes}:${seconds}`;\n  };\n  const addTodo = async () => {\n    if (title.trim() === \"\" || content.trim() === \"\") {\n      alert(\"제목과 내용을 입력하세요!\");\n      return;\n    }\n    const folderTodos = todos[selectedFolder] || [];\n    const userId = logInUser === null || logInUser === void 0 ? void 0 : logInUser.id;\n    const folderId = selectedFolder;\n    if (edit) {\n      const updatedTodos = folderTodos.map(todo => todo.id === edit.id ? {\n        ...todo,\n        title,\n        content,\n        date: filterDate,\n        folderId\n      } : todo);\n      const updatedData = {\n        ...todos,\n        [selectedFolder]: updatedTodos\n      };\n      setTodos(updatedData);\n      try {\n        await axios.patch(`http://localhost:8000/users/${userId}`, {\n          todos: updatedData\n        });\n        console.log(\"업데이트 성공\");\n      } catch (error) {\n        console.error(\"업데이트 에러발생, \", error);\n      }\n    } else {\n      const id = folderTodos.length > 0 ? folderTodos[folderTodos.length - 1].id + 1 : 1;\n      const newTodo = {\n        id,\n        title,\n        content,\n        date: getCurrentDate(),\n        folderId\n      };\n      const updatedData = {\n        ...todos,\n        [selectedFolder]: [...folderTodos, newTodo]\n      };\n      setTodos(updatedData);\n      try {\n        await axios.patch(`http://localhost:8000/users/${userId}`, {\n          todos: updatedData\n        });\n        console.log(\"메모 쓰기 성공\");\n      } catch (error) {\n        console.error(\"메모 쓰기 실패, \", error);\n      }\n    }\n    closeEditor();\n  };\n  const addFolder = async () => {\n    if (!logInUser) {\n      alert(\"로그인 후 폴더를 추가할 수 있습니다.\");\n      return;\n    }\n    if (newFolderName.trim()) {\n      const id = folders.length > 0 ? folders[folders.length - 1].id + 1 : 1;\n      const newFolder = {\n        id,\n        name: newFolderName.trim()\n      };\n      const updatedFolders = [...folders, newFolder];\n      setFolders(updatedFolders);\n      setNewFolderName(\"\");\n      const userId = logInUser === null || logInUser === void 0 ? void 0 : logInUser.id;\n      try {\n        await axios.patch(`http://localhost:8000/users/${userId}`, {\n          folders: updatedFolders\n        });\n        console.log(\"새 폴더 추가 성공\");\n      } catch (error) {\n        console.error(\"폴더 추가 실패, \", error);\n      }\n    }\n  };\n  const todoDelete = async id => {\n    const folderTodos = todos[selectedFolder];\n    const updatedTodos = folderTodos.filter(todo => todo.id !== id);\n    const todoDelete = folderTodos.find(todo => todo.id === id);\n    const updatedData = {\n      ...todos,\n      [selectedFolder]: updatedTodos\n    };\n    setTodos(updatedData);\n    if (todoDelete) {\n      const allTodos = Object.values(todos).flat();\n      const newId = Math.max(0, ...allTodos.map(todo => todo.id)) + 1;\n      const trashTodos = [...(todos[1] || []), {\n        ...todoDelete,\n        id: newId,\n        preFolder: selectedFolder\n      }];\n      setTodos(prev => ({\n        ...prev,\n        1: trashTodos\n      }));\n      const userId = logInUser === null || logInUser === void 0 ? void 0 : logInUser.id;\n      try {\n        await axios.patch(`http://localhost:8000/users/${userId}`, {\n          todos: {\n            ...updatedData,\n            1: trashTodos\n          }\n        });\n        console.log(\"휴지통 이동 성공\");\n      } catch (error) {\n        console.error(\"휴지통 이동 실패, \", error);\n      }\n    }\n  };\n  const todoRealDelete = async id => {\n    const trashTodos = todos[TRASH_FOLDER_ID];\n    const updatedTodos = trashTodos.filter(todo => todo.id !== id);\n    setTodos(prevState => ({\n      ...prevState,\n      [TRASH_FOLDER_ID]: updatedTodos\n    }));\n    const userId = logInUser === null || logInUser === void 0 ? void 0 : logInUser.id;\n    try {\n      await axios.patch(`http://localhost:8000/users/${userId}`, {\n        todos: {\n          ...todos,\n          [TRASH_FOLDER_ID]: updatedTodos\n        }\n      });\n      console.log(\"완전삭제 성공\");\n    } catch (error) {\n      console.error(\"완전삭제 실패, \", error);\n    }\n  };\n  const TRASH_FOLDER_ID = 1;\n  const todoRestore = async id => {\n    const trashTodos = todos[TRASH_FOLDER_ID];\n    const todoRestore = trashTodos.find(todo => todo.id === id);\n    const updatedTrashTodos = trashTodos.filter(todo => todo.id !== id);\n    if (todoRestore) {\n      const restoredFolder = todoRestore.preFolder;\n      const updatedFolderTodos = [...(todos[restoredFolder] || []), {\n        ...todoRestore,\n        preFolder: undefined\n      }];\n      const updatedData = {\n        ...todos,\n        [TRASH_FOLDER_ID]: updatedTrashTodos,\n        [restoredFolder]: updatedFolderTodos\n      };\n      setTodos(updatedData);\n      const userId = logInUser === null || logInUser === void 0 ? void 0 : logInUser.id;\n      try {\n        await axios.patch(`http://localhost:8000/users/${userId}`, {\n          todos: updatedData\n        });\n        console.log(\"복원 성공\");\n      } catch (error) {\n        console.error(\"복원 실패, \", error);\n      }\n    }\n  };\n  const toggleFavorite = async (todoId, folderId) => {\n    const isFavorite = favorites.some(item => item.todoId === todoId && item.folderId === folderId);\n    let updatedFavorites;\n    if (isFavorite) {\n      updatedFavorites = favorites.filter(item => item.todoId !== todoId || item.folderId !== folderId);\n    } else {\n      updatedFavorites = [...favorites, {\n        todoId,\n        folderId\n      }];\n    }\n    setFavorites(updatedFavorites);\n    await updateFavorite(updatedFavorites);\n  };\n  const openEditor = (todo = null) => {\n    if (!logInUser) {\n      alert(\"로그인 후 이용할 수 있습니다.\");\n      return;\n    }\n    setEditorOpen(true);\n    if (todo) {\n      setEdit(todo);\n      setTitle(todo.title);\n      setContent(todo.content);\n      setFilterDate(todo.date);\n    } else {\n      setEdit(null);\n      setTitle(\"\");\n      setContent(\"\");\n      setFilterDate(\"\");\n    }\n  };\n  const closeEditor = () => {\n    setEditorOpen(false);\n    setEdit(null);\n    setTitle(\"\");\n    setContent(\"\");\n    setSummary(\"\");\n    setFilterDate(\"\");\n  };\n  const sortTodos = todos => {\n    return todos.sort((a, b) => sortOrder === \"latest\" ? new Date(b.date) - new Date(a.date) : new Date(a.date) - new Date(b.date));\n  };\n  const filteredTodos = sortTodos((todos[selectedFolder] || []).filter(todo => {\n    const todoDate = todo.date.split(\" \")[0];\n    return (!filterDate || todoDate === filterDate) && (todo.title.toLowerCase().includes(search.toLowerCase()) || todo.content.toLowerCase().includes(search.toLowerCase()));\n  }));\n  const fetchSummary = () => {\n    const prompt = `다음은 사용자가 작성한 TodoList입니다. 내용을 간결하고, 가독성 있게 정리해주세요.\n        ${content}`;\n    chat(prompt, response => setSummary(response));\n  };\n  const updateTodoContent = () => {\n    setContent(summary);\n  };\n  const todoDeleteFolder = folderId => {\n    if (folderId === 1) {\n      alert(\"휴지통 폴더는 삭제할 수 없습니다.\");\n      return;\n    }\n    const updatedFolders = folders.filter(folder => folder.id !== folderId);\n    const updatedTodos = {\n      ...todos\n    };\n    delete updatedTodos[folderId];\n    setFolders(updatedFolders);\n    setTodos(updatedTodos);\n    const userId = logInUser === null || logInUser === void 0 ? void 0 : logInUser.id;\n    axios.patch(`http://localhost:8000/users/${userId}`, {\n      folders: updatedFolders,\n      todos: updatedTodos\n    }).then(() => console.log(\"폴더삭제 완\")).catch(error => console.error(\"폴더삭제 실패, \", error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      height: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"250px\",\n        borderRight: \"2px solid #ccc\",\n        padding: 10,\n        boxSizing: \"border-box\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"ToDoList\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 17\n      }, this), logInUser && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC548\\uB155\\uD558\\uC138\\uC694, \", logInUser.userId, \"\\uB2D8!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 21\n      }, this), logInUser ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: logout,\n        style: {\n          marginRight: 15\n        },\n        children: \"\\uB85C\\uADF8\\uC544\\uC6C3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(\"/login\"),\n        style: {\n          marginRight: 15\n        },\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 21\n      }, this), selectedFolder !== 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => openEditor(),\n        children: \"\\uBA54\\uBAA8 \\uC4F0\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 43\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyle: \"none\",\n          padding: 0\n        },\n        children: logInUser ? folders.map(folder => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => setSelectedFolder(folder.id),\n          style: {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            fontWeight: selectedFolder === folder.id ? \"bold\" : \"normal\",\n            backgroundColor: selectedFolder === folder.id ? \"#e0e0e0\" : \"transparent\",\n            padding: \"5px\",\n            borderRadius: \"4px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: folder.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 33\n          }, this), folder.id !== 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              e.stopPropagation();\n              todoDeleteFolder(folder.id);\n            },\n            children: \"\\uC0AD\\uC81C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 37\n          }, this)]\n        }, folder.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uB85C\\uADF8\\uC778 \\uD6C4 \\uD3F4\\uB354\\uB97C \\uBCFC \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newFolderName,\n          onChange: e => setNewFolderName(e.target.value),\n          placeholder: \"\\uC0C8 \\uD3F4\\uB354 \\uC774\\uB984\",\n          style: {\n            marginRight: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addFolder,\n          children: \"\\uD3F4\\uB354 \\uCD94\\uAC00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 17\n      }, this), logInUser && selectedFolder !== 1 && /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [(_folders$find = folders.find(folder => folder.id === selectedFolder)) === null || _folders$find === void 0 ? void 0 : _folders$find.name, \" \\uD3F4\\uB354 \\uC990\\uACA8\\uCC3E\\uAE30\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 21\n      }, this), logInUser && favorites.map(({\n        todoId,\n        folderId\n      }) => {\n        var _todos$selectedFolder;\n        if (folderId !== selectedFolder || folderId === 1) return null;\n        const note = (_todos$selectedFolder = todos[selectedFolder]) === null || _todos$selectedFolder === void 0 ? void 0 : _todos$selectedFolder.find(todo => todo.id === todoId);\n        return note ? /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => openEditor(note),\n          children: note.title\n        }, todoId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 29\n        }, this) : null;\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        padding: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: (_folders$find2 = folders.find(folder => folder.id === selectedFolder)) === null || _folders$find2 === void 0 ? void 0 : _folders$find2.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\uAC80\\uC0C9 (\\uC81C\\uBAA9/\\uB0B4\\uC6A9)\",\n          value: query,\n          onChange: e => setQuery(e.target.value),\n          style: {\n            width: \"30%\",\n            padding: 10,\n            marginBottom: 20,\n            boxSizing: \"border-box\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: 15\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: filterDate,\n          onChange: e => setFilterDate(e.target.value),\n          style: {\n            marginRight: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSortOrder(sortOrder === \"latest\" ? \"oldest\" : \"latest\"),\n          children: sortOrder === \"latest\" ? \"최신순\" : \"오래된 순\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(auto-fill, minmax(250px, 1fr))\",\n          gap: 20\n        },\n        children: logInUser ? filteredTodos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            border: \"1px solid #ccc\",\n            borderRadius: 10,\n            padding: 10,\n            backgroundColor: \"white\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            onClick: () => openEditor(todo),\n            children: todo.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: 14,\n              color: \"#555\"\n            },\n            children: todo.content.length > 20 ? todo.content.slice(0, 20) + '...' : todo.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: todo.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              width: \"100%\"\n            },\n            children: [selectedFolder !== 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => toggleFavorite(todo.id, todo.folderId),\n              children: favorites.some(item => item.todoId === todo.id && item.folderId === todo.folderId) ? \"★\" : \"☆\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 41\n            }, this), selectedFolder !== 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => todoDelete(todo.id),\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              width: \"100%\"\n            },\n            children: [selectedFolder === 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => todoRestore(todo.id),\n              children: \"\\uBCF5\\uC6D0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 41\n            }, this), selectedFolder === 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => todoRealDelete(todo.id),\n              children: \"\\uC644\\uC804 \\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 33\n          }, this)]\n        }, todo.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uB85C\\uADF8\\uC778 \\uD6C4 \\uBA54\\uBAA8\\uB97C \\uD655\\uC778\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 13\n    }, this), editorOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        width: \"100%\",\n        height: \"100%\",\n        backgroundColor: \"rgba(0, 0, 0, 0.05)\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: \"white\",\n          width: \"50%\",\n          height: \"50%\",\n          borderRadius: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeEditor,\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: 10\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: title,\n            onChange: e => setTitle(e.target.value),\n            placeholder: \"\\uC81C\\uBAA9 \\uC785\\uB825\",\n            style: {\n              width: \"100%\",\n              padding: 10,\n              fontSize: 16,\n              boxSizing: \"border-box\",\n              marginBottom: 10\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: content,\n            onChange: e => setContent(e.target.value),\n            placeholder: \"\\uB0B4\\uC6A9 \\uC785\\uB825\",\n            style: {\n              width: \"100%\",\n              height: 200,\n              padding: 10,\n              fontSize: 16,\n              boxSizing: \"border-box\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: fetchSummary,\n            children: \"GPT \\uB0B4\\uC6A9 \\uC694\\uC57D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 29\n          }, this), summary && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: summary\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: updateTodoContent,\n              children: \"\\uBCC0\\uACBD\\uD558\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addTodo,\n            children: \"\\uC800\\uC7A5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 308,\n    columnNumber: 9\n  }, this);\n}\n_s(ToDoList, \"irulTPXx+JRnAVaQqJt7F45JzPc=\", false, function () {\n  return [useNavigate];\n});\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useState","useEffect","axios","chat","useNavigate","jsxDEV","_jsxDEV","ToDoList","_s","_folders$find","_folders$find2","navigate","logInUser","setLogInUser","todos","setTodos","folders","setFolders","favorites","setFavorites","selectedFolder","setSelectedFolder","editorOpen","setEditorOpen","edit","setEdit","title","setTitle","content","setContent","newFolderName","setNewFolderName","query","setQuery","summary","setSummary","sortOrder","setSortOrder","filterDate","setFilterDate","userData","userId","sessionStorage","getItem","response","get","data","error","console","updateFavorite","updatedFavorites","id","patch","log","logout","removeItem","getCurrentDate","now","Date","year","getFullYear","month","String","getMonth","padStart","date","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","addTodo","trim","alert","folderTodos","folderId","updatedTodos","map","todo","updatedData","length","newTodo","closeEditor","addFolder","newFolder","name","updatedFolders","todoDelete","filter","find","allTodos","Object","values","flat","newId","Math","max","trashTodos","preFolder","prev","todoRealDelete","TRASH_FOLDER_ID","prevState","todoRestore","updatedTrashTodos","restoredFolder","updatedFolderTodos","undefined","toggleFavorite","todoId","isFavorite","some","item","openEditor","sortTodos","sort","a","b","filteredTodos","todoDate","split","toLowerCase","includes","search","fetchSummary","prompt","updateTodoContent","todoDeleteFolder","folder","then","catch","style","display","height","children","width","borderRight","padding","boxSizing","fileName","_jsxFileName","lineNumber","columnNumber","onClick","marginRight","listStyle","justifyContent","alignItems","fontWeight","backgroundColor","borderRadius","e","stopPropagation","type","value","onChange","target","placeholder","_todos$selectedFolder","note","flex","marginBottom","gridTemplateColumns","gap","border","fontSize","color","slice","position","_c","$RefreshReg$"],"sources":["/Users/ldy/Code/React/웹개발응용/week15/TodoGPT/src/components/ToDoList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { chat } from './openai';\nimport { useNavigate } from 'react-router-dom';\n\n\nfunction ToDoList() {\n\n    const navigate = useNavigate();\n    const [logInUser, setLogInUser] = useState(null);\n    const [todos, setTodos] = useState({});\n    const [folders, setFolders] = useState([]);\n    const [favorites, setFavorites] = useState([]);\n    const [selectedFolder, setSelectedFolder] = useState(1);\n    const [editorOpen, setEditorOpen] = useState(false);\n    const [edit, setEdit] = useState(null);\n    const [title, setTitle] = useState(\"\");\n    const [content, setContent] = useState(\"\");\n    const [newFolderName, setNewFolderName] = useState(\"\");\n    const [query, setQuery] = useState(\"\");\n    const [summary, setSummary] = useState(\"\");\n    const [sortOrder, setSortOrder] = useState(\"latest\");\n    const [filterDate, setFilterDate] = useState(\"\");\n\n\n    useEffect(() => {\n        const userData = async () => {\n            const userId = sessionStorage.getItem(\"logInUserId\");\n            if (userId) {\n                try {\n                    const response = await axios.get(`http://localhost:8000/users/${userId}`);\n                    setLogInUser(response.data);\n                    setTodos(response.data.todos || {});\n                    setFolders(response.data.folders || []);\n                    setFavorites(response.data.favorites || []);\n                } catch (error) {\n                    console.error(\"로딩 실패\", error);\n                }\n            }\n        };\n\n        userData();\n    }, []);\n\n\n    const updateFavorite = async (updatedFavorites) => {\n        const userId = logInUser?.id;\n        try {\n            await axios.patch(`http://localhost:8000/users/${userId}`, { favorites: updatedFavorites });\n            console.log(\"즐찾 업데이트\");\n        } catch (error) {\n            console.error(\"즐찾 실패, \", error);\n        }\n    };\n\n    const logout = () => {\n        sessionStorage.removeItem(\"logInUserId\");\n        setLogInUser(null);\n        navigate(\"/\");\n    };\n\n    const getCurrentDate = () => {\n        const now = new Date();\n        const year = now.getFullYear();\n        const month = String(now.getMonth() + 1).padStart(2, \"0\");\n        const date = String(now.getDate()).padStart(2, \"0\");\n        const hours = String(now.getHours()).padStart(2, \"0\");\n        const minutes = String(now.getMinutes()).padStart(2, \"0\");\n        const seconds = String(now.getSeconds()).padStart(2, \"0\");\n\n        return `${year}-${month}-${date} ${hours}:${minutes}:${seconds}`;\n    };\n\n\n    const addTodo = async () => {\n        if (title.trim() === \"\" || content.trim() === \"\") {\n            alert(\"제목과 내용을 입력하세요!\");\n            return;\n        }\n        const folderTodos = todos[selectedFolder] || [];\n        const userId = logInUser?.id;\n        const folderId = selectedFolder;\n\n        if (edit) {\n            const updatedTodos = folderTodos.map((todo) =>\n                todo.id === edit.id ? { ...todo, title, content, date: filterDate, folderId } : todo\n            );\n            const updatedData = { ...todos, [selectedFolder]: updatedTodos };\n            setTodos(updatedData);\n\n            try {\n                await axios.patch(`http://localhost:8000/users/${userId}`, { todos: updatedData });\n                console.log(\"업데이트 성공\");\n            } catch (error) {\n                console.error(\"업데이트 에러발생, \", error);\n            }\n        } else {\n            const id = folderTodos.length > 0 ? folderTodos[folderTodos.length - 1].id + 1 : 1;\n            const newTodo = { id, title, content, date: getCurrentDate(), folderId };\n            const updatedData = { ...todos, [selectedFolder]: [...folderTodos, newTodo] };\n            setTodos(updatedData);\n\n            try {\n                await axios.patch(`http://localhost:8000/users/${userId}`, { todos: updatedData });\n                console.log(\"메모 쓰기 성공\");\n            } catch (error) {\n                console.error(\"메모 쓰기 실패, \", error);\n            }\n        }\n        closeEditor();\n    };\n\n    const addFolder = async () => {\n        if (!logInUser) {\n            alert(\"로그인 후 폴더를 추가할 수 있습니다.\");\n            return;\n        }\n        if (newFolderName.trim()) {\n            const id = folders.length > 0 ? folders[folders.length - 1].id + 1 : 1;\n            const newFolder = { id, name: newFolderName.trim() };\n            const updatedFolders = [...folders, newFolder];\n            setFolders(updatedFolders);\n            setNewFolderName(\"\");\n\n            const userId = logInUser?.id;\n            try {\n                await axios.patch(`http://localhost:8000/users/${userId}`, { folders: updatedFolders });\n                console.log(\"새 폴더 추가 성공\");\n            } catch (error) {\n                console.error(\"폴더 추가 실패, \", error);\n            }\n        }\n    };\n\n    const todoDelete = async (id) => {\n        const folderTodos = todos[selectedFolder];\n        const updatedTodos = folderTodos.filter((todo) => todo.id !== id);\n        const todoDelete = folderTodos.find((todo) => todo.id === id);\n\n        const updatedData = { ...todos, [selectedFolder]: updatedTodos };\n        setTodos(updatedData);\n\n        if (todoDelete) {\n            const allTodos = Object.values(todos).flat();\n            const newId = Math.max(0, ...allTodos.map((todo) => todo.id)) + 1;\n\n            const trashTodos = [\n                ...(todos[1] || []),\n                { ...todoDelete, id: newId, preFolder: selectedFolder }\n            ];\n            setTodos((prev) => ({ ...prev, 1: trashTodos }));\n\n            const userId = logInUser?.id;\n            try {\n                await axios.patch(`http://localhost:8000/users/${userId}`, { todos: { ...updatedData, 1: trashTodos } });\n                console.log(\"휴지통 이동 성공\");\n            } catch (error) {\n                console.error(\"휴지통 이동 실패, \", error);\n            }\n        }\n    };\n\n    const todoRealDelete = async (id) => {\n        const trashTodos = todos[TRASH_FOLDER_ID];\n        const updatedTodos = trashTodos.filter((todo) => todo.id !== id);\n\n        setTodos((prevState) => ({\n            ...prevState,\n            [TRASH_FOLDER_ID]: updatedTodos,\n        }));\n\n        const userId = logInUser?.id;\n        try {\n            await axios.patch(`http://localhost:8000/users/${userId}`, {\n                todos: { ...todos, [TRASH_FOLDER_ID]: updatedTodos },\n            });\n            console.log(\"완전삭제 성공\");\n        } catch (error) {\n            console.error(\"완전삭제 실패, \", error);\n        }\n    };\n\n    const TRASH_FOLDER_ID = 1;\n\n    const todoRestore = async (id) => {\n        const trashTodos = todos[TRASH_FOLDER_ID];\n        const todoRestore = trashTodos.find((todo) => todo.id === id);\n        const updatedTrashTodos = trashTodos.filter((todo) => todo.id !== id);\n\n        if (todoRestore) {\n            const restoredFolder = todoRestore.preFolder;\n            const updatedFolderTodos = [...(todos[restoredFolder] || []), { ...todoRestore, preFolder: undefined }];\n            const updatedData = {\n                ...todos,\n                [TRASH_FOLDER_ID]: updatedTrashTodos,\n                [restoredFolder]: updatedFolderTodos\n            };\n            setTodos(updatedData);\n\n            const userId = logInUser?.id;\n            try {\n                await axios.patch(`http://localhost:8000/users/${userId}`, { todos: updatedData });\n                console.log(\"복원 성공\");\n            } catch (error) {\n                console.error(\"복원 실패, \", error);\n            }\n        }\n    };\n\n\n    const toggleFavorite = async (todoId, folderId) => {\n        const isFavorite = favorites.some((item) => item.todoId === todoId && item.folderId === folderId);\n\n        let updatedFavorites;\n        if (isFavorite) {\n            updatedFavorites = favorites.filter((item) => item.todoId !== todoId || item.folderId !== folderId);\n        } else {\n            updatedFavorites = [...favorites, { todoId, folderId }];\n        }\n\n        setFavorites(updatedFavorites);\n        await updateFavorite(updatedFavorites);\n    };\n\n\n\n    const openEditor = (todo = null) => {\n        if (!logInUser) {\n            alert(\"로그인 후 이용할 수 있습니다.\");\n            return;\n        }\n        setEditorOpen(true);\n        if (todo) {\n            setEdit(todo);\n            setTitle(todo.title);\n            setContent(todo.content);\n            setFilterDate(todo.date);\n        } else {\n            setEdit(null);\n            setTitle(\"\");\n            setContent(\"\");\n            setFilterDate(\"\");\n        }\n    };\n\n    const closeEditor = () => {\n        setEditorOpen(false);\n        setEdit(null);\n        setTitle(\"\");\n        setContent(\"\");\n        setSummary(\"\");\n        setFilterDate(\"\");\n    };\n\n    const sortTodos = (todos) => {\n        return todos.sort((a, b) =>\n            sortOrder === \"latest\"\n                ? new Date(b.date) - new Date(a.date)\n                : new Date(a.date) - new Date(b.date)\n        );\n    };\n\n    const filteredTodos = sortTodos(\n        (todos[selectedFolder] || []).filter((todo) => {\n            const todoDate = todo.date.split(\" \")[0];\n            return (\n                (!filterDate || todoDate === filterDate) &&\n                (todo.title.toLowerCase().includes(search.toLowerCase()) ||\n                    todo.content.toLowerCase().includes(search.toLowerCase()))\n            );\n        })\n    );\n\n    const fetchSummary = () => {\n        const prompt = `다음은 사용자가 작성한 TodoList입니다. 내용을 간결하고, 가독성 있게 정리해주세요.\n        ${content}`;\n\n        chat(prompt, (response) => setSummary(response));\n    };\n\n    const updateTodoContent = () => {\n        setContent(summary);\n    };\n\n    const todoDeleteFolder = (folderId) => {\n        if (folderId === 1) {\n            alert(\"휴지통 폴더는 삭제할 수 없습니다.\");\n            return;\n        }\n\n        const updatedFolders = folders.filter((folder) => folder.id !== folderId);\n        const updatedTodos = { ...todos };\n\n        delete updatedTodos[folderId];\n        setFolders(updatedFolders);\n        setTodos(updatedTodos);\n\n        const userId = logInUser?.id;\n        axios.patch(`http://localhost:8000/users/${userId}`, {\n            folders: updatedFolders,\n            todos: updatedTodos,\n        })\n            .then(() => console.log(\"폴더삭제 완\"))\n            .catch((error) => console.error(\"폴더삭제 실패, \", error));\n    };\n\n    return (\n        <div style={{ display: \"flex\", height: \"100vh\" }}>\n            <div\n                style={{\n                    width: \"250px\",\n                    borderRight: \"2px solid #ccc\",\n                    padding: 10,\n                    boxSizing: \"border-box\",\n                }}>\n                <h2>ToDoList</h2>\n                {logInUser && (\n                    <p>안녕하세요, {logInUser.userId}님!</p>\n                )}\n                {logInUser ? (\n                    <button onClick={logout}\n                        style={{ marginRight: 15 }}>로그아웃</button>\n                ) : (\n                    <button onClick={() => navigate(\"/login\")}\n                        style={{ marginRight: 15 }}>로그인</button>\n                )}\n\n                {selectedFolder !== 1 && (<button\n                    onClick={() => openEditor()}>\n                    메모 쓰기\n                </button>)}\n\n                <ul style={{ listStyle: \"none\", padding: 0 }}>\n                    {logInUser ? (\n                        folders.map((folder) => (\n                            <li\n                                key={folder.id}\n                                onClick={() => setSelectedFolder(folder.id)}\n                                style={{\n                                    display: \"flex\",\n                                    justifyContent: \"space-between\",\n                                    alignItems: \"center\",\n                                    fontWeight: selectedFolder === folder.id ? \"bold\" : \"normal\",\n                                    backgroundColor: selectedFolder === folder.id ? \"#e0e0e0\" : \"transparent\",\n                                    padding: \"5px\",\n                                    borderRadius: \"4px\",\n                                }}>\n                                <span>{folder.name}</span>\n                                {folder.id !== 1 && (\n                                    <button\n                                        onClick={(e) => {\n                                            e.stopPropagation();\n                                            todoDeleteFolder(folder.id);\n                                        }}>\n                                        삭제\n                                    </button>\n                                )}\n                            </li>\n                        ))\n                    ) : (\n                        <p>로그인 후 폴더를 볼 수 있습니다.</p>\n                    )}\n                </ul>\n\n                <div>\n                    <input\n                        type=\"text\"\n                        value={newFolderName}\n                        onChange={(e) => setNewFolderName(e.target.value)}\n                        placeholder=\"새 폴더 이름\"\n                        style={{ marginRight: 10 }} />\n\n                    <button onClick={addFolder}>폴더 추가</button>\n                </div>\n                {logInUser && selectedFolder !== 1 && (\n                    <h3>\n                        {folders.find((folder) => folder.id === selectedFolder)?.name} 폴더 즐겨찾기\n                    </h3>\n                )}\n                {logInUser &&\n                    favorites.map(({ todoId, folderId }) => {\n                        if (folderId !== selectedFolder || folderId === 1) return null;\n\n                        const note = todos[selectedFolder]?.find((todo) => todo.id === todoId);\n                        return note ? (\n                            <div key={todoId} onClick={() => openEditor(note)}>\n                                {note.title}\n                            </div>\n                        ) : null;\n                    })}\n            </div>\n\n            <div style={{ flex: 1, padding: 20 }}>\n                <h2>{folders.find((folder) => folder.id === selectedFolder)?.name}</h2>\n                <div>\n                    <input\n                        type=\"text\"\n                        placeholder=\"검색 (제목/내용)\"\n                        value={query}\n                        onChange={(e) => setQuery(e.target.value)}\n                        style={{\n                            width: \"30%\",\n                            padding: 10,\n                            marginBottom: 20,\n                            boxSizing: \"border-box\",\n                        }} />\n                </div>\n                <div style={{ marginBottom: 15 }}>\n                    <input\n                        type=\"date\"\n                        value={filterDate}\n                        onChange={(e) => setFilterDate(e.target.value)}\n                        style={{ marginRight: 10 }}\n\n                    />\n                    <button onClick={() => setSortOrder(sortOrder === \"latest\" ? \"oldest\" : \"latest\")}>\n                        {sortOrder === \"latest\" ? \"최신순\" : \"오래된 순\"}\n                    </button>\n                </div>\n                <div\n                    style={{\n                        display: \"grid\",\n                        gridTemplateColumns: \"repeat(auto-fill, minmax(250px, 1fr))\",\n                        gap: 20,\n                    }}>\n                    {logInUser ? (\n                        filteredTodos.map((todo) => (\n                            <div\n                                key={todo.id}\n                                style={{\n                                    border: \"1px solid #ccc\",\n                                    borderRadius: 10,\n                                    padding: 10,\n                                    backgroundColor: \"white\",\n                                }}>\n                                <h3\n                                    onClick={() => openEditor(todo)}>\n                                    {todo.title}\n                                </h3>\n                                <p style={{ fontSize: 14, color: \"#555\" }}>\n                                    {todo.content.length > 20 ? todo.content.slice(0, 20) + '...' : todo.content}\n                                </p>\n                                <p>{todo.date}</p>\n                                <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"100%\" }}>\n                                    {selectedFolder !== 1 && (\n                                        <button onClick={() => toggleFavorite(todo.id, todo.folderId)}>\n                                            {favorites.some((item) => item.todoId === todo.id && item.folderId === todo.folderId) ? \"★\" : \"☆\"}\n                                        </button>)}\n                                    {selectedFolder !== 1 && (\n                                        <button onClick={() => todoDelete(todo.id)}>\n                                            삭제\n                                        </button>\n                                    )}\n                                </div>\n                                <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"100%\" }}>\n                                    {selectedFolder === 1 && (\n                                        <button\n                                            onClick={() => todoRestore(todo.id)}>\n                                            복원\n                                        </button>\n                                    )}\n                                    {selectedFolder === 1 && (\n                                        <button onClick={() => todoRealDelete(todo.id)}>\n                                            완전 삭제\n                                        </button>\n                                    )}\n                                </div>\n                            </div>\n                        ))\n                    ) : (\n                        <p>로그인 후 메모를 확인할 수 있습니다.</p>\n                    )}\n\n                </div>\n            </div>\n\n            {editorOpen && (\n                <div\n                    style={{\n                        position: \"fixed\",\n                        width: \"100%\",\n                        height: \"100%\",\n                        backgroundColor: \"rgba(0, 0, 0, 0.05)\",\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                    }}>\n                    <div\n                        style={{\n                            backgroundColor: \"white\",\n                            width: \"50%\",\n                            height: \"50%\",\n                            borderRadius: 10,\n                        }}>\n                        <button\n                            onClick={closeEditor}>\n                            ✕\n                        </button>\n                        <div style={{ padding: 10 }}>\n                            <input\n                                type=\"text\"\n                                value={title}\n                                onChange={(e) => setTitle(e.target.value)}\n                                placeholder=\"제목 입력\"\n                                style={{\n                                    width: \"100%\",\n                                    padding: 10,\n                                    fontSize: 16,\n                                    boxSizing: \"border-box\",\n                                    marginBottom: 10,\n                                }}\n                            />\n                            <textarea\n                                value={content}\n                                onChange={(e) => setContent(e.target.value)}\n                                placeholder=\"내용 입력\"\n                                style={{\n                                    width: \"100%\",\n                                    height: 200,\n                                    padding: 10,\n                                    fontSize: 16,\n                                    boxSizing: \"border-box\",\n                                }}\n                            ></textarea>\n\n                            <button\n                                onClick={fetchSummary}>\n                                GPT 내용 요약\n                            </button>\n                            {summary && (\n                                <div>\n                                    <p>{summary}</p>\n                                    <button\n                                        onClick={updateTodoContent}>\n                                        변경하기\n                                    </button>\n                                </div>\n                            )}\n                            <button\n                                onClick={addTodo}>\n                                저장\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default ToDoList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}