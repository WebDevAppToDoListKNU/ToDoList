{"ast":null,"code":"var _jsxFileName = \"/Users/ldy/Code/React/\\u110B\\u1170\\u11B8\\u1100\\u1162\\u1107\\u1161\\u11AF\\u110B\\u1173\\u11BC\\u110B\\u116D\\u11BC/week15/Todolist/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [userId, setUserId] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n  const handleLogin = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8000/users\");\n      const users = await response.json();\n      const user = users.find(u => u.userId === userId && u.password === password);\n      if (user) {\n        // 로그인 성공 시 sessionStorage에 사용자 ID 저장\n        sessionStorage.setItem(\"loggedInUserId\", user.id);\n        navigate(\"/\"); // ToDoList로 이동\n      } else {\n        setError(\"아이디 또는 비밀번호가 잘못되었습니다.\");\n      }\n    } catch (error) {\n      console.error(\"로그인 실패:\", error);\n      setError(\"서버에 연결할 수 없습니다. 다시 시도해주세요.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\uC544\\uC774\\uB514\",\n      value: userId,\n      onChange: e => setUserId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"hv/AbliaxpEDosg8ZeqcC5cV+QI=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","_s","userId","setUserId","password","setPassword","error","setError","navigate","handleLogin","response","fetch","users","json","user","find","u","sessionStorage","setItem","id","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","style","color","_c","$RefreshReg$"],"sources":["/Users/ldy/Code/React/웹개발응용/week15/Todolist/src/components/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction Login() {\n    const [userId, setUserId] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [error, setError] = useState(\"\");\n    const navigate = useNavigate();\n\n    const handleLogin = async () => {\n        try {\n            const response = await fetch(\"http://localhost:8000/users\");\n            const users = await response.json();\n\n            const user = users.find(\n                (u) => u.userId === userId && u.password === password\n            );\n\n            if (user) {\n                // 로그인 성공 시 sessionStorage에 사용자 ID 저장\n                sessionStorage.setItem(\"loggedInUserId\", user.id);\n                navigate(\"/\"); // ToDoList로 이동\n            } else {\n                setError(\"아이디 또는 비밀번호가 잘못되었습니다.\");\n            }\n        } catch (error) {\n            console.error(\"로그인 실패:\", error);\n            setError(\"서버에 연결할 수 없습니다. 다시 시도해주세요.\");\n        }\n    };\n\n    return (\n        <div>\n            <h2>로그인</h2>\n            <input\n                type=\"text\"\n                placeholder=\"아이디\"\n                value={userId}\n                onChange={(e) => setUserId(e.target.value)}\n            />\n            <input\n                type=\"password\"\n                placeholder=\"비밀번호\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n            />\n            <button onClick={handleLogin}>로그인</button>\n            {error && <p style={{ color: \"red\" }}>{error}</p>}\n        </div>\n    );\n}\n\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMY,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9B,MAAMY,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;MAC3D,MAAMC,KAAK,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAEnC,MAAMC,IAAI,GAAGF,KAAK,CAACG,IAAI,CAClBC,CAAC,IAAKA,CAAC,CAACd,MAAM,KAAKA,MAAM,IAAIc,CAAC,CAACZ,QAAQ,KAAKA,QACjD,CAAC;MAED,IAAIU,IAAI,EAAE;QACN;QACAG,cAAc,CAACC,OAAO,CAAC,gBAAgB,EAAEJ,IAAI,CAACK,EAAE,CAAC;QACjDX,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;MACnB,CAAC,MAAM;QACHD,QAAQ,CAAC,uBAAuB,CAAC;MACrC;IACJ,CAAC,CAAC,OAAOD,KAAK,EAAE;MACZc,OAAO,CAACd,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;MAC/BC,QAAQ,CAAC,4BAA4B,CAAC;IAC1C;EACJ,CAAC;EAED,oBACIR,OAAA;IAAAsB,QAAA,gBACItB,OAAA;MAAAsB,QAAA,EAAI;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACZ1B,OAAA;MACI2B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,oBAAK;MACjBC,KAAK,EAAE1B,MAAO;MACd2B,QAAQ,EAAGC,CAAC,IAAK3B,SAAS,CAAC2B,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACF1B,OAAA;MACI2B,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,0BAAM;MAClBC,KAAK,EAAExB,QAAS;MAChByB,QAAQ,EAAGC,CAAC,IAAKzB,WAAW,CAACyB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACF1B,OAAA;MAAQiC,OAAO,EAAEvB,WAAY;MAAAY,QAAA,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACzCnB,KAAK,iBAAIP,OAAA;MAAGkC,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAb,QAAA,EAAEf;IAAK;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEd;AAACxB,EAAA,CA/CQD,KAAK;EAAA,QAIOH,WAAW;AAAA;AAAAsC,EAAA,GAJvBnC,KAAK;AAiDd,eAAeA,KAAK;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}