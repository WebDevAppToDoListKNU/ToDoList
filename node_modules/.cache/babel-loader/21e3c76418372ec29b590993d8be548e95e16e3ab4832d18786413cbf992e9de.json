{"ast":null,"code":"var _jsxFileName = \"/Users/ldy/Code/React/\\u110B\\u1170\\u11B8\\u1100\\u1162\\u1107\\u1161\\u11AF\\u110B\\u1173\\u11BC\\u110B\\u116D\\u11BC/week15/Todolist/src/App.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport ToDoList from './components/ToDoList';\nimport Login from './components/Login';\nimport Join from './components/Join';\nimport Header from './components/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      loggedInUser: loggedInUser,\n      isAdmin: isAdmin,\n      msg: msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container my-4\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/qna/create\",\n          element: /*#__PURE__*/_jsxDEV(QnaForm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 56\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/qnas\",\n          element: /*#__PURE__*/_jsxDEV(QnaList, {\n            loggedInUser: loggedInUser,\n            isAdmin: isAdmin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/qna/:qnaId\",\n          element: /*#__PURE__*/_jsxDEV(QnaDetail, {\n            loggedInUser: loggedInUser,\n            isAdmin: isAdmin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 56\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n}\n_c = App;\nexport default App;\n\n// import React, { useState } from \"react\";\n// import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n// import Header from \"./components/Header\";\n\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n\n// function App() {\n//     const [loggedInUser, setLoggedInUser] = useState(null); // Stores the logged-in user\n//     const [isAdmin, setIsAdmin] = useState(false); // Indicates whether the logged-in user is an admin\n\n//     const msg = \"Q&A입니다. 문의사항을 남겨주세요.\"; // Custom message\n\n//     return (\n//         <Router>\n//             <Header loggedInUser={loggedInUser} isAdmin={isAdmin} msg={msg} />\n//             <main className=\"container my-4\">\n//                 <Routes>\n//                     <Route path=\"/qna/create\" element={<QnaForm />} />\n//                     <Route path=\"/qnas\" element={<QnaList loggedInUser={loggedInUser} isAdmin={isAdmin} />} />\n//                     <Route path=\"/qna/:qnaId\" element={<QnaDetail loggedInUser={loggedInUser} isAdmin={isAdmin} />} />\n//                 </Routes>\n//             </main>\n//             <Footer />\n//         </Router>\n//     );\n// }\n\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Route","Routes","ToDoList","Login","Join","Header","jsxDEV","_jsxDEV","App","children","loggedInUser","isAdmin","msg","fileName","_jsxFileName","lineNumber","columnNumber","className","path","element","QnaForm","QnaList","QnaDetail","Footer","_c","$RefreshReg$"],"sources":["/Users/ldy/Code/React/웹개발응용/week15/Todolist/src/App.js"],"sourcesContent":["import React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport ToDoList from './components/ToDoList';\nimport Login from './components/Login';\nimport Join from './components/Join';\nimport Header from './components/Header';\n\n\nfunction App() {\n    return (\n        <Router>\n            <Header loggedInUser={loggedInUser} isAdmin={isAdmin} msg={msg} />\n            <main className=\"container my-4\">\n                <Routes>\n                    <Route path=\"/qna/create\" element={<QnaForm />} />\n                    <Route path=\"/qnas\" element={<QnaList loggedInUser={loggedInUser} isAdmin={isAdmin} />} />\n                    <Route path=\"/qna/:qnaId\" element={<QnaDetail loggedInUser={loggedInUser} isAdmin={isAdmin} />} />\n                </Routes>\n            </main>\n            <Footer />\n        </Router>\n    );\n\n}\nexport default App;\n\n\n\n\n// import React, { useState } from \"react\";\n// import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n// import Header from \"./components/Header\";\n\n\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n\n// function App() {\n//     const [loggedInUser, setLoggedInUser] = useState(null); // Stores the logged-in user\n//     const [isAdmin, setIsAdmin] = useState(false); // Indicates whether the logged-in user is an admin\n\n//     const msg = \"Q&A입니다. 문의사항을 남겨주세요.\"; // Custom message\n\n//     return (\n//         <Router>\n//             <Header loggedInUser={loggedInUser} isAdmin={isAdmin} msg={msg} />\n//             <main className=\"container my-4\">\n//                 <Routes>\n//                     <Route path=\"/qna/create\" element={<QnaForm />} />\n//                     <Route path=\"/qnas\" element={<QnaList loggedInUser={loggedInUser} isAdmin={isAdmin} />} />\n//                     <Route path=\"/qna/:qnaId\" element={<QnaDetail loggedInUser={loggedInUser} isAdmin={isAdmin} />} />\n//                 </Routes>\n//             </main>\n//             <Footer />\n//         </Router>\n//     );\n// }\n\n// export default App;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AACzE,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,MAAM,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGzC,SAASC,GAAGA,CAAA,EAAG;EACX,oBACID,OAAA,CAACR,MAAM;IAAAU,QAAA,gBACHF,OAAA,CAACF,MAAM;MAACK,YAAY,EAAEA,YAAa;MAACC,OAAO,EAAEA,OAAQ;MAACC,GAAG,EAAEA;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClET,OAAA;MAAMU,SAAS,EAAC,gBAAgB;MAAAR,QAAA,eAC5BF,OAAA,CAACN,MAAM;QAAAQ,QAAA,gBACHF,OAAA,CAACP,KAAK;UAACkB,IAAI,EAAC,aAAa;UAACC,OAAO,eAAEZ,OAAA,CAACa,OAAO;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAClDT,OAAA,CAACP,KAAK;UAACkB,IAAI,EAAC,OAAO;UAACC,OAAO,eAAEZ,OAAA,CAACc,OAAO;YAACX,YAAY,EAAEA,YAAa;YAACC,OAAO,EAAEA;UAAQ;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC1FT,OAAA,CAACP,KAAK;UAACkB,IAAI,EAAC,aAAa;UAACC,OAAO,eAAEZ,OAAA,CAACe,SAAS;YAACZ,YAAY,EAAEA,YAAa;YAACC,OAAO,EAAEA;UAAQ;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9F;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC,eACPT,OAAA,CAACgB,MAAM;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAGjB;AAACQ,EAAA,GAfQhB,GAAG;AAgBZ,eAAeA,GAAG;;AAKlB;AACA;AACA;;AAGA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}