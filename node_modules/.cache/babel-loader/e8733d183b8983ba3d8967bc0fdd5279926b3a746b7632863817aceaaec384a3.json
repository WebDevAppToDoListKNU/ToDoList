{"ast":null,"code":"var _jsxFileName = \"/Users/sunwookim/webDevTest/src/components/ToDoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { chat } from './openai';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToDoList() {\n  _s();\n  var _folders$find, _folders$find2;\n  const navigate = useNavigate();\n  const [loggedInUser, setLoggedInUser] = useState(null);\n  const [todos, setTodos] = useState({});\n  const [folders, setFolders] = useState([{\n    id: 1,\n    name: \"휴지통\"\n  }, {\n    id: 2,\n    name: \"개인\"\n  }, {\n    id: 3,\n    name: \"업무\"\n  }]);\n  const [favorites, setFavorites] = useState([]);\n  const [selectedFolder, setSelectedFolder] = useState(1);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [editingTodo, setEditingTodo] = useState(null);\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [newFolderName, setNewFolderName] = useState(\"\");\n  const [query, setQuery] = useState(\"\");\n  const [summary, setSummary] = useState(\"\");\n  const [sortOrder, setSortOrder] = useState(\"latest\");\n  const [filterDate, setFilterDate] = useState(\"\");\n  useEffect(() => {\n    const userId = sessionStorage.getItem(\"loggedInUserId\");\n    if (userId) {\n      axios.get(`http://localhost:8000/users/${userId}`).then(response => {\n        setLoggedInUser(response.data);\n        setTodos(response.data.todos || {});\n        setFolders(response.data.folders || []);\n      }).catch(error => {\n        console.error(\"사용자 정보를 가져오는 데 실패했습니다:\", error);\n      });\n    }\n  }, []);\n  const onLogout = () => {\n    sessionStorage.removeItem(\"loggedInUserId\"); // 로그아웃 시 sessionStorage 초기화\n    setLoggedInUser(null);\n    navigate(\"/\");\n  };\n  const getCurrentDate = () => {\n    const now = new Date();\n    const year = now.getFullYear();\n    const month = String(now.getMonth() + 1).padStart(2, \"0\");\n    const date = String(now.getDate()).padStart(2, \"0\");\n    const hours = String(now.getHours()).padStart(2, \"0\");\n    const minutes = String(now.getMinutes()).padStart(2, \"0\");\n    const seconds = String(now.getSeconds()).padStart(2, \"0\");\n    return `${year}-${month}-${date} ${hours}:${minutes}:${seconds}`;\n  };\n  const onAddOrUpdate = () => {\n    if (title.trim() === \"\" || content.trim() === \"\") {\n      alert(\"제목과 내용을 입력하세요!\");\n      return;\n    }\n    const folderTodos = todos[selectedFolder] || [];\n    const userId = loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser.id;\n    if (editingTodo) {\n      const updatedTodos = folderTodos.map(todo => todo.id === editingTodo.id ? {\n        ...todo,\n        title,\n        content,\n        date: filterDate\n      } : todo);\n      const updatedData = {\n        ...todos,\n        [selectedFolder]: updatedTodos\n      };\n      setTodos(updatedData);\n\n      // Update the backend\n      axios.patch(`http://localhost:8000/users/${userId}`, {\n        todos: updatedData\n      }).then(() => console.log(\"Todo updated in backend\")).catch(error => console.error(\"Failed to update todo:\", error));\n    } else {\n      const id = folderTodos.length > 0 ? folderTodos[folderTodos.length - 1].id + 1 : 1;\n      const newTodo = {\n        id,\n        title,\n        content,\n        date: getCurrentDate()\n      };\n      const updatedData = {\n        ...todos,\n        [selectedFolder]: [...folderTodos, newTodo]\n      };\n      setTodos(updatedData);\n\n      // Update the backend\n      axios.patch(`http://localhost:8000/users/${userId}`, {\n        todos: updatedData\n      }).then(() => console.log(\"New todo added to backend\")).catch(error => console.error(\"Failed to add new todo:\", error));\n    }\n    closeModal();\n  };\n  const addFolder = () => {\n    if (!loggedInUser) {\n      alert(\"로그인 후 폴더를 추가할 수 있습니다.\");\n      return;\n    }\n    if (newFolderName.trim()) {\n      const id = folders.length > 0 ? folders[folders.length - 1].id + 1 : 1;\n      const newFolder = {\n        id,\n        name: newFolderName.trim()\n      };\n      const updatedFolders = [...folders, newFolder];\n      setFolders(updatedFolders);\n      setNewFolderName(\"\");\n\n      // Update the backend\n      const userId = loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser.id;\n      axios.patch(`http://localhost:8000/users/${userId}`, {\n        folders: updatedFolders\n      }).then(() => console.log(\"New folder added to backend\")).catch(error => console.error(\"Failed to add folder:\", error));\n    }\n  };\n  const onDelete = id => {\n    const folderTodos = todos[selectedFolder];\n    const updatedTodos = folderTodos.filter(todo => todo.id !== id);\n    const todoToDelete = folderTodos.find(todo => todo.id === id);\n    const updatedData = {\n      ...todos,\n      [selectedFolder]: updatedTodos\n    };\n    setTodos(updatedData);\n    if (todoToDelete) {\n      const trashTodos = [...(todos[1] || []), {\n        ...todoToDelete,\n        previousFolder: selectedFolder\n      }];\n      setTodos(prev => ({\n        ...prev,\n        1: trashTodos\n      }));\n\n      // Update the backend\n      const userId = loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser.id;\n      axios.patch(`http://localhost:8000/users/${userId}`, {\n        todos: {\n          ...updatedData,\n          1: trashTodos\n        }\n      }).then(() => console.log(\"Todo moved to trash in backend\")).catch(error => console.error(\"Failed to update backend:\", error));\n    }\n  };\n  const onRealDelete = id => {\n    const trashTodos = todos[TRASH_FOLDER_ID];\n    const updatedTodos = trashTodos.filter(todo => todo.id !== id);\n    setTodos(prevState => ({\n      ...prevState,\n      [TRASH_FOLDER_ID]: updatedTodos\n    }));\n  };\n  const TRASH_FOLDER_ID = 1;\n  const restoreTodo = id => {\n    const trashTodos = todos[TRASH_FOLDER_ID];\n    const todoToRestore = trashTodos.find(todo => todo.id === id);\n    const updatedTrashTodos = trashTodos.filter(todo => todo.id !== id);\n    if (todoToRestore) {\n      const restoredFolder = todoToRestore.previousFolder;\n      const updatedFolderTodos = [...(todos[restoredFolder] || []), {\n        ...todoToRestore,\n        previousFolder: undefined\n      }];\n\n      // Update the state with the restored todo\n      const updatedData = {\n        ...todos,\n        [TRASH_FOLDER_ID]: updatedTrashTodos,\n        [restoredFolder]: updatedFolderTodos\n      };\n      setTodos(updatedData);\n\n      // Update the backend\n      const userId = loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser.id;\n      axios.patch(`http://localhost:8000/users/${userId}`, {\n        todos: updatedData\n      }).then(() => console.log(\"Todo restored in backend\")).catch(error => console.error(\"Failed to update backend:\", error));\n    }\n  };\n  const toggleFavorite = todoId => {\n    setFavorites(prev => prev.includes(todoId) ? prev.filter(id => id !== todoId) : [...prev, todoId]);\n  };\n  const openModal = (todo = null) => {\n    if (!loggedInUser) {\n      alert(\"로그인 후 이용할 수 있습니다.\");\n      return;\n    }\n    setIsModalOpen(true);\n    if (todo) {\n      setEditingTodo(todo);\n      setTitle(todo.title);\n      setContent(todo.content);\n      setFilterDate(todo.date);\n    } else {\n      setEditingTodo(null);\n      setTitle(\"\");\n      setContent(\"\");\n      setFilterDate(\"\");\n    }\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setEditingTodo(null);\n    setTitle(\"\");\n    setContent(\"\");\n    setSummary(\"\");\n    setFilterDate(\"\");\n  };\n  const sortTodos = todos => {\n    return todos.sort((a, b) => sortOrder === \"latest\" ? new Date(b.date) - new Date(a.date) : new Date(a.date) - new Date(b.date));\n  };\n  const filteredTodos = sortTodos((todos[selectedFolder] || []).filter(todo => (!filterDate || todo.date === filterDate) && (todo.title.toLowerCase().includes(query.toLowerCase()) || todo.content.toLowerCase().includes(query.toLowerCase()))));\n  const fetchSummary = () => {\n    const prompt = `다음은 사용자가 작성한 TodoList입니다. 내용을 간결하고, 가독성 있게 정리해주세요.\n        ${content}`;\n    chat(prompt, response => setSummary(response));\n  };\n  const updateTodoContent = () => {\n    setContent(summary);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      height: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"250px\",\n        borderRight: \"2px solid #ccc\",\n        padding: 10,\n        boxSizing: \"border-box\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"ToDoList\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }, this), loggedInUser && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC548\\uB155\\uD558\\uC138\\uC694, \", loggedInUser.userId, \"\\uB2D8!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 21\n      }, this), loggedInUser ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onLogout,\n        style: {\n          marginRight: 15\n        },\n        children: \"\\uB85C\\uADF8\\uC544\\uC6C3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(\"/login\"),\n        style: {\n          marginRight: 15\n        },\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => openModal(),\n        children: \"\\uBA54\\uBAA8 \\uC4F0\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyle: \"none\",\n          padding: 0\n        },\n        children: loggedInUser ? folders.map(folder => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => setSelectedFolder(folder.id),\n          style: {\n            cursor: \"pointer\",\n            fontWeight: selectedFolder === folder.id ? \"bold\" : \"normal\",\n            backgroundColor: selectedFolder === folder.id ? \"#e0e0e0\" : \"transparent\",\n            padding: \"5px\",\n            borderRadius: \"4px\"\n          },\n          children: folder.name\n        }, folder.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uB85C\\uADF8\\uC778 \\uD6C4 \\uD3F4\\uB354\\uB97C \\uBCFC \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newFolderName,\n          onChange: e => setNewFolderName(e.target.value),\n          placeholder: \"\\uC0C8 \\uD3F4\\uB354 \\uC774\\uB984\",\n          style: {\n            marginRight: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addFolder,\n          children: \"\\uD3F4\\uB354 \\uCD94\\uAC00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [(_folders$find = folders.find(folder => folder.id === selectedFolder)) === null || _folders$find === void 0 ? void 0 : _folders$find.name, \" \\uD3F4\\uB354 \\uC990\\uACA8\\uCC3E\\uAE30\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 17\n      }, this), favorites.map(id => {\n        var _todos$selectedFolder;\n        const note = (_todos$selectedFolder = todos[selectedFolder]) === null || _todos$selectedFolder === void 0 ? void 0 : _todos$selectedFolder.find(todo => todo.id === id);\n        return note ? /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => openModal(note),\n          children: note.title\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 25\n        }, this) : null;\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        padding: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: (_folders$find2 = folders.find(folder => folder.id === selectedFolder)) === null || _folders$find2 === void 0 ? void 0 : _folders$find2.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\uAC80\\uC0C9 (\\uC81C\\uBAA9/\\uB0B4\\uC6A9)\",\n          value: query,\n          onChange: e => setQuery(e.target.value),\n          style: {\n            width: \"30%\",\n            padding: 10,\n            marginBottom: 20,\n            boxSizing: \"border-box\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: 15\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: filterDate,\n          onChange: e => setFilterDate(e.target.value),\n          style: {\n            marginRight: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSortOrder(sortOrder === \"latest\" ? \"oldest\" : \"latest\"),\n          children: sortOrder === \"latest\" ? \"최신순\" : \"오래된 순\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(auto-fill, minmax(250px, 1fr))\",\n          gap: 20\n        },\n        children: loggedInUser ? filteredTodos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            border: \"1px solid #ccc\",\n            borderRadius: 10,\n            padding: 10,\n            backgroundColor: \"white\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            onClick: () => openModal(todo),\n            style: {\n              cursor: \"pointer\"\n            },\n            children: todo.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: 14,\n              color: \"#555\"\n            },\n            children: todo.content.length > 20 ? todo.content.slice(0, 20) + '...' : todo.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: todo.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              width: \"100%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => toggleFavorite(todo.id),\n              style: {\n                cursor: \"pointer\"\n              },\n              children: favorites.includes(todo.id) ? \"★\" : \"☆\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 37\n            }, this), selectedFolder !== 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => onDelete(todo.id),\n              style: {\n                cursor: \"pointer\"\n              },\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 33\n          }, this), selectedFolder === 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => restoreTodo(todo.id),\n            style: {\n              cursor: \"pointer\"\n            },\n            children: \"\\uBCF5\\uC6D0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 37\n          }, this), selectedFolder === 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => onRealDelete(todo.id),\n            style: {\n              cursor: \"pointer\"\n            },\n            children: \"\\uC644\\uC804 \\uC0AD\\uC81C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 37\n          }, this)]\n        }, todo.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uB85C\\uADF8\\uC778 \\uD6C4 \\uBA54\\uBAA8\\uB97C \\uD655\\uC778\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 13\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        width: \"100%\",\n        height: \"100%\",\n        backgroundColor: \"rgba(0, 0, 0, 0.05)\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: \"white\",\n          width: \"50%\",\n          height: \"50%\",\n          borderRadius: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeModal,\n          style: {\n            cursor: \"pointer\"\n          },\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: 10\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: title,\n            onChange: e => setTitle(e.target.value),\n            placeholder: \"\\uC81C\\uBAA9 \\uC785\\uB825\",\n            style: {\n              width: \"100%\",\n              padding: 10,\n              fontSize: 16,\n              boxSizing: \"border-box\",\n              marginBottom: 10\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: content,\n            onChange: e => setContent(e.target.value),\n            placeholder: \"\\uB0B4\\uC6A9 \\uC785\\uB825\",\n            style: {\n              width: \"100%\",\n              height: 200,\n              padding: 10,\n              fontSize: 16,\n              boxSizing: \"border-box\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: fetchSummary,\n            style: {\n              cursor: \"pointer\"\n            },\n            children: \"GPT \\uB0B4\\uC6A9 \\uC694\\uC57D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 29\n          }, this), summary && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: summary\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: updateTodoContent,\n              style: {\n                cursor: \"pointer\"\n              },\n              children: \"\\uBCC0\\uACBD\\uD558\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onAddOrUpdate,\n            style: {\n              cursor: \"pointer\"\n            },\n            children: \"\\uC800\\uC7A5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 247,\n    columnNumber: 9\n  }, this);\n}\n_s(ToDoList, \"isPOgFIySOdw+g5gVwWKlEpKQgo=\", false, function () {\n  return [useNavigate];\n});\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useState","useEffect","axios","chat","useNavigate","jsxDEV","_jsxDEV","ToDoList","_s","_folders$find","_folders$find2","navigate","loggedInUser","setLoggedInUser","todos","setTodos","folders","setFolders","id","name","favorites","setFavorites","selectedFolder","setSelectedFolder","isModalOpen","setIsModalOpen","editingTodo","setEditingTodo","title","setTitle","content","setContent","newFolderName","setNewFolderName","query","setQuery","summary","setSummary","sortOrder","setSortOrder","filterDate","setFilterDate","userId","sessionStorage","getItem","get","then","response","data","catch","error","console","onLogout","removeItem","getCurrentDate","now","Date","year","getFullYear","month","String","getMonth","padStart","date","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","onAddOrUpdate","trim","alert","folderTodos","updatedTodos","map","todo","updatedData","patch","log","length","newTodo","closeModal","addFolder","newFolder","updatedFolders","onDelete","filter","todoToDelete","find","trashTodos","previousFolder","prev","onRealDelete","TRASH_FOLDER_ID","prevState","restoreTodo","todoToRestore","updatedTrashTodos","restoredFolder","updatedFolderTodos","undefined","toggleFavorite","todoId","includes","openModal","sortTodos","sort","a","b","filteredTodos","toLowerCase","fetchSummary","prompt","updateTodoContent","style","display","height","children","width","borderRight","padding","boxSizing","fileName","_jsxFileName","lineNumber","columnNumber","onClick","marginRight","listStyle","folder","cursor","fontWeight","backgroundColor","borderRadius","type","value","onChange","e","target","placeholder","_todos$selectedFolder","note","flex","marginBottom","gridTemplateColumns","gap","border","fontSize","color","slice","justifyContent","position","alignItems","_c","$RefreshReg$"],"sources":["/Users/sunwookim/webDevTest/src/components/ToDoList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { chat } from './openai';\nimport { useNavigate } from 'react-router-dom';\n\n\nfunction ToDoList() {\n\n\n    const navigate = useNavigate();\n    const [loggedInUser, setLoggedInUser] = useState(null);\n    const [todos, setTodos] = useState({});\n    const [folders, setFolders] = useState([\n        { id: 1, name: \"휴지통\" },\n        { id: 2, name: \"개인\" },\n        { id: 3, name: \"업무\" },\n    ]);\n\n    const [favorites, setFavorites] = useState([]);\n    const [selectedFolder, setSelectedFolder] = useState(1);\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [editingTodo, setEditingTodo] = useState(null);\n    const [title, setTitle] = useState(\"\");\n    const [content, setContent] = useState(\"\");\n    const [newFolderName, setNewFolderName] = useState(\"\");\n    const [query, setQuery] = useState(\"\");\n    const [summary, setSummary] = useState(\"\");\n    const [sortOrder, setSortOrder] = useState(\"latest\");\n    const [filterDate, setFilterDate] = useState(\"\");\n\n\n    useEffect(() => {\n        const userId = sessionStorage.getItem(\"loggedInUserId\");\n        if (userId) {\n            axios.get(`http://localhost:8000/users/${userId}`)\n                .then((response) => {\n                    setLoggedInUser(response.data);\n                    setTodos(response.data.todos || {});\n                    setFolders(response.data.folders || []);\n                })\n                .catch((error) => {\n                    console.error(\"사용자 정보를 가져오는 데 실패했습니다:\", error);\n                });\n        }\n    }, []);\n\n    const onLogout = () => {\n        sessionStorage.removeItem(\"loggedInUserId\"); // 로그아웃 시 sessionStorage 초기화\n        setLoggedInUser(null);\n        navigate(\"/\");\n    };\n\n    const getCurrentDate = () => {\n        const now = new Date();\n        const year = now.getFullYear();\n        const month = String(now.getMonth() + 1).padStart(2, \"0\");\n        const date = String(now.getDate()).padStart(2, \"0\");\n        const hours = String(now.getHours()).padStart(2, \"0\");\n        const minutes = String(now.getMinutes()).padStart(2, \"0\");\n        const seconds = String(now.getSeconds()).padStart(2, \"0\");\n\n        return `${year}-${month}-${date} ${hours}:${minutes}:${seconds}`;\n    };\n\n\n    const onAddOrUpdate = () => {\n        if (title.trim() === \"\" || content.trim() === \"\") {\n            alert(\"제목과 내용을 입력하세요!\");\n            return;\n        }\n        const folderTodos = todos[selectedFolder] || [];\n        const userId = loggedInUser?.id;\n\n        if (editingTodo) {\n            const updatedTodos = folderTodos.map((todo) =>\n                todo.id === editingTodo.id ? { ...todo, title, content, date: filterDate } : todo\n            );\n            const updatedData = { ...todos, [selectedFolder]: updatedTodos };\n            setTodos(updatedData);\n\n            // Update the backend\n            axios.patch(`http://localhost:8000/users/${userId}`, { todos: updatedData })\n                .then(() => console.log(\"Todo updated in backend\"))\n                .catch((error) => console.error(\"Failed to update todo:\", error));\n        } else {\n            const id = folderTodos.length > 0 ? folderTodos[folderTodos.length - 1].id + 1 : 1;\n            const newTodo = { id, title, content, date: getCurrentDate() };\n            const updatedData = { ...todos, [selectedFolder]: [...folderTodos, newTodo] };\n            setTodos(updatedData);\n\n            // Update the backend\n            axios.patch(`http://localhost:8000/users/${userId}`, { todos: updatedData })\n                .then(() => console.log(\"New todo added to backend\"))\n                .catch((error) => console.error(\"Failed to add new todo:\", error));\n        }\n        closeModal();\n    };\n\n\n\n    const addFolder = () => {\n        if (!loggedInUser) {\n            alert(\"로그인 후 폴더를 추가할 수 있습니다.\");\n            return;\n        }\n        if (newFolderName.trim()) {\n            const id = folders.length > 0 ? folders[folders.length - 1].id + 1 : 1;\n            const newFolder = { id, name: newFolderName.trim() };\n            const updatedFolders = [...folders, newFolder];\n            setFolders(updatedFolders);\n            setNewFolderName(\"\");\n\n            // Update the backend\n            const userId = loggedInUser?.id;\n            axios.patch(`http://localhost:8000/users/${userId}`, { folders: updatedFolders })\n                .then(() => console.log(\"New folder added to backend\"))\n                .catch((error) => console.error(\"Failed to add folder:\", error));\n        }\n    };\n\n\n\n    const onDelete = (id) => {\n        const folderTodos = todos[selectedFolder];\n        const updatedTodos = folderTodos.filter((todo) => todo.id !== id);\n        const todoToDelete = folderTodos.find((todo) => todo.id === id);\n\n        const updatedData = { ...todos, [selectedFolder]: updatedTodos };\n        setTodos(updatedData);\n\n        if (todoToDelete) {\n            const trashTodos = [...(todos[1] || []), { ...todoToDelete, previousFolder: selectedFolder }];\n            setTodos((prev) => ({ ...prev, 1: trashTodos }));\n\n            // Update the backend\n            const userId = loggedInUser?.id;\n            axios.patch(`http://localhost:8000/users/${userId}`, { todos: { ...updatedData, 1: trashTodos } })\n                .then(() => console.log(\"Todo moved to trash in backend\"))\n                .catch((error) => console.error(\"Failed to update backend:\", error));\n        }\n    };\n\n \n    const onRealDelete = (id) => {\n        const trashTodos = todos[TRASH_FOLDER_ID];\n        const updatedTodos = trashTodos.filter((todo) => todo.id !== id);\n        setTodos((prevState) => ({\n            ...prevState,\n            [TRASH_FOLDER_ID]: updatedTodos,\n        }));\n    };\n\n\n    const TRASH_FOLDER_ID = 1;\n\n    const restoreTodo = (id) => {\n        const trashTodos = todos[TRASH_FOLDER_ID];\n        const todoToRestore = trashTodos.find((todo) => todo.id === id);\n        const updatedTrashTodos = trashTodos.filter((todo) => todo.id !== id);\n\n        if (todoToRestore) {\n            const restoredFolder = todoToRestore.previousFolder;\n            const updatedFolderTodos = [...(todos[restoredFolder] || []), { ...todoToRestore, previousFolder: undefined }];\n\n            // Update the state with the restored todo\n            const updatedData = {\n                ...todos,\n                [TRASH_FOLDER_ID]: updatedTrashTodos,\n                [restoredFolder]: updatedFolderTodos\n            };\n            setTodos(updatedData);\n\n            // Update the backend\n            const userId = loggedInUser?.id;\n            axios.patch(`http://localhost:8000/users/${userId}`, { todos: updatedData })\n                .then(() => console.log(\"Todo restored in backend\"))\n                .catch((error) => console.error(\"Failed to update backend:\", error));\n        }\n    };\n\n\n    const toggleFavorite = (todoId) => {\n        setFavorites((prev) =>\n            prev.includes(todoId)\n                ? prev.filter((id) => id !== todoId)\n                : [...prev, todoId]\n        );\n    };\n\n    const openModal = (todo = null) => {\n        if (!loggedInUser) {\n            alert(\"로그인 후 이용할 수 있습니다.\");\n            return;\n        }\n        setIsModalOpen(true);\n        if (todo) {\n            setEditingTodo(todo);\n            setTitle(todo.title);\n            setContent(todo.content);\n            setFilterDate(todo.date);\n        } else {\n            setEditingTodo(null);\n            setTitle(\"\");\n            setContent(\"\");\n            setFilterDate(\"\");\n        }\n    };\n\n    const closeModal = () => {\n        setIsModalOpen(false);\n        setEditingTodo(null);\n        setTitle(\"\");\n        setContent(\"\");\n        setSummary(\"\");\n        setFilterDate(\"\");\n    };\n\n    const sortTodos = (todos) => {\n        return todos.sort((a, b) =>\n            sortOrder === \"latest\"\n                ? new Date(b.date) - new Date(a.date)\n                : new Date(a.date) - new Date(b.date)\n        );\n    };\n\n    const filteredTodos = sortTodos(\n        (todos[selectedFolder] || []).filter(\n            (todo) =>\n                (!filterDate || todo.date === filterDate) &&\n                (todo.title.toLowerCase().includes(query.toLowerCase()) ||\n                    todo.content.toLowerCase().includes(query.toLowerCase()))\n        )\n    );\n\n    const fetchSummary = () => {\n        const prompt = `다음은 사용자가 작성한 TodoList입니다. 내용을 간결하고, 가독성 있게 정리해주세요.\n        ${content}`;\n\n        chat(prompt, (response) => setSummary(response));\n    };\n\n    const updateTodoContent = () => {\n        setContent(summary);\n    };\n\n    return (\n        <div style={{ display: \"flex\", height: \"100vh\" }}>\n            {/* 폴더 리스트 */}\n            <div\n                style={{\n                    width: \"250px\",\n                    borderRight: \"2px solid #ccc\",\n                    padding: 10,\n                    boxSizing: \"border-box\",\n                }}\n            >\n                <h2>ToDoList</h2>\n                {loggedInUser && (\n                    <p>안녕하세요, {loggedInUser.userId}님!</p>\n                )}\n                {loggedInUser ? (\n                    <button onClick={onLogout}\n                        style={{ marginRight: 15 }}>로그아웃</button>\n                ) : (\n                    <button onClick={() => navigate(\"/login\")}\n                        style={{ marginRight: 15 }}>로그인</button>\n                )}\n\n                <button\n                    onClick={() => openModal()}>\n                    메모 쓰기\n                </button>\n\n                <ul style={{ listStyle: \"none\", padding: 0 }}>\n                    {loggedInUser ? (\n                        folders.map((folder) => (\n                            <li\n                                key={folder.id}\n                                onClick={() => setSelectedFolder(folder.id)}\n                                style={{\n                                    cursor: \"pointer\",\n                                    fontWeight: selectedFolder === folder.id ? \"bold\" : \"normal\",\n                                    backgroundColor: selectedFolder === folder.id ? \"#e0e0e0\" : \"transparent\",\n                                    padding: \"5px\",\n                                    borderRadius: \"4px\",\n                                }}\n                            >\n                                {folder.name}\n                            </li>\n                        ))\n                    ) : (\n                        <p>로그인 후 폴더를 볼 수 있습니다.</p>\n                    )}\n                </ul>\n\n                <div>\n                    <input\n                        type=\"text\"\n                        value={newFolderName}\n                        onChange={(e) => setNewFolderName(e.target.value)}\n                        placeholder=\"새 폴더 이름\"\n                        style={{ marginRight: 10 }}\n                    />\n                    <button onClick={addFolder}>폴더 추가</button>\n                </div>\n                <h3>{folders.find((folder) => folder.id === selectedFolder)?.name} 폴더 즐겨찾기</h3>\n                {favorites.map((id) => {\n                    const note = todos[selectedFolder]?.find((todo) => todo.id === id);\n                    return note ? (\n                        <div key={id} onClick={() => openModal(note)}>\n                            {note.title}\n                        </div>\n                    ) : null;\n                })}\n            </div>\n\n            {/* 메모 영역 */}\n            <div style={{ flex: 1, padding: 20 }}>\n                <h2>{folders.find((folder) => folder.id === selectedFolder)?.name}</h2>\n                <div>\n\n\n\n                    <input\n                        type=\"text\"\n                        placeholder=\"검색 (제목/내용)\"\n                        value={query}\n                        onChange={(e) => setQuery(e.target.value)}\n                        style={{\n                            width: \"30%\",\n                            padding: 10,\n                            marginBottom: 20,\n                            boxSizing: \"border-box\",\n                        }}\n                    />\n                </div>\n                <div style={{ marginBottom: 15 }}>\n                    <input\n                        type=\"date\"\n                        value={filterDate}\n                        onChange={(e) => setFilterDate(e.target.value)}\n                        style={{ marginRight: 10 }}\n\n                    />\n                    <button onClick={() => setSortOrder(sortOrder === \"latest\" ? \"oldest\" : \"latest\")}>\n                        {sortOrder === \"latest\" ? \"최신순\" : \"오래된 순\"}\n                    </button>\n                </div>\n                <div\n                    style={{\n                        display: \"grid\",\n                        gridTemplateColumns: \"repeat(auto-fill, minmax(250px, 1fr))\",\n                        gap: 20,\n                    }}\n                >\n                    {loggedInUser ? (\n                        filteredTodos.map((todo) => (\n                            <div\n                                key={todo.id}\n                                style={{\n                                    border: \"1px solid #ccc\",\n                                    borderRadius: 10,\n                                    padding: 10,\n                                    backgroundColor: \"white\",\n                                }}\n                            >\n                                <h3\n                                    onClick={() => openModal(todo)}\n                                    style={{\n                                        cursor: \"pointer\"\n                                    }}>\n                                    {todo.title}\n                                </h3>\n                                <p style={{ fontSize: 14, color: \"#555\" }}>\n                                    {todo.content.length > 20 ? todo.content.slice(0, 20) + '...' : todo.content}\n                                </p>\n\n\n                                <p>{todo.date}</p>\n\n                                <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"100%\" }}>\n                                    <button onClick={() => toggleFavorite(todo.id)}\n                                        style={{\n                                            cursor: \"pointer\"\n                                        }}>\n                                        {favorites.includes(todo.id) ? \"★\" : \"☆\"}\n                                    </button>\n                                    {selectedFolder !== 1 && (\n                                        <button onClick={() => onDelete(todo.id)}\n                                            style={{\n                                                cursor: \"pointer\"\n                                            }}>\n                                            삭제\n                                        </button>\n                                    )}\n                                </div>\n\n                                {selectedFolder === 1 && (\n                                    <button\n                                        onClick={() => restoreTodo(todo.id)}\n                                        style={{\n                                            cursor: \"pointer\"\n                                        }}>\n                                        복원\n                                    </button>\n                                )}\n                                {selectedFolder === 1 && (\n                                    <button onClick={() => onRealDelete(todo.id)}\n                                        style={{\n                                            cursor: \"pointer\"\n                                        }}>\n                                        완전 삭제\n                                    </button>\n                                )}\n                            </div>\n                        ))\n                    ) : (\n                        <p>로그인 후 메모를 확인할 수 있습니다.</p>\n                    )}\n\n                </div>\n            </div>\n\n            {isModalOpen && (\n                <div\n                    style={{\n                        position: \"fixed\",\n                        width: \"100%\",\n                        height: \"100%\",\n                        backgroundColor: \"rgba(0, 0, 0, 0.05)\",\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                    }}>\n                    <div\n                        style={{\n                            backgroundColor: \"white\",\n                            width: \"50%\",\n                            height: \"50%\",\n                            borderRadius: 10,\n                        }}>\n                        <button\n                            onClick={closeModal}\n                            style={{\n                                cursor: \"pointer\"\n                            }}>\n                            ✕\n                        </button>\n                        <div style={{ padding: 10 }}>\n                            <input\n                                type=\"text\"\n                                value={title}\n                                onChange={(e) => setTitle(e.target.value)}\n                                placeholder=\"제목 입력\"\n                                style={{\n                                    width: \"100%\",\n                                    padding: 10,\n                                    fontSize: 16,\n                                    boxSizing: \"border-box\",\n                                    marginBottom: 10,\n                                }}\n                            />\n                            <textarea\n                                value={content}\n                                onChange={(e) => setContent(e.target.value)}\n                                placeholder=\"내용 입력\"\n                                style={{\n                                    width: \"100%\",\n                                    height: 200,\n                                    padding: 10,\n                                    fontSize: 16,\n                                    boxSizing: \"border-box\",\n                                }}\n                            ></textarea>\n\n                            <button\n                                onClick={fetchSummary}\n                                style={{\n                                    cursor: \"pointer\"\n                                }}>\n                                GPT 내용 요약\n                            </button>\n                            {summary && (\n                                <div>\n                                    <p>{summary}</p>\n                                    <button\n                                        onClick={updateTodoContent}\n                                        style={{\n                                            cursor: \"pointer\"\n                                        }}>\n                                        변경하기\n                                    </button>\n                                </div>\n                            )}\n                            <button\n                                onClick={onAddOrUpdate}\n                                style={{\n                                    cursor: \"pointer\"\n                                }}>\n                                저장\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default ToDoList;\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}