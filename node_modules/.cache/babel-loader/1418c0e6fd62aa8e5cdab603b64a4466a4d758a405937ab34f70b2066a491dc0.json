{"ast":null,"code":"var _jsxFileName = \"/Users/sunwookim/webDevFinalProject/src/components/ToDoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { chat } from './openai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToDoList() {\n  _s();\n  var _folders$find;\n  const [folders, setFolders] = useState([{\n    id: 1,\n    name: \"개인\"\n  }, {\n    id: 2,\n    name: \"업무\"\n  }, {\n    id: 3,\n    name: \"휴지통\"\n  }]);\n  const [todos, setTodos] = useState({\n    1: [{\n      id: 1,\n      title: \"운동하기\",\n      content: \"매일 아침 30분 운동\",\n      date: \"2024-11-09\"\n    }, {\n      id: 2,\n      title: \"책 읽기\",\n      content: \"소설 한 권 읽기\",\n      date: \"2024-11-30\"\n    }],\n    2: [{\n      id: 1,\n      title: \"프로젝트 보고서 작성\",\n      content: \"최종 보고서 작성 및 검토\",\n      date: \"2024-12-01\"\n    }, {\n      id: 2,\n      title: \"팀 회의 준비\",\n      content: \"발표 자료 준비 및 회의록 작성\",\n      date: \"2024-12-02\"\n    }],\n    3: []\n  });\n  const getCurrentDate = () => new Date().toISOString().split(\"T\")[0];\n  const [favorites, setFavorites] = useState([]);\n  const [selectedFolder, setSelectedFolder] = useState(1);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [editingTodo, setEditingTodo] = useState(null);\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [newFolderName, setNewFolderName] = useState(\"\");\n  const [query, setQuery] = useState(\"\");\n  const [summary, setSummary] = useState(\"\");\n  const [sortOrder, setSortOrder] = useState(\"latest\");\n  const [filterDate, setFilterDate] = useState(\"\");\n  const onAddOrUpdate = () => {\n    if (title.trim() === \"\" || content.trim() === \"\") {\n      alert(\"제목과 내용을 입력하세요!\");\n      return;\n    }\n    const folderTodos = todos[selectedFolder] || [];\n    if (editingTodo) {\n      const updatedTodos = folderTodos.map(todo => todo.id === editingTodo.id ? {\n        ...todo,\n        title,\n        content,\n        filterDate\n      } : todo);\n      setTodos({\n        ...todos,\n        [selectedFolder]: updatedTodos\n      });\n    } else {\n      const id = folderTodos.length > 0 ? folderTodos[folderTodos.length - 1].id + 1 : 1;\n      const updatedTodos = [...folderTodos, {\n        id,\n        title,\n        content,\n        date: getCurrentDate()\n      }];\n      setTodos({\n        ...todos,\n        [selectedFolder]: updatedTodos\n      });\n    }\n    closeModal();\n  };\n  const onDelete = id => {\n    const folderTodos = todos[selectedFolder];\n    const updatedTodos = folderTodos.filter(todo => todo.id !== id);\n    const todoToDelete = folderTodos.find(todo => todo.id === id);\n    setTodos({\n      ...todos,\n      [selectedFolder]: updatedTodos\n    });\n    if (todoToDelete) {\n      // Move to Trash folder\n      setTodos(prevState => ({\n        ...prevState,\n        3: [...prevState[3], todoToDelete] // Move to Trash folder\n      }));\n    }\n  };\n  const restoreTodo = id => {\n    const trashTodos = todos[3];\n    const todoToRestore = trashTodos.find(todo => todo.id === id);\n    if (todoToRestore) {\n      // Determine the original folder based on the todo's previous folder (using `editingTodo` or some other way to track)\n      const originalFolder = todoToRestore.previousFolder || 1; // default to '개인' if not defined\n      setTodos(prevState => {\n        const updatedTrashTodos = trashTodos.filter(todo => todo.id !== id);\n        const updatedOriginalFolderTodos = [...prevState[originalFolder], {\n          ...todoToRestore,\n          date: filterDate\n        } // Restore with current date\n        ];\n        return {\n          ...prevState,\n          [3]: updatedTrashTodos,\n          // Remove from Trash\n          [originalFolder]: updatedOriginalFolderTodos // Add back to original folder\n        };\n      });\n    }\n  };\n  const toggleFavorite = todoId => {\n    setFavorites(prev => prev.includes(todoId) ? prev.filter(id => id !== todoId) : [...prev, todoId]);\n  };\n  const openModal = (todo = null) => {\n    setIsModalOpen(true);\n    if (todo) {\n      setEditingTodo(todo);\n      setTitle(todo.title);\n      setContent(todo.content);\n      setFilterDate(todo.date);\n    } else {\n      setEditingTodo(null);\n      setTitle(\"\");\n      setContent(\"\");\n      setFilterDate(\"\");\n    }\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setEditingTodo(null);\n    // setTitle(\"\");\n    setContent(\"\");\n    // setSummary(\"\");\n    setFilterDate(\"\");\n  };\n  const sortTodos = todos => {\n    return todos.sort((a, b) => sortOrder === \"latest\" ? new Date(b.date) - new Date(a.date) : new Date(a.date) - new Date(b.date));\n  };\n  const filteredTodos = sortTodos((todos[selectedFolder] || []).filter(todo => (!filterDate || todo.date === filterDate) && (todo.title.toLowerCase().includes(query.toLowerCase()) || todo.content.toLowerCase().includes(query.toLowerCase()))));\n  const fetchSummary = () => {\n    const prompt = `다음은 사용자가 작성한 TodoList입니다. 내용을 간결하고, 가독성 있게 정리해주세요.\n        ${content}`;\n    chat(prompt, response => setSummary(response)); // Assuming chat calls GPT API and returns summary\n  };\n  const updateTodoContent = () => {\n    setContent(summary); // Updates the content with the summary when the \"변경하기\" button is clicked\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      height: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"300px\",\n        borderRight: \"2px solid #ccc\",\n        padding: 10,\n        boxSizing: \"border-box\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"ToDoList\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => openModal(),\n        style: {\n          width: \"100%\",\n          padding: 10,\n          backgroundColor: \"#2196f3\",\n          fontSize: 16,\n          fontWeight: \"bold\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: 5,\n          cursor: \"pointer\"\n        },\n        children: \"\\uBA54\\uBAA8 \\uC4F0\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyle: \"none\",\n          padding: 0\n        },\n        children: folders.map(folder => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            padding: 10,\n            marginBottom: 5,\n            cursor: \"pointer\",\n            backgroundColor: selectedFolder === folder.id ? \"#ddd\" : \"transparent\"\n          },\n          onClick: () => setSelectedFolder(folder.id),\n          children: folder.name\n        }, folder.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newFolderName,\n          onChange: e => setNewFolderName(e.target.value),\n          placeholder: \"\\uC0C8 \\uD3F4\\uB354 \\uC774\\uB984\",\n          style: {\n            width: \"100%\",\n            padding: 5,\n            marginBottom: 5,\n            boxSizing: \"border-box\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            if (newFolderName.trim()) {\n              const id = folders.length > 0 ? folders[folders.length - 1].id + 1 : 1;\n              setFolders([...folders, {\n                id,\n                name: newFolderName.trim()\n              }]);\n              setNewFolderName(\"\");\n            }\n          },\n          style: {\n            width: \"100%\",\n            padding: 10,\n            backgroundColor: \"#4caf50\",\n            color: \"white\",\n            border: \"none\",\n            cursor: \"pointer\"\n          },\n          children: \"\\uD3F4\\uB354 \\uCD94\\uAC00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        padding: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [(_folders$find = folders.find(folder => folder.id === selectedFolder)) === null || _folders$find === void 0 ? void 0 : _folders$find.name, \" ToDo List\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uAC80\\uC0C9 (\\uC81C\\uBAA9/\\uB0B4\\uC6A9)\",\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        style: {\n          width: \"100%\",\n          padding: 10,\n          marginBottom: 20,\n          boxSizing: \"border-box\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: filterDate,\n        onChange: e => setFilterDate(e.target.value),\n        placeholder: \"\\uB0A0\\uC9DC \\uC120\\uD0DD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSortOrder(sortOrder === \"latest\" ? \"oldest\" : \"latest\"),\n        children: sortOrder === \"latest\" ? \"최신순\" : \"오래된 순\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(auto-fill, minmax(250px, 1fr))\",\n          gap: 20\n        },\n        children: filteredTodos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            border: \"1px solid #ccc\",\n            borderRadius: 10,\n            padding: 10,\n            backgroundColor: \"white\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            onClick: () => openModal(todo),\n            style: {\n              cursor: \"pointer\",\n              fontSize: 18,\n              margin: 0\n            },\n            children: todo.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: 14,\n              color: \"#555\"\n            },\n            children: todo.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: todo.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => toggleFavorite(todo.id),\n            style: {\n              backgroundColor: favorites.includes(todo.id) ? \"#ffcc00\" : \"#ccc\",\n              color: \"black\",\n              border: \"none\",\n              borderRadius: 5,\n              padding: \"5px 10px\",\n              cursor: \"pointer\",\n              fontSize: 12\n            },\n            children: favorites.includes(todo.id) ? \"★\" : \"☆\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => onDelete(todo.id),\n            style: {\n              backgroundColor: \"#ff4d4d\",\n              color: \"white\",\n              border: \"none\",\n              borderRadius: 5,\n              padding: \"5px 10px\",\n              cursor: \"pointer\",\n              fontSize: 12,\n              float: \"right\"\n            },\n            children: \"\\uC0AD\\uC81C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 29\n          }, this), selectedFolder === 3 &&\n          /*#__PURE__*/\n          // If in Trash folder, show restore button\n          _jsxDEV(\"button\", {\n            onClick: () => restoreTodo(todo.id),\n            style: {\n              backgroundColor: \"#4caf50\",\n              color: \"white\",\n              border: \"none\",\n              borderRadius: 5,\n              padding: \"5px 10px\",\n              cursor: \"pointer\",\n              fontSize: 12\n            },\n            children: \"\\uBCF5\\uC6D0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 33\n          }, this)]\n        }, todo.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uC990\\uACA8\\uCC3E\\uAE30 \\uBAA9\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 17\n      }, this), favorites.map(id => {\n        var _todos$selectedFolder;\n        const note = (_todos$selectedFolder = todos[selectedFolder]) === null || _todos$selectedFolder === void 0 ? void 0 : _todos$selectedFolder.find(todo => todo.id === id);\n        return note ? /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => openModal(note),\n          children: note.title\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 25\n        }, this) : null;\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        width: \"100%\",\n        height: \"100%\",\n        backgroundColor: \"rgba(0, 0, 0, 0.05)\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: \"white\",\n          width: \"80%\",\n          height: \"80%\",\n          borderRadius: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeModal,\n          style: {\n            padding: 5,\n            marginLeft: 10,\n            fontSize: 30,\n            border: 'none',\n            cursor: 'pointer',\n            background: 'white'\n          },\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: 10\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: title,\n            onChange: e => setTitle(e.target.value),\n            placeholder: \"\\uC81C\\uBAA9 \\uC785\\uB825\",\n            style: {\n              width: \"100%\",\n              padding: 10,\n              fontSize: 16,\n              boxSizing: \"border-box\",\n              marginBottom: 10\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: content,\n            onChange: e => setContent(e.target.value),\n            placeholder: \"\\uB0B4\\uC6A9 \\uC785\\uB825\",\n            style: {\n              width: \"100%\",\n              height: 200,\n              padding: 10,\n              fontSize: 16,\n              boxSizing: \"border-box\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"\\uB0A0\\uC9DC:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              value: filterDate,\n              onChange: e => setFilterDate(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: fetchSummary,\n            style: {\n              width: \"100%\",\n              padding: 10,\n              backgroundColor: \"#FF0000\",\n              fontSize: 16,\n              fontWeight: \"bold\",\n              color: \"white\",\n              border: \"none\",\n              borderRadius: 5,\n              cursor: \"pointer\"\n            },\n            children: \"GPT \\uB0B4\\uC6A9 \\uC694\\uC57D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 29\n          }, this), summary && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: summary\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: updateTodoContent,\n              style: {\n                width: \"100%\",\n                padding: 10,\n                backgroundColor: \"#3498db\",\n                fontSize: 16,\n                fontWeight: \"bold\",\n                color: \"white\",\n                border: \"none\",\n                borderRadius: 5,\n                cursor: \"pointer\"\n              },\n              children: \"\\uBCC0\\uACBD\\uD558\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onAddOrUpdate,\n            style: {\n              marginTop: 10,\n              width: \"100%\",\n              padding: 10,\n              backgroundColor: \"#4caf50\",\n              fontSize: 16,\n              fontWeight: \"bold\",\n              color: \"white\",\n              border: \"none\",\n              borderRadius: 5,\n              cursor: \"pointer\"\n            },\n            children: \"\\uC800\\uC7A5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 9\n  }, this);\n}\n_s(ToDoList, \"+b05bOAU61MdwUtFIcPOFOtjGfc=\");\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useState","chat","jsxDEV","_jsxDEV","ToDoList","_s","_folders$find","folders","setFolders","id","name","todos","setTodos","title","content","date","getCurrentDate","Date","toISOString","split","favorites","setFavorites","selectedFolder","setSelectedFolder","isModalOpen","setIsModalOpen","editingTodo","setEditingTodo","setTitle","setContent","newFolderName","setNewFolderName","query","setQuery","summary","setSummary","sortOrder","setSortOrder","filterDate","setFilterDate","onAddOrUpdate","trim","alert","folderTodos","updatedTodos","map","todo","length","closeModal","onDelete","filter","todoToDelete","find","prevState","restoreTodo","trashTodos","todoToRestore","originalFolder","previousFolder","updatedTrashTodos","updatedOriginalFolderTodos","toggleFavorite","todoId","prev","includes","openModal","sortTodos","sort","a","b","filteredTodos","toLowerCase","fetchSummary","prompt","response","updateTodoContent","style","display","height","children","width","borderRight","padding","boxSizing","fileName","_jsxFileName","lineNumber","columnNumber","onClick","backgroundColor","fontSize","fontWeight","color","border","borderRadius","cursor","listStyle","folder","marginBottom","type","value","onChange","e","target","placeholder","flex","gridTemplateColumns","gap","margin","float","_todos$selectedFolder","note","position","justifyContent","alignItems","marginLeft","background","marginTop","_c","$RefreshReg$"],"sources":["/Users/sunwookim/webDevFinalProject/src/components/ToDoList.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { chat } from './openai';\n\nfunction ToDoList() {\n    const [folders, setFolders] = useState([\n        { id: 1, name: \"개인\" },\n        { id: 2, name: \"업무\" },\n        { id: 3, name: \"휴지통\" },\n    ]);\n    const [todos, setTodos] = useState({\n        1: [\n            { id: 1, title: \"운동하기\", content: \"매일 아침 30분 운동\", date: \"2024-11-09\" },\n            { id: 2, title: \"책 읽기\", content: \"소설 한 권 읽기\", date: \"2024-11-30\" },\n        ],\n        2: [\n            { id: 1, title: \"프로젝트 보고서 작성\", content: \"최종 보고서 작성 및 검토\", date: \"2024-12-01\" },\n            { id: 2, title: \"팀 회의 준비\", content: \"발표 자료 준비 및 회의록 작성\", date: \"2024-12-02\" },\n        ],\n        3: []\n    });\n    const getCurrentDate = () => new Date().toISOString().split(\"T\")[0];\n    const [favorites, setFavorites] = useState([]);\n    const [selectedFolder, setSelectedFolder] = useState(1);\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [editingTodo, setEditingTodo] = useState(null);\n    const [title, setTitle] = useState(\"\");\n    const [content, setContent] = useState(\"\");\n    const [newFolderName, setNewFolderName] = useState(\"\");\n    const [query, setQuery] = useState(\"\");\n    const [summary, setSummary] = useState(\"\");\n    const [sortOrder, setSortOrder] = useState(\"latest\");\n    const [filterDate, setFilterDate] = useState(\"\");\n\n\n    const onAddOrUpdate = () => {\n        if (title.trim() === \"\" || content.trim() === \"\") {\n            alert(\"제목과 내용을 입력하세요!\");\n            return;\n        }\n        const folderTodos = todos[selectedFolder] || [];\n        if (editingTodo) {\n            const updatedTodos = folderTodos.map((todo) =>\n                todo.id === editingTodo.id ? { ...todo, title, content, filterDate } : todo\n            );\n            setTodos({ ...todos, [selectedFolder]: updatedTodos });\n        } else {\n            const id = folderTodos.length > 0 ? folderTodos[folderTodos.length - 1].id + 1 : 1;\n            const updatedTodos = [...folderTodos, { id, title, content, date: getCurrentDate() }];\n            setTodos({ ...todos, [selectedFolder]: updatedTodos });\n        }\n        closeModal();\n    };\n\n    const onDelete = (id) => {\n        const folderTodos = todos[selectedFolder];\n        const updatedTodos = folderTodos.filter((todo) => todo.id !== id);\n        const todoToDelete = folderTodos.find((todo) => todo.id === id);\n        setTodos({ ...todos, [selectedFolder]: updatedTodos });\n        if (todoToDelete) {\n            // Move to Trash folder\n            setTodos(prevState => ({\n                ...prevState,\n                3: [...prevState[3], todoToDelete], // Move to Trash folder\n            }));\n        }\n        \n    };\n\n    const restoreTodo = (id) => {\n        const trashTodos = todos[3];\n        const todoToRestore = trashTodos.find((todo) => todo.id === id);\n        \n        if (todoToRestore) {\n            // Determine the original folder based on the todo's previous folder (using `editingTodo` or some other way to track)\n            const originalFolder = todoToRestore.previousFolder || 1; // default to '개인' if not defined\n            setTodos((prevState) => {\n                const updatedTrashTodos = trashTodos.filter((todo) => todo.id !== id);\n                const updatedOriginalFolderTodos = [\n                    ...prevState[originalFolder],\n                    { ...todoToRestore, date: filterDate }, // Restore with current date\n                ];\n                return {\n                    ...prevState,\n                    [3]: updatedTrashTodos, // Remove from Trash\n                    [originalFolder]: updatedOriginalFolderTodos, // Add back to original folder\n                };\n            });\n        }\n    };\n\n    const toggleFavorite = (todoId) => {\n        setFavorites((prev) =>\n            prev.includes(todoId)\n                ? prev.filter((id) => id !== todoId)\n                : [...prev, todoId]\n        );\n    };\n\n    const openModal = (todo = null) => {\n        setIsModalOpen(true);\n        if (todo) {\n            setEditingTodo(todo);\n            setTitle(todo.title);\n            setContent(todo.content);\n            setFilterDate(todo.date);\n        } else {\n            setEditingTodo(null);\n            setTitle(\"\");\n            setContent(\"\");\n            setFilterDate(\"\");\n        }\n    };\n\n    const closeModal = () => {\n        setIsModalOpen(false);\n        setEditingTodo(null);\n        // setTitle(\"\");\n        setContent(\"\");\n        // setSummary(\"\");\n        setFilterDate(\"\");\n    };\n\n    const sortTodos = (todos) => {\n        return todos.sort((a, b) =>\n            sortOrder === \"latest\"\n                ? new Date(b.date) - new Date(a.date)\n                : new Date(a.date) - new Date(b.date)\n        );\n    };\n\n    const filteredTodos = sortTodos(\n        (todos[selectedFolder] || []).filter(\n            (todo) =>\n                (!filterDate || todo.date === filterDate) &&\n                (todo.title.toLowerCase().includes(query.toLowerCase()) ||\n                    todo.content.toLowerCase().includes(query.toLowerCase()))\n        )\n    );\n\n    const fetchSummary = () => {\n        const prompt = `다음은 사용자가 작성한 TodoList입니다. 내용을 간결하고, 가독성 있게 정리해주세요.\n        ${content}`;\n\n        chat(prompt, (response) => setSummary(response)); // Assuming chat calls GPT API and returns summary\n    };\n\n    const updateTodoContent = () => {\n        setContent(summary); // Updates the content with the summary when the \"변경하기\" button is clicked\n    };\n\n    return (\n        <div style={{ display: \"flex\", height: \"100vh\" }}>\n            {/* 폴더 리스트 */}\n            <div\n                style={{\n                    width: \"300px\",\n                    borderRight: \"2px solid #ccc\",\n                    padding: 10,\n                    boxSizing: \"border-box\",\n                }}\n            >\n                <h2>ToDoList</h2>\n                <button\n                    onClick={() => openModal()}\n                    style={{\n                        width: \"100%\",\n                        padding: 10,\n                        backgroundColor: \"#2196f3\",\n                        fontSize: 16,\n                        fontWeight: \"bold\",\n                        color: \"white\",\n                        border: \"none\",\n                        borderRadius: 5,\n                        cursor: \"pointer\",\n                    }}\n                >\n                    메모 쓰기\n                </button>\n\n                <ul style={{ listStyle: \"none\", padding: 0 }}>\n                    {folders.map((folder) => (\n                        <li\n                            key={folder.id}\n                            style={{\n                                padding: 10,\n                                marginBottom: 5,\n                                cursor: \"pointer\",\n                                backgroundColor: selectedFolder === folder.id ? \"#ddd\" : \"transparent\",\n                            }}\n                            onClick={() => setSelectedFolder(folder.id)}\n                        >\n                            {folder.name}\n                        </li>\n                    ))}\n                </ul>\n                <div>\n                    <input\n                        type=\"text\"\n                        value={newFolderName}\n                        onChange={(e) => setNewFolderName(e.target.value)}\n                        placeholder=\"새 폴더 이름\"\n                        style={{\n                            width: \"100%\",\n                            padding: 5,\n                            marginBottom: 5,\n                            boxSizing: \"border-box\",\n                        }}\n                    />\n                    <button\n                        onClick={() => {\n                            if (newFolderName.trim()) {\n                                const id = folders.length > 0 ? folders[folders.length - 1].id + 1 : 1;\n                                setFolders([...folders, { id, name: newFolderName.trim() }]);\n                                setNewFolderName(\"\");\n                            }\n                        }}\n                        style={{\n                            width: \"100%\",\n                            padding: 10,\n                            backgroundColor: \"#4caf50\",\n                            color: \"white\",\n                            border: \"none\",\n                            cursor: \"pointer\",\n                        }}\n                    >\n                        폴더 추가\n                    </button>\n                </div>\n            </div>\n\n            {/* 메모 영역 */}\n            <div style={{ flex: 1, padding: 20 }}>\n                <h2>{folders.find((folder) => folder.id === selectedFolder)?.name} ToDo List</h2>\n                <input\n                    type=\"text\"\n                    placeholder=\"검색 (제목/내용)\"\n                    value={query}\n                    onChange={(e) => setQuery(e.target.value)}\n                    style={{\n                        width: \"100%\",\n                        padding: 10,\n                        marginBottom: 20,\n                        boxSizing: \"border-box\",\n                    }}\n                />\n                <input\n                    type=\"date\"\n                    value={filterDate}\n                    onChange={(e) => setFilterDate(e.target.value)}\n                    placeholder=\"날짜 선택\"\n                />\n                <button onClick={() => setSortOrder(sortOrder === \"latest\" ? \"oldest\" : \"latest\")}>\n                    {sortOrder === \"latest\" ? \"최신순\" : \"오래된 순\"}\n                </button>\n                <div\n                    style={{\n                        display: \"grid\",\n                        gridTemplateColumns: \"repeat(auto-fill, minmax(250px, 1fr))\",\n                        gap: 20,\n                    }}\n                >\n                    {filteredTodos.map((todo) => (\n                        <div\n                            key={todo.id}\n                            style={{\n                                border: \"1px solid #ccc\",\n                                borderRadius: 10,\n                                padding: 10,\n                                backgroundColor: \"white\",\n                            }}\n                        >\n                            <h3\n                                onClick={() => openModal(todo)}\n                                style={{\n                                    cursor: \"pointer\",\n                                    fontSize: 18,\n                                    margin: 0\n                                }}\n                            >\n                                {todo.title}\n                            </h3>\n                            <p style={{ fontSize: 14, color: \"#555\" }}>{todo.content}</p>\n                            <p>{todo.date}</p>\n                            <button\n                                onClick={() => toggleFavorite(todo.id)}\n                                style={{\n                                    backgroundColor: favorites.includes(todo.id) ? \"#ffcc00\" : \"#ccc\",\n                                    color: \"black\",\n                                    border: \"none\",\n                                    borderRadius: 5,\n                                    padding: \"5px 10px\",\n                                    cursor: \"pointer\",\n                                    fontSize: 12,\n                                }}\n                            >\n                                {favorites.includes(todo.id) ? \"★\" : \"☆\"}\n                            </button>\n                            <button\n                                onClick={() => onDelete(todo.id)}\n                                style={{\n                                    backgroundColor: \"#ff4d4d\",\n                                    color: \"white\",\n                                    border: \"none\",\n                                    borderRadius: 5,\n                                    padding: \"5px 10px\",\n                                    cursor: \"pointer\",\n                                    fontSize: 12,\n                                    float: \"right\",\n                                }}\n                            >\n                                삭제\n                            </button>\n                            {selectedFolder === 3 && ( // If in Trash folder, show restore button\n                                <button\n                                    onClick={() => restoreTodo(todo.id)}\n                                    style={{\n                                        backgroundColor: \"#4caf50\",\n                                        color: \"white\",\n                                        border: \"none\",\n                                        borderRadius: 5,\n                                        padding: \"5px 10px\",\n                                        cursor: \"pointer\",\n                                        fontSize: 12,\n                                    }}\n                                >\n                                    복원\n                                </button>\n                            )}\n                        </div>\n                    ))}\n                </div>\n                <h3>즐겨찾기 목록</h3>\n                {favorites.map((id) => {\n                    const note = todos[selectedFolder]?.find((todo) => todo.id === id);\n                    return note ? (\n                        <div key={id} onClick={() => openModal(note)}>\n                            {note.title}\n                        </div>\n                    ) : null;\n                })}\n            </div>\n\n            {isModalOpen && (\n                <div\n                    style={{\n                        position: \"fixed\",\n                        width: \"100%\",\n                        height: \"100%\",\n                        backgroundColor: \"rgba(0, 0, 0, 0.05)\",\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                    }}\n                >\n                    <div\n                        style={{\n                            backgroundColor: \"white\",\n                            width: \"80%\",\n                            height: \"80%\",\n                            borderRadius: 10,\n                        }}\n                    >\n                        <button\n                            onClick={closeModal}\n                            style={{\n                                padding: 5,\n                                marginLeft: 10,\n                                fontSize: 30,\n                                border: 'none',\n                                cursor: 'pointer',\n                                background: 'white'\n\n                            }}\n                        >\n                            ✕\n                        </button>\n                        <div style={{ padding: 10 }}>\n                            <input\n                                type=\"text\"\n                                value={title}\n                                onChange={(e) => setTitle(e.target.value)}\n                                placeholder=\"제목 입력\"\n                                style={{\n                                    width: \"100%\",\n                                    padding: 10,\n                                    fontSize: 16,\n                                    boxSizing: \"border-box\",\n                                    marginBottom: 10,\n                                }}\n                            />\n                            <textarea\n                                value={content}\n                                onChange={(e) => setContent(e.target.value)}\n                                placeholder=\"내용 입력\"\n                                style={{\n                                    width: \"100%\",\n                                    height: 200,\n                                    padding: 10,\n                                    fontSize: 16,\n                                    boxSizing: \"border-box\",\n                                }}\n                            ></textarea>\n                            <label>\n                                날짜:\n                                <input\n                                    type=\"date\"\n                                    value={filterDate}\n                                    onChange={(e) => setFilterDate(e.target.value)}\n                                />\n                            </label>\n                            <button\n                                onClick={fetchSummary}\n                                style={{\n                                    width: \"100%\",\n                                    padding: 10,\n                                    backgroundColor: \"#FF0000\",\n                                    fontSize: 16,\n                                    fontWeight: \"bold\",\n                                    color: \"white\",\n                                    border: \"none\",\n                                    borderRadius: 5,\n                                    cursor: \"pointer\",\n                                }}\n                            >\n                                GPT 내용 요약\n                            </button>\n                            {summary && (\n                                <div>\n                                    <p>{summary}</p>\n                                    <button\n                                        onClick={updateTodoContent}\n                                        style={{\n                                            width: \"100%\",\n                                            padding: 10,\n                                            backgroundColor: \"#3498db\",\n                                            fontSize: 16,\n                                            fontWeight: \"bold\",\n                                            color: \"white\",\n                                            border: \"none\",\n                                            borderRadius: 5,\n                                            cursor: \"pointer\",\n                                        }}\n                                    >\n                                        변경하기\n                                    </button>\n                                </div>\n                            )}\n                            <button\n                                onClick={onAddOrUpdate}\n                                style={{\n                                    marginTop: 10,\n                                    width: \"100%\",\n                                    padding: 10,\n                                    backgroundColor: \"#4caf50\",\n                                    fontSize: 16,\n                                    fontWeight: \"bold\",\n                                    color: \"white\",\n                                    border: \"none\",\n                                    borderRadius: 5,\n                                    cursor: \"pointer\",\n                                }}\n                            >\n                                저장\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default ToDoList;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}