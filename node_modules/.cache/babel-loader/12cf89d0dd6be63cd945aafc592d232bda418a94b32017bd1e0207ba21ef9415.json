{"ast":null,"code":"var _jsxFileName = \"/Users/ldy/Code/React/\\u110B\\u1170\\u11B8\\u1100\\u1162\\u1107\\u1161\\u11AF\\u110B\\u1173\\u11BC\\u110B\\u116D\\u11BC/week15/Todolist/src/components/ToDoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToDoList() {\n  _s();\n  const navigate = useNavigate();\n\n  // Sample user data\n  const [users, setUsers] = useState([{\n    id: \"1\",\n    userId: \"john\",\n    password: \"1234\",\n    todos: {\n      1: [{\n        id: 1,\n        title: \"운동하기\",\n        content: \"매일 아침 30분 운동\",\n        date: \"2024-11-09\"\n      }, {\n        id: 2,\n        title: \"책 읽기\",\n        content: \"소설 한 권 읽기\",\n        date: \"2024-11-30\"\n      }],\n      2: [{\n        id: 1,\n        title: \"프로젝트 보고서 작성\",\n        content: \"최종 보고서 작성 및 검토\",\n        date: \"2024-12-01\"\n      }, {\n        id: 2,\n        title: \"팀 회의 준비\",\n        content: \"발표 자료 준비 및 회의록 작성\",\n        date: \"2024-12-02\"\n      }],\n      3: []\n    }\n  }, {\n    id: \"2\",\n    userId: \"jane\",\n    password: \"abcd\",\n    todos: {\n      1: [],\n      2: [],\n      3: []\n    }\n  }, {\n    id: \"3\",\n    userId: \"sw\",\n    password: \"sw\",\n    todos: {\n      1: [],\n      2: [],\n      3: []\n    }\n  }]);\n  const [loggedInUser, setLoggedInUser] = useState(null);\n  const [selectedFolder, setSelectedFolder] = useState(1);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const handleLogin = (userId, password) => {\n    const user = users.find(u => u.userId === userId && u.password === password);\n    if (user) {\n      setLoggedInUser(user);\n      alert(\"로그인 성공!\");\n    } else {\n      alert(\"아이디 또는 비밀번호가 잘못되었습니다.\");\n    }\n  };\n  const getCurrentDate = () => {\n    const now = new Date();\n    const year = now.getFullYear();\n    const month = String(now.getMonth() + 1).padStart(2, \"0\");\n    const date = String(now.getDate()).padStart(2, \"0\");\n    const hours = String(now.getHours()).padStart(2, \"0\");\n    const minutes = String(now.getMinutes()).padStart(2, \"0\");\n    const seconds = String(now.getSeconds()).padStart(2, \"0\");\n    return `${year}-${month}-${date} ${hours}:${minutes}:${seconds}`;\n  };\n  const onAddOrUpdate = () => {\n    if (!loggedInUser) return alert(\"로그인 후 이용해주세요!\");\n    if (title.trim() === \"\" || content.trim() === \"\") {\n      alert(\"제목과 내용을 입력하세요!\");\n      return;\n    }\n    const updatedTodos = {\n      ...loggedInUser.todos,\n      [selectedFolder]: [...loggedInUser.todos[selectedFolder], {\n        id: Date.now(),\n        title,\n        content,\n        date: getCurrentDate()\n      }]\n    };\n    const updatedUser = {\n      ...loggedInUser,\n      todos: updatedTodos\n    };\n    setLoggedInUser(updatedUser);\n    setUsers(prevUsers => prevUsers.map(u => u.id === loggedInUser.id ? updatedUser : u));\n    closeModal();\n  };\n  const openModal = () => setIsModalOpen(true);\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setTitle(\"\");\n    setContent(\"\");\n  };\n  if (!loggedInUser) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uC544\\uC774\\uB514\",\n        id: \"loginUserId\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n        id: \"loginPassword\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleLogin(document.getElementById(\"loginUserId\").value, document.getElementById(\"loginPassword\").value),\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [loggedInUser.userId, \"\\uC758 ToDoList\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setLoggedInUser(null),\n      children: \"\\uB85C\\uADF8\\uC544\\uC6C3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD3F4\\uB354\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.keys(loggedInUser.todos).map(folderId => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => setSelectedFolder(Number(folderId)),\n          children: [\"\\uD3F4\\uB354 \", folderId]\n        }, folderId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: openModal,\n      children: \"\\uBA54\\uBAA8 \\uCD94\\uAC00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: (loggedInUser.todos[selectedFolder] || []).map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: todo.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: todo.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: todo.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uBA54\\uBAA8 \\uCD94\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uC81C\\uBAA9\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"\\uB0B4\\uC6A9\",\n        value: content,\n        onChange: e => setContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onAddOrUpdate,\n        children: \"\\uC800\\uC7A5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: closeModal,\n        children: \"\\uCDE8\\uC18C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 9\n  }, this);\n}\n_s(ToDoList, \"BB/xCR5CG+bC6Xje1iquj61RXCw=\", false, function () {\n  return [useNavigate];\n});\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","ToDoList","_s","navigate","users","setUsers","id","userId","password","todos","title","content","date","loggedInUser","setLoggedInUser","selectedFolder","setSelectedFolder","isModalOpen","setIsModalOpen","setTitle","setContent","handleLogin","user","find","u","alert","getCurrentDate","now","Date","year","getFullYear","month","String","getMonth","padStart","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","onAddOrUpdate","trim","updatedTodos","updatedUser","prevUsers","map","closeModal","openModal","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onClick","document","getElementById","value","Object","keys","folderId","Number","todo","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/ldy/Code/React/웹개발응용/week15/Todolist/src/components/ToDoList.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction ToDoList() {\n    const navigate = useNavigate();\n\n    // Sample user data\n    const [users, setUsers] = useState([\n        {\n            id: \"1\",\n            userId: \"john\",\n            password: \"1234\",\n            todos: {\n                1: [\n                    { id: 1, title: \"운동하기\", content: \"매일 아침 30분 운동\", date: \"2024-11-09\" },\n                    { id: 2, title: \"책 읽기\", content: \"소설 한 권 읽기\", date: \"2024-11-30\" },\n                ],\n                2: [\n                    { id: 1, title: \"프로젝트 보고서 작성\", content: \"최종 보고서 작성 및 검토\", date: \"2024-12-01\" },\n                    { id: 2, title: \"팀 회의 준비\", content: \"발표 자료 준비 및 회의록 작성\", date: \"2024-12-02\" },\n                ],\n                3: [],\n            },\n        },\n        {\n            id: \"2\",\n            userId: \"jane\",\n            password: \"abcd\",\n            todos: { 1: [], 2: [], 3: [] },\n        },\n        {\n            id: \"3\",\n            userId: \"sw\",\n            password: \"sw\",\n            todos: { 1: [], 2: [], 3: [] },\n        },\n    ]);\n\n    const [loggedInUser, setLoggedInUser] = useState(null);\n    const [selectedFolder, setSelectedFolder] = useState(1);\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [title, setTitle] = useState(\"\");\n    const [content, setContent] = useState(\"\");\n\n    const handleLogin = (userId, password) => {\n        const user = users.find((u) => u.userId === userId && u.password === password);\n        if (user) {\n            setLoggedInUser(user);\n            alert(\"로그인 성공!\");\n        } else {\n            alert(\"아이디 또는 비밀번호가 잘못되었습니다.\");\n        }\n    };\n\n    const getCurrentDate = () => {\n        const now = new Date();\n        const year = now.getFullYear();\n        const month = String(now.getMonth() + 1).padStart(2, \"0\");\n        const date = String(now.getDate()).padStart(2, \"0\");\n        const hours = String(now.getHours()).padStart(2, \"0\");\n        const minutes = String(now.getMinutes()).padStart(2, \"0\");\n        const seconds = String(now.getSeconds()).padStart(2, \"0\");\n\n        return `${year}-${month}-${date} ${hours}:${minutes}:${seconds}`;\n    };\n\n    const onAddOrUpdate = () => {\n        if (!loggedInUser) return alert(\"로그인 후 이용해주세요!\");\n        if (title.trim() === \"\" || content.trim() === \"\") {\n            alert(\"제목과 내용을 입력하세요!\");\n            return;\n        }\n        const updatedTodos = {\n            ...loggedInUser.todos,\n            [selectedFolder]: [\n                ...loggedInUser.todos[selectedFolder],\n                { id: Date.now(), title, content, date: getCurrentDate() },\n            ],\n        };\n        const updatedUser = { ...loggedInUser, todos: updatedTodos };\n        setLoggedInUser(updatedUser);\n        setUsers((prevUsers) =>\n            prevUsers.map((u) => (u.id === loggedInUser.id ? updatedUser : u))\n        );\n        closeModal();\n    };\n\n    const openModal = () => setIsModalOpen(true);\n    const closeModal = () => {\n        setIsModalOpen(false);\n        setTitle(\"\");\n        setContent(\"\");\n    };\n\n    if (!loggedInUser) {\n        return (\n            <div>\n                <h2>로그인</h2>\n                <input\n                    type=\"text\"\n                    placeholder=\"아이디\"\n                    id=\"loginUserId\"\n                />\n                <input\n                    type=\"password\"\n                    placeholder=\"비밀번호\"\n                    id=\"loginPassword\"\n                />\n                <button\n                    onClick={() =>\n                        handleLogin(\n                            document.getElementById(\"loginUserId\").value,\n                            document.getElementById(\"loginPassword\").value\n                        )\n                    }\n                >\n                    로그인\n                </button>\n            </div>\n        );\n    }\n\n    return (\n        <div>\n            <h1>{loggedInUser.userId}의 ToDoList</h1>\n            <button onClick={() => setLoggedInUser(null)}>로그아웃</button>\n            <div>\n                <h2>폴더</h2>\n                <ul>\n                    {Object.keys(loggedInUser.todos).map((folderId) => (\n                        <li\n                            key={folderId}\n                            onClick={() => setSelectedFolder(Number(folderId))}\n                        >\n                            폴더 {folderId}\n                        </li>\n                    ))}\n                </ul>\n            </div>\n            <button onClick={openModal}>메모 추가</button>\n            <ul>\n                {(loggedInUser.todos[selectedFolder] || []).map((todo) => (\n                    <li key={todo.id}>\n                        <h3>{todo.title}</h3>\n                        <p>{todo.content}</p>\n                        <p>{todo.date}</p>\n                    </li>\n                ))}\n            </ul>\n\n            {isModalOpen && (\n                <div>\n                    <h2>메모 추가</h2>\n                    <input\n                        type=\"text\"\n                        placeholder=\"제목\"\n                        value={title}\n                        onChange={(e) => setTitle(e.target.value)}\n                    />\n                    <textarea\n                        placeholder=\"내용\"\n                        value={content}\n                        onChange={(e) => setContent(e.target.value)}\n                    />\n                    <button onClick={onAddOrUpdate}>저장</button>\n                    <button onClick={closeModal}>취소</button>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default ToDoList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}