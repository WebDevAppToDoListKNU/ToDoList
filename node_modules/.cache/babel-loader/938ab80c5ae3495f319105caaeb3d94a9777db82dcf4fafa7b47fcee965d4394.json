{"ast":null,"code":"var _jsxFileName = \"/Users/ldy/Code/React/\\u110B\\u1170\\u11B8\\u1100\\u1162\\u1107\\u1161\\u11AF\\u110B\\u1173\\u11BC\\u110B\\u116D\\u11BC/week15/Todolist/src/components/ToDoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { chat } from './openai';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToDoList() {\n  _s();\n  var _folders$find;\n  const navigate = useNavigate();\n  const [loggedInUser, setLoggedInUser] = useState(null);\n  const [todos, setTodos] = useState({});\n  const [folders, setFolders] = useState([{\n    id: 1,\n    name: \"개인\"\n  }, {\n    id: 2,\n    name: \"업무\"\n  }, {\n    id: 3,\n    name: \"휴지통\"\n  }]);\n  const [favorites, setFavorites] = useState([]);\n  const [selectedFolder, setSelectedFolder] = useState(1);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [editingTodo, setEditingTodo] = useState(null);\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [newFolderName, setNewFolderName] = useState(\"\");\n  const [query, setQuery] = useState(\"\");\n  const [summary, setSummary] = useState(\"\");\n  const [sortOrder, setSortOrder] = useState(\"latest\");\n  const [filterDate, setFilterDate] = useState(\"\");\n  useEffect(() => {\n    const userId = sessionStorage.getItem(\"loggedInUserId\");\n    if (userId) {\n      axios.get(`http://localhost:8000/users/${userId}`).then(response => {\n        setLoggedInUser(response.data);\n        setTodos(response.data.todos || {});\n      }).catch(error => {\n        console.error(\"사용자 정보를 가져오는 데 실패했습니다:\", error);\n      });\n    }\n  }, []);\n  const onLogout = () => {\n    sessionStorage.removeItem(\"loggedInUserId\"); // 로그아웃 시 sessionStorage 초기화\n    setLoggedInUser(null);\n    navigate(\"/login\");\n  };\n  const getCurrentDate = () => {\n    const now = new Date();\n    const year = now.getFullYear();\n    const month = String(now.getMonth() + 1).padStart(2, \"0\");\n    const date = String(now.getDate()).padStart(2, \"0\");\n    const hours = String(now.getHours()).padStart(2, \"0\");\n    const minutes = String(now.getMinutes()).padStart(2, \"0\");\n    const seconds = String(now.getSeconds()).padStart(2, \"0\");\n    return `${year}-${month}-${date} ${hours}:${minutes}:${seconds}`;\n  };\n  const onAddOrUpdate = () => {\n    if (title.trim() === \"\" || content.trim() === \"\") {\n      alert(\"제목과 내용을 입력하세요!\");\n      return;\n    }\n    const folderTodos = todos[selectedFolder] || [];\n    if (editingTodo) {\n      const updatedTodos = folderTodos.map(todo => todo.id === editingTodo.id ? {\n        ...todo,\n        title,\n        content,\n        filterDate\n      } : todo);\n      setTodos({\n        ...todos,\n        [selectedFolder]: updatedTodos\n      });\n    } else {\n      const id = folderTodos.length > 0 ? folderTodos[folderTodos.length - 1].id + 1 : 1;\n      const updatedTodos = [...folderTodos, {\n        id,\n        title,\n        content,\n        date: getCurrentDate()\n      }];\n      setTodos({\n        ...todos,\n        [selectedFolder]: updatedTodos\n      });\n    }\n    closeModal();\n  };\n  const onDelete = id => {\n    const folderTodos = todos[selectedFolder];\n    const updatedTodos = folderTodos.filter(todo => todo.id !== id);\n    const todoToDelete = folderTodos.find(todo => todo.id === id);\n    setTodos({\n      ...todos,\n      [selectedFolder]: updatedTodos\n    });\n    if (todoToDelete) {\n      setTodos(prevState => ({\n        ...prevState,\n        3: [...prevState[3], todoToDelete]\n      }));\n    }\n  };\n  const onRealDelete = id => {\n    const folderTodos = todos[selectedFolder];\n    const updatedTodos = folderTodos.filter(todo => todo.id !== id);\n    setTodos({\n      ...todos,\n      [selectedFolder]: updatedTodos\n    });\n  };\n  const TRASH_FOLDER_ID = 3;\n  const restoreTodo = id => {\n    const trashTodos = todos[TRASH_FOLDER_ID];\n    const todoToRestore = trashTodos.find(todo => todo.id === id);\n    if (todoToRestore) {\n      const originalFolder = todoToRestore.previousFolder || 1;\n      setTodos(prevState => {\n        const updatedTrashTodos = trashTodos.filter(todo => todo.id !== id);\n        const updatedOriginalFolderTodos = [...prevState[originalFolder], {\n          ...todoToRestore,\n          date: filterDate\n        }];\n        return {\n          ...prevState,\n          [TRASH_FOLDER_ID]: updatedTrashTodos,\n          [originalFolder]: updatedOriginalFolderTodos\n        };\n      });\n    }\n  };\n  const toggleFavorite = todoId => {\n    setFavorites(prev => prev.includes(todoId) ? prev.filter(id => id !== todoId) : [...prev, todoId]);\n  };\n  const openModal = (todo = null) => {\n    setIsModalOpen(true);\n    if (todo) {\n      setEditingTodo(todo);\n      setTitle(todo.title);\n      setContent(todo.content);\n      setFilterDate(todo.date);\n    } else {\n      setEditingTodo(null);\n      setTitle(\"\");\n      setContent(\"\");\n      setFilterDate(\"\");\n    }\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setEditingTodo(null);\n    setTitle(\"\");\n    setContent(\"\");\n    setSummary(\"\");\n    setFilterDate(\"\");\n  };\n  const sortTodos = todos => {\n    return todos.sort((a, b) => sortOrder === \"latest\" ? new Date(b.date) - new Date(a.date) : new Date(a.date) - new Date(b.date));\n  };\n  const filteredTodos = sortTodos((todos[selectedFolder] || []).filter(todo => (!filterDate || todo.date === filterDate) && (todo.title.toLowerCase().includes(query.toLowerCase()) || todo.content.toLowerCase().includes(query.toLowerCase()))));\n  const fetchSummary = () => {\n    const prompt = `다음은 사용자가 작성한 TodoList입니다. 내용을 간결하고, 가독성 있게 정리해주세요.\n        ${content}`;\n    chat(prompt, response => setSummary(response));\n  };\n  const updateTodoContent = () => {\n    setContent(summary);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      height: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"300px\",\n        borderRight: \"2px solid #ccc\",\n        padding: 10,\n        boxSizing: \"border-box\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"ToDoList\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this), loggedInUser ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uC548\\uB155\\uD558\\uC138\\uC694, \", loggedInUser.userId, \"\\uB2D8!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onLogout,\n          children: \"\\uB85C\\uADF8\\uC544\\uC6C3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uB85C\\uADF8\\uC778\\uD558\\uC9C0 \\uC54A\\uC558\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate(\"/login\"),\n          children: \"\\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => openModal(),\n        children: \"\\uBA54\\uBAA8 \\uC4F0\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyle: \"none\",\n          padding: 0\n        },\n        children: folders.map(folder => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => setSelectedFolder(folder.id),\n          style: {\n            cursor: \"pointer\",\n            fontWeight: selectedFolder === folder.id ? \"bold\" : \"normal\",\n            backgroundColor: selectedFolder === folder.id ? \"#e0e0e0\" : \"transparent\",\n            padding: \"5px\",\n            borderRadius: \"4px\"\n          },\n          children: folder.name\n        }, folder.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newFolderName,\n          onChange: e => setNewFolderName(e.target.value),\n          placeholder: \"\\uC0C8 \\uD3F4\\uB354 \\uC774\\uB984\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            if (newFolderName.trim()) {\n              const id = folders.length > 0 ? folders[folders.length - 1].id + 1 : 1;\n              setFolders([...folders, {\n                id,\n                name: newFolderName\n              }]);\n              setNewFolderName(\"\");\n            }\n          },\n          children: \"\\uD3F4\\uB354 \\uCD94\\uAC00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        padding: \"10px\",\n        overflowY: \"scroll\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: (_folders$find = folders.find(folder => folder.id === selectedFolder)) === null || _folders$find === void 0 ? void 0 : _folders$find.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        placeholder: \"\\uAC80\\uC0C9\",\n        style: {\n          marginBottom: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this), filteredTodos.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyle: \"none\",\n          padding: 0\n        },\n        children: filteredTodos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: todo.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: todo.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: todo.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => onDelete(todo.id),\n            children: \"\\uC0AD\\uC81C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => toggleFavorite(todo.id),\n            children: favorites.includes(todo.id) ? \"즐겨찾기 해제\" : \"즐겨찾기\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 33\n          }, this)]\n        }, todo.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uD560 \\uC77C\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n        backgroundColor: \"white\",\n        padding: \"20px\",\n        boxShadow: \"0 2px 10px rgba(0, 0, 0, 0.2)\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: editingTodo ? \"할 일 수정\" : \"새 할 일 작성\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        placeholder: \"\\uC81C\\uBAA9\",\n        style: {\n          width: \"100%\",\n          marginBottom: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: content,\n        onChange: e => setContent(e.target.value),\n        placeholder: \"\\uB0B4\\uC6A9\",\n        style: {\n          width: \"100%\",\n          marginBottom: \"10px\",\n          height: \"100px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onAddOrUpdate,\n        children: \"\\uC800\\uC7A5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: closeModal,\n        style: {\n          marginLeft: \"10px\"\n        },\n        children: \"\\uB2EB\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 9\n  }, this);\n}\n_s(ToDoList, \"4tYV2+IoTIXo16s4+dm/03YLsNQ=\", false, function () {\n  return [useNavigate];\n});\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useState","useEffect","axios","chat","useNavigate","jsxDEV","_jsxDEV","ToDoList","_s","_folders$find","navigate","loggedInUser","setLoggedInUser","todos","setTodos","folders","setFolders","id","name","favorites","setFavorites","selectedFolder","setSelectedFolder","isModalOpen","setIsModalOpen","editingTodo","setEditingTodo","title","setTitle","content","setContent","newFolderName","setNewFolderName","query","setQuery","summary","setSummary","sortOrder","setSortOrder","filterDate","setFilterDate","userId","sessionStorage","getItem","get","then","response","data","catch","error","console","onLogout","removeItem","getCurrentDate","now","Date","year","getFullYear","month","String","getMonth","padStart","date","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","onAddOrUpdate","trim","alert","folderTodos","updatedTodos","map","todo","length","closeModal","onDelete","filter","todoToDelete","find","prevState","onRealDelete","TRASH_FOLDER_ID","restoreTodo","trashTodos","todoToRestore","originalFolder","previousFolder","updatedTrashTodos","updatedOriginalFolderTodos","toggleFavorite","todoId","prev","includes","openModal","sortTodos","sort","a","b","filteredTodos","toLowerCase","fetchSummary","prompt","updateTodoContent","style","display","height","children","width","borderRight","padding","boxSizing","fileName","_jsxFileName","lineNumber","columnNumber","onClick","listStyle","folder","cursor","fontWeight","backgroundColor","borderRadius","type","value","onChange","e","target","placeholder","flex","overflowY","marginBottom","position","top","left","transform","boxShadow","marginLeft","_c","$RefreshReg$"],"sources":["/Users/ldy/Code/React/웹개발응용/week15/Todolist/src/components/ToDoList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { chat } from './openai';\nimport { useNavigate } from 'react-router-dom';\n\nfunction ToDoList() {\n    const navigate = useNavigate();\n    const [loggedInUser, setLoggedInUser] = useState(null);\n    const [todos, setTodos] = useState({});\n    const [folders, setFolders] = useState([\n        { id: 1, name: \"개인\" },\n        { id: 2, name: \"업무\" },\n        { id: 3, name: \"휴지통\" },\n    ]);\n\n    const [favorites, setFavorites] = useState([]);\n    const [selectedFolder, setSelectedFolder] = useState(1);\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [editingTodo, setEditingTodo] = useState(null);\n    const [title, setTitle] = useState(\"\");\n    const [content, setContent] = useState(\"\");\n    const [newFolderName, setNewFolderName] = useState(\"\");\n    const [query, setQuery] = useState(\"\");\n    const [summary, setSummary] = useState(\"\");\n    const [sortOrder, setSortOrder] = useState(\"latest\");\n    const [filterDate, setFilterDate] = useState(\"\");\n\n    useEffect(() => {\n        const userId = sessionStorage.getItem(\"loggedInUserId\");\n        if (userId) {\n            axios.get(`http://localhost:8000/users/${userId}`)\n                .then((response) => {\n                    setLoggedInUser(response.data);\n                    setTodos(response.data.todos || {});\n                })\n                .catch((error) => {\n                    console.error(\"사용자 정보를 가져오는 데 실패했습니다:\", error);\n                });\n        }\n    }, []);\n\n    const onLogout = () => {\n        sessionStorage.removeItem(\"loggedInUserId\"); // 로그아웃 시 sessionStorage 초기화\n        setLoggedInUser(null);\n        navigate(\"/login\");\n    };\n\n    const getCurrentDate = () => {\n        const now = new Date();\n        const year = now.getFullYear();\n        const month = String(now.getMonth() + 1).padStart(2, \"0\");\n        const date = String(now.getDate()).padStart(2, \"0\");\n        const hours = String(now.getHours()).padStart(2, \"0\");\n        const minutes = String(now.getMinutes()).padStart(2, \"0\");\n        const seconds = String(now.getSeconds()).padStart(2, \"0\");\n\n        return `${year}-${month}-${date} ${hours}:${minutes}:${seconds}`;\n    };\n\n    const onAddOrUpdate = () => {\n        if (title.trim() === \"\" || content.trim() === \"\") {\n            alert(\"제목과 내용을 입력하세요!\");\n            return;\n        }\n        const folderTodos = todos[selectedFolder] || [];\n        if (editingTodo) {\n            const updatedTodos = folderTodos.map((todo) =>\n                todo.id === editingTodo.id ? { ...todo, title, content, filterDate } : todo\n            );\n            setTodos({ ...todos, [selectedFolder]: updatedTodos });\n        } else {\n            const id = folderTodos.length > 0 ? folderTodos[folderTodos.length - 1].id + 1 : 1;\n            const updatedTodos = [...folderTodos, { id, title, content, date: getCurrentDate() }];\n            setTodos({ ...todos, [selectedFolder]: updatedTodos });\n        }\n        closeModal();\n    };\n\n    const onDelete = (id) => {\n        const folderTodos = todos[selectedFolder];\n        const updatedTodos = folderTodos.filter((todo) => todo.id !== id);\n        const todoToDelete = folderTodos.find((todo) => todo.id === id);\n        setTodos({ ...todos, [selectedFolder]: updatedTodos });\n        if (todoToDelete) {\n            setTodos(prevState => ({\n                ...prevState,\n                3: [...prevState[3], todoToDelete],\n            }));\n        }\n    };\n\n    const onRealDelete = (id) => {\n        const folderTodos = todos[selectedFolder];\n        const updatedTodos = folderTodos.filter((todo) => todo.id !== id);\n        setTodos({ ...todos, [selectedFolder]: updatedTodos });\n    };\n\n    const TRASH_FOLDER_ID = 3;\n\n    const restoreTodo = (id) => {\n        const trashTodos = todos[TRASH_FOLDER_ID];\n        const todoToRestore = trashTodos.find((todo) => todo.id === id);\n\n        if (todoToRestore) {\n            const originalFolder = todoToRestore.previousFolder || 1;\n            setTodos((prevState) => {\n                const updatedTrashTodos = trashTodos.filter((todo) => todo.id !== id);\n                const updatedOriginalFolderTodos = [\n                    ...prevState[originalFolder],\n                    { ...todoToRestore, date: filterDate },\n                ];\n                return {\n                    ...prevState,\n                    [TRASH_FOLDER_ID]: updatedTrashTodos,\n                    [originalFolder]: updatedOriginalFolderTodos,\n                };\n            });\n        }\n    };\n\n    const toggleFavorite = (todoId) => {\n        setFavorites((prev) =>\n            prev.includes(todoId)\n                ? prev.filter((id) => id !== todoId)\n                : [...prev, todoId]\n        );\n    };\n\n    const openModal = (todo = null) => {\n        setIsModalOpen(true);\n        if (todo) {\n            setEditingTodo(todo);\n            setTitle(todo.title);\n            setContent(todo.content);\n            setFilterDate(todo.date);\n        } else {\n            setEditingTodo(null);\n            setTitle(\"\");\n            setContent(\"\");\n            setFilterDate(\"\");\n        }\n    };\n\n    const closeModal = () => {\n        setIsModalOpen(false);\n        setEditingTodo(null);\n        setTitle(\"\");\n        setContent(\"\");\n        setSummary(\"\");\n        setFilterDate(\"\");\n    };\n\n    const sortTodos = (todos) => {\n        return todos.sort((a, b) =>\n            sortOrder === \"latest\"\n                ? new Date(b.date) - new Date(a.date)\n                : new Date(a.date) - new Date(b.date)\n        );\n    };\n\n    const filteredTodos = sortTodos(\n        (todos[selectedFolder] || []).filter(\n            (todo) =>\n                (!filterDate || todo.date === filterDate) &&\n                (todo.title.toLowerCase().includes(query.toLowerCase()) ||\n                    todo.content.toLowerCase().includes(query.toLowerCase()))\n        )\n    );\n\n    const fetchSummary = () => {\n        const prompt = `다음은 사용자가 작성한 TodoList입니다. 내용을 간결하고, 가독성 있게 정리해주세요.\n        ${content}`;\n\n        chat(prompt, (response) => setSummary(response));\n    };\n\n    const updateTodoContent = () => {\n        setContent(summary);\n    };\n\n    return (\n        <div style={{ display: \"flex\", height: \"100vh\" }}>\n            {/* 폴더 리스트 */}\n            <div\n                style={{\n                    width: \"300px\",\n                    borderRight: \"2px solid #ccc\",\n                    padding: 10,\n                    boxSizing: \"border-box\",\n                }}\n            >\n                <h2>ToDoList</h2>\n                {loggedInUser ? (\n                    <div>\n                        <p>안녕하세요, {loggedInUser.userId}님!</p>\n                        <button onClick={onLogout}>로그아웃</button>\n                    </div>\n                ) : (\n                    <div>\n                        <p>로그인하지 않았습니다.</p>\n                        <button onClick={() => navigate(\"/login\")}>로그인</button>\n                    </div>\n                )}\n                <button\n                    onClick={() => openModal()}\n                >\n                    메모 쓰기\n                </button>\n\n                <ul style={{ listStyle: \"none\", padding: 0 }}>\n                    {folders.map((folder) => (\n                        <li\n                            key={folder.id}\n                            onClick={() => setSelectedFolder(folder.id)}\n                            style={{\n                                cursor: \"pointer\",\n                                fontWeight: selectedFolder === folder.id ? \"bold\" : \"normal\",\n                                backgroundColor: selectedFolder === folder.id ? \"#e0e0e0\" : \"transparent\",\n                                padding: \"5px\",\n                                borderRadius: \"4px\"\n                            }}\n                        >\n                            {folder.name}\n                        </li>\n                    ))}\n                </ul>\n\n                <div>\n                    <input\n                        type=\"text\"\n                        value={newFolderName}\n                        onChange={(e) => setNewFolderName(e.target.value)}\n                        placeholder=\"새 폴더 이름\"\n                    />\n                    <button\n                        onClick={() => {\n                            if (newFolderName.trim()) {\n                                const id = folders.length > 0 ? folders[folders.length - 1].id + 1 : 1;\n                                setFolders([...folders, { id, name: newFolderName }]);\n                                setNewFolderName(\"\");\n                            }\n                        }}\n                    >\n                        폴더 추가\n                    </button>\n                </div>\n            </div>\n\n            {/* 메모 리스트 */}\n            <div style={{ flex: 1, padding: \"10px\", overflowY: \"scroll\" }}>\n                <h2>{folders.find((folder) => folder.id === selectedFolder)?.name}</h2>\n                <input\n                    type=\"text\"\n                    value={query}\n                    onChange={(e) => setQuery(e.target.value)}\n                    placeholder=\"검색\"\n                    style={{ marginBottom: \"10px\" }}\n                />\n                {filteredTodos.length > 0 ? (\n                    <ul style={{ listStyle: \"none\", padding: 0 }}>\n                        {filteredTodos.map((todo) => (\n                            <li key={todo.id}>\n                                <h3>{todo.title}</h3>\n                                <p>{todo.content}</p>\n                                <p>{todo.date}</p>\n                                <button onClick={() => onDelete(todo.id)}>삭제</button>\n                                <button onClick={() => toggleFavorite(todo.id)}>\n                                    {favorites.includes(todo.id) ? \"즐겨찾기 해제\" : \"즐겨찾기\"}\n                                </button>\n                            </li>\n                        ))}\n                    </ul>\n                ) : (\n                    <p>할 일이 없습니다.</p>\n                )}\n            </div>\n\n            {/* 모달 */}\n            {isModalOpen && (\n                <div style={{ position: \"fixed\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\", backgroundColor: \"white\", padding: \"20px\", boxShadow: \"0 2px 10px rgba(0, 0, 0, 0.2)\" }}>\n                    <h3>{editingTodo ? \"할 일 수정\" : \"새 할 일 작성\"}</h3>\n                    <input\n                        type=\"text\"\n                        value={title}\n                        onChange={(e) => setTitle(e.target.value)}\n                        placeholder=\"제목\"\n                        style={{ width: \"100%\", marginBottom: \"10px\" }}\n                    />\n                    <textarea\n                        value={content}\n                        onChange={(e) => setContent(e.target.value)}\n                        placeholder=\"내용\"\n                        style={{ width: \"100%\", marginBottom: \"10px\", height: \"100px\" }}\n                    />\n                    <button onClick={onAddOrUpdate}>저장</button>\n                    <button onClick={closeModal} style={{ marginLeft: \"10px\" }}>닫기</button>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default ToDoList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}