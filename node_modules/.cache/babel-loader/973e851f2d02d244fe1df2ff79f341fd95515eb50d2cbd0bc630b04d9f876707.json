{"ast":null,"code":"var _jsxFileName = \"/Users/sunwookim/webDevTest/src/components/Join.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { chat } from './openai';\nimport { useNavigate } from 'react-router-dom';\n\n// npx json-server db.json --port 8000\n// npm start\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ToDoList() {\n  _s();\n  var _folders$find, _folders$find2;\n  const navigate = useNavigate();\n  const [loggedInUser, setLoggedInUser] = useState(null);\n  const [todos, setTodos] = useState({});\n  const [folders, setFolders] = useState([{\n    id: 1,\n    name: \"휴지통\"\n  }, {\n    id: 2,\n    name: \"개인\"\n  }, {\n    id: 3,\n    name: \"업무\"\n  }]);\n  const [favorites, setFavorites] = useState([]);\n  const [selectedFolder, setSelectedFolder] = useState(1);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [editingTodo, setEditingTodo] = useState(null);\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [newFolderName, setNewFolderName] = useState(\"\");\n  const [query, setQuery] = useState(\"\");\n  const [summary, setSummary] = useState(\"\");\n  const [sortOrder, setSortOrder] = useState(\"latest\");\n  const [filterDate, setFilterDate] = useState(\"\");\n  useEffect(() => {\n    const userId = sessionStorage.getItem(\"loggedInUserId\");\n    if (userId) {\n      axios.get(`http://localhost:8000/users/${userId}`).then(response => {\n        setLoggedInUser(response.data);\n        setTodos(response.data.todos || {});\n        setFolders(response.data.folders || []);\n      }).catch(error => {\n        console.error(\"사용자 정보를 가져오는 데 실패했습니다:\", error);\n      });\n    }\n  }, []);\n  const onLogout = () => {\n    sessionStorage.removeItem(\"loggedInUserId\"); // 로그아웃 시 sessionStorage 초기화\n    setLoggedInUser(null);\n    navigate(\"/\");\n  };\n  const getCurrentDate = () => {\n    const now = new Date();\n    const year = now.getFullYear();\n    const month = String(now.getMonth() + 1).padStart(2, \"0\");\n    const date = String(now.getDate()).padStart(2, \"0\");\n    const hours = String(now.getHours()).padStart(2, \"0\");\n    const minutes = String(now.getMinutes()).padStart(2, \"0\");\n    const seconds = String(now.getSeconds()).padStart(2, \"0\");\n    return `${year}-${month}-${date} ${hours}:${minutes}:${seconds}`;\n  };\n  const onAddOrUpdate = () => {\n    if (title.trim() === \"\" || content.trim() === \"\") {\n      alert(\"제목과 내용을 입력하세요!\");\n      return;\n    }\n    const folderTodos = todos[selectedFolder] || [];\n    const userId = loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser.id;\n\n    // 폴더 ID 추가\n    const folderId = selectedFolder; // 선택된 폴더 ID\n\n    if (editingTodo) {\n      const updatedTodos = folderTodos.map(todo => todo.id === editingTodo.id ? {\n        ...todo,\n        title,\n        content,\n        date: filterDate,\n        folderId\n      } : todo);\n      const updatedData = {\n        ...todos,\n        [selectedFolder]: updatedTodos\n      };\n      setTodos(updatedData);\n\n      // Update the backend\n      axios.patch(`http://localhost:8000/users/${userId}`, {\n        todos: updatedData\n      }).then(() => console.log(\"Todo updated in backend\")).catch(error => console.error(\"Failed to update todo:\", error));\n    } else {\n      const id = folderTodos.length > 0 ? folderTodos[folderTodos.length - 1].id + 1 : 1;\n      const newTodo = {\n        id,\n        title,\n        content,\n        date: getCurrentDate(),\n        folderId\n      };\n      const updatedData = {\n        ...todos,\n        [selectedFolder]: [...folderTodos, newTodo]\n      };\n      setTodos(updatedData);\n\n      // Update the backend\n      axios.patch(`http://localhost:8000/users/${userId}`, {\n        todos: updatedData\n      }).then(() => console.log(\"New todo added to backend\")).catch(error => console.error(\"Failed to add new todo:\", error));\n    }\n    closeModal();\n  };\n  const addFolder = () => {\n    if (!loggedInUser) {\n      alert(\"로그인 후 폴더를 추가할 수 있습니다.\");\n      return;\n    }\n    if (newFolderName.trim()) {\n      const id = folders.length > 0 ? folders[folders.length - 1].id + 1 : 1;\n      const newFolder = {\n        id,\n        name: newFolderName.trim()\n      };\n      const updatedFolders = [...folders, newFolder];\n      setFolders(updatedFolders);\n      setNewFolderName(\"\");\n\n      // Update the backend\n      const userId = loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser.id;\n      axios.patch(`http://localhost:8000/users/${userId}`, {\n        folders: updatedFolders\n      }).then(() => console.log(\"New folder added to backend\")).catch(error => console.error(\"Failed to add folder:\", error));\n    }\n  };\n  const onDelete = id => {\n    const folderTodos = todos[selectedFolder];\n    const updatedTodos = folderTodos.filter(todo => todo.id !== id);\n    const todoToDelete = folderTodos.find(todo => todo.id === id);\n    const updatedData = {\n      ...todos,\n      [selectedFolder]: updatedTodos\n    };\n    setTodos(updatedData);\n    if (todoToDelete) {\n      // 새로운 ID 생성 (현재 todos의 모든 id 중 최댓값 + 1)\n      const allTodos = Object.values(todos).flat();\n      const newId = Math.max(0, ...allTodos.map(todo => todo.id)) + 1;\n      const trashTodos = [...(todos[1] || []), {\n        ...todoToDelete,\n        id: newId,\n        previousFolder: selectedFolder\n      }];\n      setTodos(prev => ({\n        ...prev,\n        1: trashTodos\n      }));\n\n      // Update the backend\n      const userId = loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser.id;\n      axios.patch(`http://localhost:8000/users/${userId}`, {\n        todos: {\n          ...updatedData,\n          1: trashTodos\n        }\n      }).then(() => console.log(\"Todo moved to trash in backend\")).catch(error => console.error(\"Failed to update backend:\", error));\n    }\n  };\n  const onRealDelete = id => {\n    const trashTodos = todos[TRASH_FOLDER_ID];\n    const updatedTodos = trashTodos.filter(todo => todo.id !== id);\n    setTodos(prevState => ({\n      ...prevState,\n      [TRASH_FOLDER_ID]: updatedTodos\n    }));\n\n    // 서버에 업데이트 요청\n    const userId = loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser.id;\n    axios.patch(`http://localhost:8000/users/${userId}`, {\n      todos: {\n        ...todos,\n        [TRASH_FOLDER_ID]: updatedTodos\n      }\n    }).then(() => {\n      console.log(\"Todo permanently deleted from backend\");\n    }).catch(error => {\n      console.error(\"Failed to update backend:\", error);\n    });\n  };\n  const TRASH_FOLDER_ID = 1;\n  const restoreTodo = id => {\n    const trashTodos = todos[TRASH_FOLDER_ID];\n    const todoToRestore = trashTodos.find(todo => todo.id === id);\n    const updatedTrashTodos = trashTodos.filter(todo => todo.id !== id);\n    if (todoToRestore) {\n      const restoredFolder = todoToRestore.previousFolder;\n      const updatedFolderTodos = [...(todos[restoredFolder] || []), {\n        ...todoToRestore,\n        previousFolder: undefined\n      }];\n\n      // Update the state with the restored todo\n      const updatedData = {\n        ...todos,\n        [TRASH_FOLDER_ID]: updatedTrashTodos,\n        [restoredFolder]: updatedFolderTodos\n      };\n      setTodos(updatedData);\n\n      // Update the backend\n      const userId = loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser.id;\n      axios.patch(`http://localhost:8000/users/${userId}`, {\n        todos: updatedData\n      }).then(() => console.log(\"Todo restored in backend\")).catch(error => console.error(\"Failed to update backend:\", error));\n    }\n  };\n  const toggleFavorite = (todoId, folderId) => {\n    setFavorites(prev => {\n      const isFavorite = prev.some(item => item.todoId === todoId && item.folderId === folderId);\n      if (isFavorite) {\n        return prev.filter(item => item.todoId !== todoId || item.folderId !== folderId);\n      } else {\n        return [...prev, {\n          todoId,\n          folderId\n        }];\n      }\n    });\n  };\n  const openModal = (todo = null) => {\n    if (!loggedInUser) {\n      alert(\"로그인 후 이용할 수 있습니다.\");\n      return;\n    }\n    setIsModalOpen(true);\n    if (todo) {\n      setEditingTodo(todo);\n      setTitle(todo.title);\n      setContent(todo.content);\n      setFilterDate(todo.date);\n    } else {\n      setEditingTodo(null);\n      setTitle(\"\");\n      setContent(\"\");\n      setFilterDate(\"\");\n    }\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setEditingTodo(null);\n    setTitle(\"\");\n    setContent(\"\");\n    setSummary(\"\");\n    setFilterDate(\"\");\n  };\n  const sortTodos = todos => {\n    return todos.sort((a, b) => sortOrder === \"latest\" ? new Date(b.date) - new Date(a.date) : new Date(a.date) - new Date(b.date));\n  };\n  const filteredTodos = sortTodos((todos[selectedFolder] || []).filter(todo => (!filterDate || todo.date === filterDate) && (todo.title.toLowerCase().includes(query.toLowerCase()) || todo.content.toLowerCase().includes(query.toLowerCase()))));\n  const fetchSummary = () => {\n    const prompt = `다음은 사용자가 작성한 TodoList입니다. 내용을 간결하고, 가독성 있게 정리해주세요.\n        ${content}`;\n    chat(prompt, response => setSummary(response));\n  };\n  const updateTodoContent = () => {\n    setContent(summary);\n  };\n  const onDeleteFolder = folderId => {\n    if (folderId === 1) {\n      alert(\"휴지통 폴더는 삭제할 수 없습니다.\");\n      return;\n    }\n    const updatedFolders = folders.filter(folder => folder.id !== folderId);\n    const updatedTodos = {\n      ...todos\n    };\n    // Remove todos associated with the folder to be deleted\n    delete updatedTodos[folderId];\n    setFolders(updatedFolders);\n    setTodos(updatedTodos);\n\n    // Update the backend\n    const userId = loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser.id;\n    axios.patch(`http://localhost:8000/users/${userId}`, {\n      folders: updatedFolders,\n      todos: updatedTodos\n    }).then(() => console.log(\"Folder and associated todos deleted in backend\")).catch(error => console.error(\"Failed to delete folder:\", error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      height: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"250px\",\n        borderRight: \"2px solid #ccc\",\n        padding: 10,\n        boxSizing: \"border-box\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"ToDoList\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 17\n      }, this), loggedInUser && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC548\\uB155\\uD558\\uC138\\uC694, \", loggedInUser.userId, \"\\uB2D8!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 21\n      }, this), loggedInUser ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onLogout,\n        style: {\n          marginRight: 15\n        },\n        children: \"\\uB85C\\uADF8\\uC544\\uC6C3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(\"/login\"),\n        style: {\n          marginRight: 15\n        },\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 21\n      }, this), selectedFolder !== 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => openModal(),\n        children: \"\\uBA54\\uBAA8 \\uC4F0\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 43\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyle: \"none\",\n          padding: 0\n        },\n        children: loggedInUser ? folders.map(folder => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => setSelectedFolder(folder.id),\n          style: {\n            display: \"flex\",\n            // Flexbox to align elements\n            justifyContent: \"space-between\",\n            // Push items to ends\n            alignItems: \"center\",\n            // Vertically align the items\n            fontWeight: selectedFolder === folder.id ? \"bold\" : \"normal\",\n            backgroundColor: selectedFolder === folder.id ? \"#e0e0e0\" : \"transparent\",\n            padding: \"5px\",\n            borderRadius: \"4px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: folder.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 33\n          }, this), \" \", folder.id !== 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              e.stopPropagation(); // Prevent folder selection on button click\n              onDeleteFolder(folder.id);\n            },\n            children: \"\\uC0AD\\uC81C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 37\n          }, this)]\n        }, folder.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uB85C\\uADF8\\uC778 \\uD6C4 \\uD3F4\\uB354\\uB97C \\uBCFC \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newFolderName,\n          onChange: e => setNewFolderName(e.target.value),\n          placeholder: \"\\uC0C8 \\uD3F4\\uB354 \\uC774\\uB984\",\n          style: {\n            marginRight: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addFolder,\n          children: \"\\uD3F4\\uB354 \\uCD94\\uAC00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 17\n      }, this), loggedInUser && selectedFolder !== 1 && /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [(_folders$find = folders.find(folder => folder.id === selectedFolder)) === null || _folders$find === void 0 ? void 0 : _folders$find.name, \" \\uD3F4\\uB354 \\uC990\\uACA8\\uCC3E\\uAE30\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 21\n      }, this), loggedInUser && favorites.map(({\n        todoId,\n        folderId\n      }) => {\n        var _todos$selectedFolder;\n        // 폴더 ID가 1이거나 선택된 폴더의 ID와 일치하지 않는 경우 숨기기\n        if (folderId !== selectedFolder || folderId === 1) return null;\n        const note = (_todos$selectedFolder = todos[selectedFolder]) === null || _todos$selectedFolder === void 0 ? void 0 : _todos$selectedFolder.find(todo => todo.id === todoId);\n        return note ? /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => openModal(note),\n          children: note.title\n        }, todoId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 29\n        }, this) : null;\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        padding: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: (_folders$find2 = folders.find(folder => folder.id === selectedFolder)) === null || _folders$find2 === void 0 ? void 0 : _folders$find2.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\uAC80\\uC0C9 (\\uC81C\\uBAA9/\\uB0B4\\uC6A9)\",\n          value: query,\n          onChange: e => setQuery(e.target.value),\n          style: {\n            width: \"30%\",\n            padding: 10,\n            marginBottom: 20,\n            boxSizing: \"border-box\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: 15\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: filterDate,\n          onChange: e => setFilterDate(e.target.value),\n          style: {\n            marginRight: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSortOrder(sortOrder === \"latest\" ? \"oldest\" : \"latest\"),\n          children: sortOrder === \"latest\" ? \"최신순\" : \"오래된 순\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(auto-fill, minmax(250px, 1fr))\",\n          gap: 20\n        },\n        children: loggedInUser ? filteredTodos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            border: \"1px solid #ccc\",\n            borderRadius: 10,\n            padding: 10,\n            backgroundColor: \"white\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            onClick: () => openModal(todo),\n            children: todo.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: 14,\n              color: \"#555\"\n            },\n            children: todo.content.length > 20 ? todo.content.slice(0, 20) + '...' : todo.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: todo.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              width: \"100%\"\n            },\n            children: [selectedFolder !== 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => toggleFavorite(todo.id, todo.folderId),\n              children: favorites.some(item => item.todoId === todo.id && item.folderId === todo.folderId) ? \"★\" : \"☆\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 41\n            }, this), selectedFolder !== 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => onDelete(todo.id),\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              width: \"100%\"\n            },\n            children: [selectedFolder === 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => restoreTodo(todo.id),\n              children: \"\\uBCF5\\uC6D0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 41\n            }, this), selectedFolder === 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => onRealDelete(todo.id),\n              children: \"\\uC644\\uC804 \\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 33\n          }, this)]\n        }, todo.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uB85C\\uADF8\\uC778 \\uD6C4 \\uBA54\\uBAA8\\uB97C \\uD655\\uC778\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 13\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        width: \"100%\",\n        height: \"100%\",\n        backgroundColor: \"rgba(0, 0, 0, 0.05)\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: \"white\",\n          width: \"50%\",\n          height: \"50%\",\n          borderRadius: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeModal,\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            padding: 10\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: title,\n            onChange: e => setTitle(e.target.value),\n            placeholder: \"\\uC81C\\uBAA9 \\uC785\\uB825\",\n            style: {\n              width: \"100%\",\n              padding: 10,\n              fontSize: 16,\n              boxSizing: \"border-box\",\n              marginBottom: 10\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: content,\n            onChange: e => setContent(e.target.value),\n            placeholder: \"\\uB0B4\\uC6A9 \\uC785\\uB825\",\n            style: {\n              width: \"100%\",\n              height: 200,\n              padding: 10,\n              fontSize: 16,\n              boxSizing: \"border-box\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: fetchSummary,\n            children: \"GPT \\uB0B4\\uC6A9 \\uC694\\uC57D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 29\n          }, this), summary && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: summary\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 552,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: updateTodoContent,\n              children: \"\\uBCC0\\uACBD\\uD558\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onAddOrUpdate,\n            children: \"\\uC800\\uC7A5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 306,\n    columnNumber: 9\n  }, this);\n}\n_s(ToDoList, \"isPOgFIySOdw+g5gVwWKlEpKQgo=\", false, function () {\n  return [useNavigate];\n});\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useState","useEffect","axios","chat","useNavigate","jsxDEV","_jsxDEV","ToDoList","_s","_folders$find","_folders$find2","navigate","loggedInUser","setLoggedInUser","todos","setTodos","folders","setFolders","id","name","favorites","setFavorites","selectedFolder","setSelectedFolder","isModalOpen","setIsModalOpen","editingTodo","setEditingTodo","title","setTitle","content","setContent","newFolderName","setNewFolderName","query","setQuery","summary","setSummary","sortOrder","setSortOrder","filterDate","setFilterDate","userId","sessionStorage","getItem","get","then","response","data","catch","error","console","onLogout","removeItem","getCurrentDate","now","Date","year","getFullYear","month","String","getMonth","padStart","date","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","onAddOrUpdate","trim","alert","folderTodos","folderId","updatedTodos","map","todo","updatedData","patch","log","length","newTodo","closeModal","addFolder","newFolder","updatedFolders","onDelete","filter","todoToDelete","find","allTodos","Object","values","flat","newId","Math","max","trashTodos","previousFolder","prev","onRealDelete","TRASH_FOLDER_ID","prevState","restoreTodo","todoToRestore","updatedTrashTodos","restoredFolder","updatedFolderTodos","undefined","toggleFavorite","todoId","isFavorite","some","item","openModal","sortTodos","sort","a","b","filteredTodos","toLowerCase","includes","fetchSummary","prompt","updateTodoContent","onDeleteFolder","folder","style","display","height","children","width","borderRight","padding","boxSizing","fileName","_jsxFileName","lineNumber","columnNumber","onClick","marginRight","listStyle","justifyContent","alignItems","fontWeight","backgroundColor","borderRadius","e","stopPropagation","type","value","onChange","target","placeholder","_todos$selectedFolder","note","flex","marginBottom","gridTemplateColumns","gap","border","fontSize","color","slice","position","_c","$RefreshReg$"],"sources":["/Users/sunwookim/webDevTest/src/components/Join.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { chat } from './openai';\nimport { useNavigate } from 'react-router-dom';\n\n// npx json-server db.json --port 8000\n// npm start\n\n\nfunction ToDoList() {\n\n\n    const navigate = useNavigate();\n    const [loggedInUser, setLoggedInUser] = useState(null);\n    const [todos, setTodos] = useState({});\n    const [folders, setFolders] = useState([\n        { id: 1, name: \"휴지통\" },\n        { id: 2, name: \"개인\" },\n        { id: 3, name: \"업무\" },\n    ]);\n\n    const [favorites, setFavorites] = useState([]);\n    const [selectedFolder, setSelectedFolder] = useState(1);\n    const [isModalOpen, setIsModalOpen] = useState(false);\n    const [editingTodo, setEditingTodo] = useState(null);\n    const [title, setTitle] = useState(\"\");\n    const [content, setContent] = useState(\"\");\n    const [newFolderName, setNewFolderName] = useState(\"\");\n    const [query, setQuery] = useState(\"\");\n    const [summary, setSummary] = useState(\"\");\n    const [sortOrder, setSortOrder] = useState(\"latest\");\n    const [filterDate, setFilterDate] = useState(\"\");\n\n\n    useEffect(() => {\n        const userId = sessionStorage.getItem(\"loggedInUserId\");\n        if (userId) {\n            axios.get(`http://localhost:8000/users/${userId}`)\n                .then((response) => {\n                    setLoggedInUser(response.data);\n                    setTodos(response.data.todos || {});\n                    setFolders(response.data.folders || []);\n                })\n                .catch((error) => {\n                    console.error(\"사용자 정보를 가져오는 데 실패했습니다:\", error);\n                });\n        }\n    }, []);\n\n    const onLogout = () => {\n        sessionStorage.removeItem(\"loggedInUserId\"); // 로그아웃 시 sessionStorage 초기화\n        setLoggedInUser(null);\n        navigate(\"/\");\n    };\n\n    const getCurrentDate = () => {\n        const now = new Date();\n        const year = now.getFullYear();\n        const month = String(now.getMonth() + 1).padStart(2, \"0\");\n        const date = String(now.getDate()).padStart(2, \"0\");\n        const hours = String(now.getHours()).padStart(2, \"0\");\n        const minutes = String(now.getMinutes()).padStart(2, \"0\");\n        const seconds = String(now.getSeconds()).padStart(2, \"0\");\n\n        return `${year}-${month}-${date} ${hours}:${minutes}:${seconds}`;\n    };\n\n\n    const onAddOrUpdate = () => {\n        if (title.trim() === \"\" || content.trim() === \"\") {\n            alert(\"제목과 내용을 입력하세요!\");\n            return;\n        }\n        const folderTodos = todos[selectedFolder] || [];\n        const userId = loggedInUser?.id;\n\n        // 폴더 ID 추가\n        const folderId = selectedFolder;  // 선택된 폴더 ID\n\n        if (editingTodo) {\n            const updatedTodos = folderTodos.map((todo) =>\n                todo.id === editingTodo.id ? { ...todo, title, content, date: filterDate, folderId } : todo\n            );\n            const updatedData = { ...todos, [selectedFolder]: updatedTodos };\n            setTodos(updatedData);\n\n            // Update the backend\n            axios.patch(`http://localhost:8000/users/${userId}`, { todos: updatedData })\n                .then(() => console.log(\"Todo updated in backend\"))\n                .catch((error) => console.error(\"Failed to update todo:\", error));\n        } else {\n            const id = folderTodos.length > 0 ? folderTodos[folderTodos.length - 1].id + 1 : 1;\n            const newTodo = { id, title, content, date: getCurrentDate(), folderId };\n            const updatedData = { ...todos, [selectedFolder]: [...folderTodos, newTodo] };\n            setTodos(updatedData);\n\n            // Update the backend\n            axios.patch(`http://localhost:8000/users/${userId}`, { todos: updatedData })\n                .then(() => console.log(\"New todo added to backend\"))\n                .catch((error) => console.error(\"Failed to add new todo:\", error));\n        }\n        closeModal();\n    };\n\n\n\n\n    const addFolder = () => {\n        if (!loggedInUser) {\n            alert(\"로그인 후 폴더를 추가할 수 있습니다.\");\n            return;\n        }\n        if (newFolderName.trim()) {\n            const id = folders.length > 0 ? folders[folders.length - 1].id + 1 : 1;\n            const newFolder = { id, name: newFolderName.trim() };\n            const updatedFolders = [...folders, newFolder];\n            setFolders(updatedFolders);\n            setNewFolderName(\"\");\n\n            // Update the backend\n            const userId = loggedInUser?.id;\n            axios.patch(`http://localhost:8000/users/${userId}`, { folders: updatedFolders })\n                .then(() => console.log(\"New folder added to backend\"))\n                .catch((error) => console.error(\"Failed to add folder:\", error));\n        }\n    };\n\n\n    const onDelete = (id) => {\n        const folderTodos = todos[selectedFolder];\n        const updatedTodos = folderTodos.filter((todo) => todo.id !== id);\n        const todoToDelete = folderTodos.find((todo) => todo.id === id);\n\n        const updatedData = { ...todos, [selectedFolder]: updatedTodos };\n        setTodos(updatedData);\n\n        if (todoToDelete) {\n            // 새로운 ID 생성 (현재 todos의 모든 id 중 최댓값 + 1)\n            const allTodos = Object.values(todos).flat();\n            const newId = Math.max(0, ...allTodos.map((todo) => todo.id)) + 1;\n\n            const trashTodos = [\n                ...(todos[1] || []),\n                { ...todoToDelete, id: newId, previousFolder: selectedFolder }\n            ];\n            setTodos((prev) => ({ ...prev, 1: trashTodos }));\n\n            // Update the backend\n            const userId = loggedInUser?.id;\n            axios.patch(`http://localhost:8000/users/${userId}`, { todos: { ...updatedData, 1: trashTodos } })\n                .then(() => console.log(\"Todo moved to trash in backend\"))\n                .catch((error) => console.error(\"Failed to update backend:\", error));\n        }\n    };\n\n\n\n    const onRealDelete = (id) => {\n        const trashTodos = todos[TRASH_FOLDER_ID];\n        const updatedTodos = trashTodos.filter((todo) => todo.id !== id);\n\n        setTodos((prevState) => ({\n            ...prevState,\n            [TRASH_FOLDER_ID]: updatedTodos,\n        }));\n\n        // 서버에 업데이트 요청\n        const userId = loggedInUser?.id;\n        axios\n            .patch(`http://localhost:8000/users/${userId}`, {\n                todos: {\n                    ...todos,\n                    [TRASH_FOLDER_ID]: updatedTodos,\n                },\n            })\n            .then(() => {\n                console.log(\"Todo permanently deleted from backend\");\n            })\n            .catch((error) => {\n                console.error(\"Failed to update backend:\", error);\n            });\n    };\n\n\n\n    const TRASH_FOLDER_ID = 1;\n\n    const restoreTodo = (id) => {\n        const trashTodos = todos[TRASH_FOLDER_ID];\n        const todoToRestore = trashTodos.find((todo) => todo.id === id);\n        const updatedTrashTodos = trashTodos.filter((todo) => todo.id !== id);\n\n        if (todoToRestore) {\n            const restoredFolder = todoToRestore.previousFolder;\n            const updatedFolderTodos = [...(todos[restoredFolder] || []), { ...todoToRestore, previousFolder: undefined }];\n\n            // Update the state with the restored todo\n            const updatedData = {\n                ...todos,\n                [TRASH_FOLDER_ID]: updatedTrashTodos,\n                [restoredFolder]: updatedFolderTodos\n            };\n            setTodos(updatedData);\n\n            // Update the backend\n            const userId = loggedInUser?.id;\n            axios.patch(`http://localhost:8000/users/${userId}`, { todos: updatedData })\n                .then(() => console.log(\"Todo restored in backend\"))\n                .catch((error) => console.error(\"Failed to update backend:\", error));\n        }\n    };\n\n\n    const toggleFavorite = (todoId, folderId) => {\n        setFavorites((prev) => {\n            const isFavorite = prev.some((item) => item.todoId === todoId && item.folderId === folderId);\n            if (isFavorite) {\n                return prev.filter((item) => item.todoId !== todoId || item.folderId !== folderId);\n            } else {\n                return [...prev, { todoId, folderId }];\n            }\n        });\n    };\n\n\n    const openModal = (todo = null) => {\n        if (!loggedInUser) {\n            alert(\"로그인 후 이용할 수 있습니다.\");\n            return;\n        }\n        setIsModalOpen(true);\n        if (todo) {\n            setEditingTodo(todo);\n            setTitle(todo.title);\n            setContent(todo.content);\n            setFilterDate(todo.date);\n        } else {\n            setEditingTodo(null);\n            setTitle(\"\");\n            setContent(\"\");\n            setFilterDate(\"\");\n        }\n    };\n\n    const closeModal = () => {\n        setIsModalOpen(false);\n        setEditingTodo(null);\n        setTitle(\"\");\n        setContent(\"\");\n        setSummary(\"\");\n        setFilterDate(\"\");\n    };\n\n    const sortTodos = (todos) => {\n        return todos.sort((a, b) =>\n            sortOrder === \"latest\"\n                ? new Date(b.date) - new Date(a.date)\n                : new Date(a.date) - new Date(b.date)\n        );\n    };\n\n    const filteredTodos = sortTodos(\n        (todos[selectedFolder] || []).filter(\n            (todo) =>\n                (!filterDate || todo.date === filterDate) &&\n                (todo.title.toLowerCase().includes(query.toLowerCase()) ||\n                    todo.content.toLowerCase().includes(query.toLowerCase()))\n        )\n    );\n\n    const fetchSummary = () => {\n        const prompt = `다음은 사용자가 작성한 TodoList입니다. 내용을 간결하고, 가독성 있게 정리해주세요.\n        ${content}`;\n\n        chat(prompt, (response) => setSummary(response));\n    };\n\n    const updateTodoContent = () => {\n        setContent(summary);\n    };\n\n    const onDeleteFolder = (folderId) => {\n        if (folderId === 1) {\n            alert(\"휴지통 폴더는 삭제할 수 없습니다.\");\n            return;\n        }\n\n        const updatedFolders = folders.filter((folder) => folder.id !== folderId);\n        const updatedTodos = { ...todos };\n        // Remove todos associated with the folder to be deleted\n        delete updatedTodos[folderId];\n        setFolders(updatedFolders);\n        setTodos(updatedTodos);\n\n        // Update the backend\n        const userId = loggedInUser?.id;\n        axios.patch(`http://localhost:8000/users/${userId}`, {\n            folders: updatedFolders,\n            todos: updatedTodos,\n        })\n            .then(() => console.log(\"Folder and associated todos deleted in backend\"))\n            .catch((error) => console.error(\"Failed to delete folder:\", error));\n    };\n\n    return (\n        <div style={{ display: \"flex\", height: \"100vh\" }}>\n            {/* 폴더 리스트 */}\n            <div\n                style={{\n                    width: \"250px\",\n                    borderRight: \"2px solid #ccc\",\n                    padding: 10,\n                    boxSizing: \"border-box\",\n                }}\n            >\n                <h2>ToDoList</h2>\n                {loggedInUser && (\n                    <p>안녕하세요, {loggedInUser.userId}님!</p>\n                )}\n                {loggedInUser ? (\n                    <button onClick={onLogout}\n                        style={{ marginRight: 15 }}>로그아웃</button>\n                ) : (\n                    <button onClick={() => navigate(\"/login\")}\n                        style={{ marginRight: 15 }}>로그인</button>\n                )}\n\n                {selectedFolder !== 1 && (<button\n                    onClick={() => openModal()}>\n                    메모 쓰기\n                </button>)}\n\n                <ul style={{ listStyle: \"none\", padding: 0 }}>\n                    {loggedInUser ? (\n                        folders.map((folder) => (\n                            <li\n                                key={folder.id}\n                                onClick={() => setSelectedFolder(folder.id)}\n                                style={{\n                                    display: \"flex\",         // Flexbox to align elements\n                                    justifyContent: \"space-between\",  // Push items to ends\n                                    alignItems: \"center\",    // Vertically align the items\n                                    fontWeight: selectedFolder === folder.id ? \"bold\" : \"normal\",\n                                    backgroundColor: selectedFolder === folder.id ? \"#e0e0e0\" : \"transparent\",\n                                    padding: \"5px\",\n                                    borderRadius: \"4px\",\n                                }}\n                            >\n                                <span>{folder.name}</span> {/* Folder name */}\n\n                                {/* Delete button */}\n                                {folder.id !== 1 && (\n                                    <button\n                                        onClick={(e) => {\n                                            e.stopPropagation(); // Prevent folder selection on button click\n                                            onDeleteFolder(folder.id);\n                                        }}>\n                                        삭제\n                                    </button>\n                                )}\n                            </li>\n                        ))\n                    ) : (\n                        <p>로그인 후 폴더를 볼 수 있습니다.</p>\n                    )}\n                </ul>\n\n\n                <div>\n                    <input\n                        type=\"text\"\n                        value={newFolderName}\n                        onChange={(e) => setNewFolderName(e.target.value)}\n                        placeholder=\"새 폴더 이름\"\n                        style={{ marginRight: 10 }}\n                    />\n                    <button onClick={addFolder}>폴더 추가</button>\n                </div>\n                {loggedInUser && selectedFolder !== 1 && (\n                    <h3>\n                        {folders.find((folder) => folder.id === selectedFolder)?.name} 폴더 즐겨찾기\n                    </h3>\n                )}\n                {loggedInUser &&\n                    favorites.map(({ todoId, folderId }) => {\n                        // 폴더 ID가 1이거나 선택된 폴더의 ID와 일치하지 않는 경우 숨기기\n                        if (folderId !== selectedFolder || folderId === 1) return null;\n\n                        const note = todos[selectedFolder]?.find((todo) => todo.id === todoId);\n                        return note ? (\n                            <div key={todoId} onClick={() => openModal(note)}>\n                                {note.title}\n                            </div>\n                        ) : null;\n                    })}\n\n\n            </div>\n\n            {/* 메모 영역 */}\n            <div style={{ flex: 1, padding: 20 }}>\n                <h2>{folders.find((folder) => folder.id === selectedFolder)?.name}</h2>\n                <div>\n\n\n\n                    <input\n                        type=\"text\"\n                        placeholder=\"검색 (제목/내용)\"\n                        value={query}\n                        onChange={(e) => setQuery(e.target.value)}\n                        style={{\n                            width: \"30%\",\n                            padding: 10,\n                            marginBottom: 20,\n                            boxSizing: \"border-box\",\n                        }}\n                    />\n                </div>\n                <div style={{ marginBottom: 15 }}>\n                    <input\n                        type=\"date\"\n                        value={filterDate}\n                        onChange={(e) => setFilterDate(e.target.value)}\n                        style={{ marginRight: 10 }}\n\n                    />\n                    <button onClick={() => setSortOrder(sortOrder === \"latest\" ? \"oldest\" : \"latest\")}>\n                        {sortOrder === \"latest\" ? \"최신순\" : \"오래된 순\"}\n                    </button>\n                </div>\n                <div\n                    style={{\n                        display: \"grid\",\n                        gridTemplateColumns: \"repeat(auto-fill, minmax(250px, 1fr))\",\n                        gap: 20,\n                    }}\n                >\n                    {loggedInUser ? (\n                        filteredTodos.map((todo) => (\n                            <div\n                                key={todo.id}\n                                style={{\n                                    border: \"1px solid #ccc\",\n                                    borderRadius: 10,\n                                    padding: 10,\n                                    backgroundColor: \"white\",\n                                }}\n                            >\n                                <h3\n                                    onClick={() => openModal(todo)}>\n                                    {todo.title}\n                                </h3>\n                                <p style={{ fontSize: 14, color: \"#555\" }}>\n                                    {todo.content.length > 20 ? todo.content.slice(0, 20) + '...' : todo.content}\n                                </p>\n\n\n                                <p>{todo.date}</p>\n\n                                <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"100%\" }}>\n                                    {selectedFolder !== 1 && (\n                                        <button onClick={() => toggleFavorite(todo.id, todo.folderId)}>\n                                            {favorites.some((item) => item.todoId === todo.id && item.folderId === todo.folderId) ? \"★\" : \"☆\"}\n                                        </button>)}\n                                    {selectedFolder !== 1 && (\n                                        <button onClick={() => onDelete(todo.id)}>\n                                            삭제\n                                        </button>\n                                    )}\n                                </div>\n\n\n\n                                <div style={{ display: \"flex\", justifyContent: \"space-between\", width: \"100%\" }}>\n                                    {selectedFolder === 1 && (\n                                        <button\n                                            onClick={() => restoreTodo(todo.id)}>\n                                            복원\n                                        </button>\n                                    )}\n                                    {selectedFolder === 1 && (\n                                        <button onClick={() => onRealDelete(todo.id)}>\n                                            완전 삭제\n                                        </button>\n                                    )}\n                                </div>\n                            </div>\n                        ))\n                    ) : (\n                        <p>로그인 후 메모를 확인할 수 있습니다.</p>\n                    )}\n\n                </div>\n            </div>\n\n            {isModalOpen && (\n                <div\n                    style={{\n                        position: \"fixed\",\n                        width: \"100%\",\n                        height: \"100%\",\n                        backgroundColor: \"rgba(0, 0, 0, 0.05)\",\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                    }}>\n                    <div\n                        style={{\n                            backgroundColor: \"white\",\n                            width: \"50%\",\n                            height: \"50%\",\n                            borderRadius: 10,\n                        }}>\n                        <button\n                            onClick={closeModal}>\n                            ✕\n                        </button>\n                        <div style={{ padding: 10 }}>\n                            <input\n                                type=\"text\"\n                                value={title}\n                                onChange={(e) => setTitle(e.target.value)}\n                                placeholder=\"제목 입력\"\n                                style={{\n                                    width: \"100%\",\n                                    padding: 10,\n                                    fontSize: 16,\n                                    boxSizing: \"border-box\",\n                                    marginBottom: 10,\n                                }}\n                            />\n                            <textarea\n                                value={content}\n                                onChange={(e) => setContent(e.target.value)}\n                                placeholder=\"내용 입력\"\n                                style={{\n                                    width: \"100%\",\n                                    height: 200,\n                                    padding: 10,\n                                    fontSize: 16,\n                                    boxSizing: \"border-box\",\n                                }}\n                            ></textarea>\n\n                            <button\n                                onClick={fetchSummary}>\n                                GPT 내용 요약\n                            </button>\n                            {summary && (\n                                <div>\n                                    <p>{summary}</p>\n                                    <button\n                                        onClick={updateTodoContent}>\n                                        변경하기\n                                    </button>\n                                </div>\n                            )}\n                            <button\n                                onClick={onAddOrUpdate}>\n                                저장\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default ToDoList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,UAAU;AAC/B,SAASC,WAAW,QAAQ,kBAAkB;;AAE9C;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGA,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,aAAA,EAAAC,cAAA;EAGhB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtC,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,CACnC;IAAEkB,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAM,CAAC,EACtB;IAAED,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAK,CAAC,EACrB;IAAED,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAK,CAAC,CACxB,CAAC;EAEF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACsB,cAAc,EAAEC,iBAAiB,CAAC,GAAGvB,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACwB,WAAW,EAAEC,cAAc,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC0B,WAAW,EAAEC,cAAc,CAAC,GAAG3B,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAAC4B,KAAK,EAAEC,QAAQ,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC8B,OAAO,EAAEC,UAAU,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACgC,aAAa,EAAEC,gBAAgB,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACkC,KAAK,EAAEC,QAAQ,CAAC,GAAGnC,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACoC,OAAO,EAAEC,UAAU,CAAC,GAAGrC,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACsC,SAAS,EAAEC,YAAY,CAAC,GAAGvC,QAAQ,CAAC,QAAQ,CAAC;EACpD,MAAM,CAACwC,UAAU,EAAEC,aAAa,CAAC,GAAGzC,QAAQ,CAAC,EAAE,CAAC;EAGhDC,SAAS,CAAC,MAAM;IACZ,MAAMyC,MAAM,GAAGC,cAAc,CAACC,OAAO,CAAC,gBAAgB,CAAC;IACvD,IAAIF,MAAM,EAAE;MACRxC,KAAK,CAAC2C,GAAG,CAAC,+BAA+BH,MAAM,EAAE,CAAC,CAC7CI,IAAI,CAAEC,QAAQ,IAAK;QAChBlC,eAAe,CAACkC,QAAQ,CAACC,IAAI,CAAC;QAC9BjC,QAAQ,CAACgC,QAAQ,CAACC,IAAI,CAAClC,KAAK,IAAI,CAAC,CAAC,CAAC;QACnCG,UAAU,CAAC8B,QAAQ,CAACC,IAAI,CAAChC,OAAO,IAAI,EAAE,CAAC;MAC3C,CAAC,CAAC,CACDiC,KAAK,CAAEC,KAAK,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAClD,CAAC,CAAC;IACV;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,QAAQ,GAAGA,CAAA,KAAM;IACnBT,cAAc,CAACU,UAAU,CAAC,gBAAgB,CAAC,CAAC,CAAC;IAC7CxC,eAAe,CAAC,IAAI,CAAC;IACrBF,QAAQ,CAAC,GAAG,CAAC;EACjB,CAAC;EAED,MAAM2C,cAAc,GAAGA,CAAA,KAAM;IACzB,MAAMC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;IACtB,MAAMC,IAAI,GAAGF,GAAG,CAACG,WAAW,CAAC,CAAC;IAC9B,MAAMC,KAAK,GAAGC,MAAM,CAACL,GAAG,CAACM,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IACzD,MAAMC,IAAI,GAAGH,MAAM,CAACL,GAAG,CAACS,OAAO,CAAC,CAAC,CAAC,CAACF,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IACnD,MAAMG,KAAK,GAAGL,MAAM,CAACL,GAAG,CAACW,QAAQ,CAAC,CAAC,CAAC,CAACJ,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IACrD,MAAMK,OAAO,GAAGP,MAAM,CAACL,GAAG,CAACa,UAAU,CAAC,CAAC,CAAC,CAACN,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IACzD,MAAMO,OAAO,GAAGT,MAAM,CAACL,GAAG,CAACe,UAAU,CAAC,CAAC,CAAC,CAACR,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IAEzD,OAAO,GAAGL,IAAI,IAAIE,KAAK,IAAII,IAAI,IAAIE,KAAK,IAAIE,OAAO,IAAIE,OAAO,EAAE;EACpE,CAAC;EAGD,MAAME,aAAa,GAAGA,CAAA,KAAM;IACxB,IAAI3C,KAAK,CAAC4C,IAAI,CAAC,CAAC,KAAK,EAAE,IAAI1C,OAAO,CAAC0C,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC9CC,KAAK,CAAC,gBAAgB,CAAC;MACvB;IACJ;IACA,MAAMC,WAAW,GAAG5D,KAAK,CAACQ,cAAc,CAAC,IAAI,EAAE;IAC/C,MAAMoB,MAAM,GAAG9B,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEM,EAAE;;IAE/B;IACA,MAAMyD,QAAQ,GAAGrD,cAAc,CAAC,CAAE;;IAElC,IAAII,WAAW,EAAE;MACb,MAAMkD,YAAY,GAAGF,WAAW,CAACG,GAAG,CAAEC,IAAI,IACtCA,IAAI,CAAC5D,EAAE,KAAKQ,WAAW,CAACR,EAAE,GAAG;QAAE,GAAG4D,IAAI;QAAElD,KAAK;QAAEE,OAAO;QAAEiC,IAAI,EAAEvB,UAAU;QAAEmC;MAAS,CAAC,GAAGG,IAC3F,CAAC;MACD,MAAMC,WAAW,GAAG;QAAE,GAAGjE,KAAK;QAAE,CAACQ,cAAc,GAAGsD;MAAa,CAAC;MAChE7D,QAAQ,CAACgE,WAAW,CAAC;;MAErB;MACA7E,KAAK,CAAC8E,KAAK,CAAC,+BAA+BtC,MAAM,EAAE,EAAE;QAAE5B,KAAK,EAAEiE;MAAY,CAAC,CAAC,CACvEjC,IAAI,CAAC,MAAMK,OAAO,CAAC8B,GAAG,CAAC,yBAAyB,CAAC,CAAC,CAClDhC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC,CAAC;IACzE,CAAC,MAAM;MACH,MAAMhC,EAAE,GAAGwD,WAAW,CAACQ,MAAM,GAAG,CAAC,GAAGR,WAAW,CAACA,WAAW,CAACQ,MAAM,GAAG,CAAC,CAAC,CAAChE,EAAE,GAAG,CAAC,GAAG,CAAC;MAClF,MAAMiE,OAAO,GAAG;QAAEjE,EAAE;QAAEU,KAAK;QAAEE,OAAO;QAAEiC,IAAI,EAAET,cAAc,CAAC,CAAC;QAAEqB;MAAS,CAAC;MACxE,MAAMI,WAAW,GAAG;QAAE,GAAGjE,KAAK;QAAE,CAACQ,cAAc,GAAG,CAAC,GAAGoD,WAAW,EAAES,OAAO;MAAE,CAAC;MAC7EpE,QAAQ,CAACgE,WAAW,CAAC;;MAErB;MACA7E,KAAK,CAAC8E,KAAK,CAAC,+BAA+BtC,MAAM,EAAE,EAAE;QAAE5B,KAAK,EAAEiE;MAAY,CAAC,CAAC,CACvEjC,IAAI,CAAC,MAAMK,OAAO,CAAC8B,GAAG,CAAC,2BAA2B,CAAC,CAAC,CACpDhC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC,CAAC;IAC1E;IACAkC,UAAU,CAAC,CAAC;EAChB,CAAC;EAKD,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACpB,IAAI,CAACzE,YAAY,EAAE;MACf6D,KAAK,CAAC,uBAAuB,CAAC;MAC9B;IACJ;IACA,IAAIzC,aAAa,CAACwC,IAAI,CAAC,CAAC,EAAE;MACtB,MAAMtD,EAAE,GAAGF,OAAO,CAACkE,MAAM,GAAG,CAAC,GAAGlE,OAAO,CAACA,OAAO,CAACkE,MAAM,GAAG,CAAC,CAAC,CAAChE,EAAE,GAAG,CAAC,GAAG,CAAC;MACtE,MAAMoE,SAAS,GAAG;QAAEpE,EAAE;QAAEC,IAAI,EAAEa,aAAa,CAACwC,IAAI,CAAC;MAAE,CAAC;MACpD,MAAMe,cAAc,GAAG,CAAC,GAAGvE,OAAO,EAAEsE,SAAS,CAAC;MAC9CrE,UAAU,CAACsE,cAAc,CAAC;MAC1BtD,gBAAgB,CAAC,EAAE,CAAC;;MAEpB;MACA,MAAMS,MAAM,GAAG9B,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEM,EAAE;MAC/BhB,KAAK,CAAC8E,KAAK,CAAC,+BAA+BtC,MAAM,EAAE,EAAE;QAAE1B,OAAO,EAAEuE;MAAe,CAAC,CAAC,CAC5EzC,IAAI,CAAC,MAAMK,OAAO,CAAC8B,GAAG,CAAC,6BAA6B,CAAC,CAAC,CACtDhC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CAAC;IACxE;EACJ,CAAC;EAGD,MAAMsC,QAAQ,GAAItE,EAAE,IAAK;IACrB,MAAMwD,WAAW,GAAG5D,KAAK,CAACQ,cAAc,CAAC;IACzC,MAAMsD,YAAY,GAAGF,WAAW,CAACe,MAAM,CAAEX,IAAI,IAAKA,IAAI,CAAC5D,EAAE,KAAKA,EAAE,CAAC;IACjE,MAAMwE,YAAY,GAAGhB,WAAW,CAACiB,IAAI,CAAEb,IAAI,IAAKA,IAAI,CAAC5D,EAAE,KAAKA,EAAE,CAAC;IAE/D,MAAM6D,WAAW,GAAG;MAAE,GAAGjE,KAAK;MAAE,CAACQ,cAAc,GAAGsD;IAAa,CAAC;IAChE7D,QAAQ,CAACgE,WAAW,CAAC;IAErB,IAAIW,YAAY,EAAE;MACd;MACA,MAAME,QAAQ,GAAGC,MAAM,CAACC,MAAM,CAAChF,KAAK,CAAC,CAACiF,IAAI,CAAC,CAAC;MAC5C,MAAMC,KAAK,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,GAAGN,QAAQ,CAACf,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAAC5D,EAAE,CAAC,CAAC,GAAG,CAAC;MAEjE,MAAMiF,UAAU,GAAG,CACf,IAAIrF,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,EACnB;QAAE,GAAG4E,YAAY;QAAExE,EAAE,EAAE8E,KAAK;QAAEI,cAAc,EAAE9E;MAAe,CAAC,CACjE;MACDP,QAAQ,CAAEsF,IAAI,KAAM;QAAE,GAAGA,IAAI;QAAE,CAAC,EAAEF;MAAW,CAAC,CAAC,CAAC;;MAEhD;MACA,MAAMzD,MAAM,GAAG9B,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEM,EAAE;MAC/BhB,KAAK,CAAC8E,KAAK,CAAC,+BAA+BtC,MAAM,EAAE,EAAE;QAAE5B,KAAK,EAAE;UAAE,GAAGiE,WAAW;UAAE,CAAC,EAAEoB;QAAW;MAAE,CAAC,CAAC,CAC7FrD,IAAI,CAAC,MAAMK,OAAO,CAAC8B,GAAG,CAAC,gCAAgC,CAAC,CAAC,CACzDhC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC,CAAC;IAC5E;EACJ,CAAC;EAID,MAAMoD,YAAY,GAAIpF,EAAE,IAAK;IACzB,MAAMiF,UAAU,GAAGrF,KAAK,CAACyF,eAAe,CAAC;IACzC,MAAM3B,YAAY,GAAGuB,UAAU,CAACV,MAAM,CAAEX,IAAI,IAAKA,IAAI,CAAC5D,EAAE,KAAKA,EAAE,CAAC;IAEhEH,QAAQ,CAAEyF,SAAS,KAAM;MACrB,GAAGA,SAAS;MACZ,CAACD,eAAe,GAAG3B;IACvB,CAAC,CAAC,CAAC;;IAEH;IACA,MAAMlC,MAAM,GAAG9B,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEM,EAAE;IAC/BhB,KAAK,CACA8E,KAAK,CAAC,+BAA+BtC,MAAM,EAAE,EAAE;MAC5C5B,KAAK,EAAE;QACH,GAAGA,KAAK;QACR,CAACyF,eAAe,GAAG3B;MACvB;IACJ,CAAC,CAAC,CACD9B,IAAI,CAAC,MAAM;MACRK,OAAO,CAAC8B,GAAG,CAAC,uCAAuC,CAAC;IACxD,CAAC,CAAC,CACDhC,KAAK,CAAEC,KAAK,IAAK;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACrD,CAAC,CAAC;EACV,CAAC;EAID,MAAMqD,eAAe,GAAG,CAAC;EAEzB,MAAME,WAAW,GAAIvF,EAAE,IAAK;IACxB,MAAMiF,UAAU,GAAGrF,KAAK,CAACyF,eAAe,CAAC;IACzC,MAAMG,aAAa,GAAGP,UAAU,CAACR,IAAI,CAAEb,IAAI,IAAKA,IAAI,CAAC5D,EAAE,KAAKA,EAAE,CAAC;IAC/D,MAAMyF,iBAAiB,GAAGR,UAAU,CAACV,MAAM,CAAEX,IAAI,IAAKA,IAAI,CAAC5D,EAAE,KAAKA,EAAE,CAAC;IAErE,IAAIwF,aAAa,EAAE;MACf,MAAME,cAAc,GAAGF,aAAa,CAACN,cAAc;MACnD,MAAMS,kBAAkB,GAAG,CAAC,IAAI/F,KAAK,CAAC8F,cAAc,CAAC,IAAI,EAAE,CAAC,EAAE;QAAE,GAAGF,aAAa;QAAEN,cAAc,EAAEU;MAAU,CAAC,CAAC;;MAE9G;MACA,MAAM/B,WAAW,GAAG;QAChB,GAAGjE,KAAK;QACR,CAACyF,eAAe,GAAGI,iBAAiB;QACpC,CAACC,cAAc,GAAGC;MACtB,CAAC;MACD9F,QAAQ,CAACgE,WAAW,CAAC;;MAErB;MACA,MAAMrC,MAAM,GAAG9B,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEM,EAAE;MAC/BhB,KAAK,CAAC8E,KAAK,CAAC,+BAA+BtC,MAAM,EAAE,EAAE;QAAE5B,KAAK,EAAEiE;MAAY,CAAC,CAAC,CACvEjC,IAAI,CAAC,MAAMK,OAAO,CAAC8B,GAAG,CAAC,0BAA0B,CAAC,CAAC,CACnDhC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC,CAAC;IAC5E;EACJ,CAAC;EAGD,MAAM6D,cAAc,GAAGA,CAACC,MAAM,EAAErC,QAAQ,KAAK;IACzCtD,YAAY,CAAEgF,IAAI,IAAK;MACnB,MAAMY,UAAU,GAAGZ,IAAI,CAACa,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACH,MAAM,KAAKA,MAAM,IAAIG,IAAI,CAACxC,QAAQ,KAAKA,QAAQ,CAAC;MAC5F,IAAIsC,UAAU,EAAE;QACZ,OAAOZ,IAAI,CAACZ,MAAM,CAAE0B,IAAI,IAAKA,IAAI,CAACH,MAAM,KAAKA,MAAM,IAAIG,IAAI,CAACxC,QAAQ,KAAKA,QAAQ,CAAC;MACtF,CAAC,MAAM;QACH,OAAO,CAAC,GAAG0B,IAAI,EAAE;UAAEW,MAAM;UAAErC;QAAS,CAAC,CAAC;MAC1C;IACJ,CAAC,CAAC;EACN,CAAC;EAGD,MAAMyC,SAAS,GAAGA,CAACtC,IAAI,GAAG,IAAI,KAAK;IAC/B,IAAI,CAAClE,YAAY,EAAE;MACf6D,KAAK,CAAC,mBAAmB,CAAC;MAC1B;IACJ;IACAhD,cAAc,CAAC,IAAI,CAAC;IACpB,IAAIqD,IAAI,EAAE;MACNnD,cAAc,CAACmD,IAAI,CAAC;MACpBjD,QAAQ,CAACiD,IAAI,CAAClD,KAAK,CAAC;MACpBG,UAAU,CAAC+C,IAAI,CAAChD,OAAO,CAAC;MACxBW,aAAa,CAACqC,IAAI,CAACf,IAAI,CAAC;IAC5B,CAAC,MAAM;MACHpC,cAAc,CAAC,IAAI,CAAC;MACpBE,QAAQ,CAAC,EAAE,CAAC;MACZE,UAAU,CAAC,EAAE,CAAC;MACdU,aAAa,CAAC,EAAE,CAAC;IACrB;EACJ,CAAC;EAED,MAAM2C,UAAU,GAAGA,CAAA,KAAM;IACrB3D,cAAc,CAAC,KAAK,CAAC;IACrBE,cAAc,CAAC,IAAI,CAAC;IACpBE,QAAQ,CAAC,EAAE,CAAC;IACZE,UAAU,CAAC,EAAE,CAAC;IACdM,UAAU,CAAC,EAAE,CAAC;IACdI,aAAa,CAAC,EAAE,CAAC;EACrB,CAAC;EAED,MAAM4E,SAAS,GAAIvG,KAAK,IAAK;IACzB,OAAOA,KAAK,CAACwG,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KACnBlF,SAAS,KAAK,QAAQ,GAChB,IAAIkB,IAAI,CAACgE,CAAC,CAACzD,IAAI,CAAC,GAAG,IAAIP,IAAI,CAAC+D,CAAC,CAACxD,IAAI,CAAC,GACnC,IAAIP,IAAI,CAAC+D,CAAC,CAACxD,IAAI,CAAC,GAAG,IAAIP,IAAI,CAACgE,CAAC,CAACzD,IAAI,CAC5C,CAAC;EACL,CAAC;EAED,MAAM0D,aAAa,GAAGJ,SAAS,CAC3B,CAACvG,KAAK,CAACQ,cAAc,CAAC,IAAI,EAAE,EAAEmE,MAAM,CAC/BX,IAAI,IACD,CAAC,CAACtC,UAAU,IAAIsC,IAAI,CAACf,IAAI,KAAKvB,UAAU,MACvCsC,IAAI,CAAClD,KAAK,CAAC8F,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACzF,KAAK,CAACwF,WAAW,CAAC,CAAC,CAAC,IACnD5C,IAAI,CAAChD,OAAO,CAAC4F,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACzF,KAAK,CAACwF,WAAW,CAAC,CAAC,CAAC,CACpE,CACJ,CAAC;EAED,MAAME,YAAY,GAAGA,CAAA,KAAM;IACvB,MAAMC,MAAM,GAAG;AACvB,UAAU/F,OAAO,EAAE;IAEX3B,IAAI,CAAC0H,MAAM,EAAG9E,QAAQ,IAAKV,UAAU,CAACU,QAAQ,CAAC,CAAC;EACpD,CAAC;EAED,MAAM+E,iBAAiB,GAAGA,CAAA,KAAM;IAC5B/F,UAAU,CAACK,OAAO,CAAC;EACvB,CAAC;EAED,MAAM2F,cAAc,GAAIpD,QAAQ,IAAK;IACjC,IAAIA,QAAQ,KAAK,CAAC,EAAE;MAChBF,KAAK,CAAC,qBAAqB,CAAC;MAC5B;IACJ;IAEA,MAAMc,cAAc,GAAGvE,OAAO,CAACyE,MAAM,CAAEuC,MAAM,IAAKA,MAAM,CAAC9G,EAAE,KAAKyD,QAAQ,CAAC;IACzE,MAAMC,YAAY,GAAG;MAAE,GAAG9D;IAAM,CAAC;IACjC;IACA,OAAO8D,YAAY,CAACD,QAAQ,CAAC;IAC7B1D,UAAU,CAACsE,cAAc,CAAC;IAC1BxE,QAAQ,CAAC6D,YAAY,CAAC;;IAEtB;IACA,MAAMlC,MAAM,GAAG9B,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEM,EAAE;IAC/BhB,KAAK,CAAC8E,KAAK,CAAC,+BAA+BtC,MAAM,EAAE,EAAE;MACjD1B,OAAO,EAAEuE,cAAc;MACvBzE,KAAK,EAAE8D;IACX,CAAC,CAAC,CACG9B,IAAI,CAAC,MAAMK,OAAO,CAAC8B,GAAG,CAAC,gDAAgD,CAAC,CAAC,CACzEhC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC,CAAC;EAC3E,CAAC;EAED,oBACI5C,OAAA;IAAK2H,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBAE7C9H,OAAA;MACI2H,KAAK,EAAE;QACHI,KAAK,EAAE,OAAO;QACdC,WAAW,EAAE,gBAAgB;QAC7BC,OAAO,EAAE,EAAE;QACXC,SAAS,EAAE;MACf,CAAE;MAAAJ,QAAA,gBAEF9H,OAAA;QAAA8H,QAAA,EAAI;MAAQ;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAChBhI,YAAY,iBACTN,OAAA;QAAA8H,QAAA,GAAG,kCAAO,EAACxH,YAAY,CAAC8B,MAAM,EAAC,SAAE;MAAA;QAAA+F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACvC,EACAhI,YAAY,gBACTN,OAAA;QAAQuI,OAAO,EAAEzF,QAAS;QACtB6E,KAAK,EAAE;UAAEa,WAAW,EAAE;QAAG,CAAE;QAAAV,QAAA,EAAC;MAAI;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,gBAE7CtI,OAAA;QAAQuI,OAAO,EAAEA,CAAA,KAAMlI,QAAQ,CAAC,QAAQ,CAAE;QACtCsH,KAAK,EAAE;UAAEa,WAAW,EAAE;QAAG,CAAE;QAAAV,QAAA,EAAC;MAAG;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAC9C,EAEAtH,cAAc,KAAK,CAAC,iBAAKhB,OAAA;QACtBuI,OAAO,EAAEA,CAAA,KAAMzB,SAAS,CAAC,CAAE;QAAAgB,QAAA,EAAC;MAEhC;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAE,eAEVtI,OAAA;QAAI2H,KAAK,EAAE;UAAEc,SAAS,EAAE,MAAM;UAAER,OAAO,EAAE;QAAE,CAAE;QAAAH,QAAA,EACxCxH,YAAY,GACTI,OAAO,CAAC6D,GAAG,CAAEmD,MAAM,iBACf1H,OAAA;UAEIuI,OAAO,EAAEA,CAAA,KAAMtH,iBAAiB,CAACyG,MAAM,CAAC9G,EAAE,CAAE;UAC5C+G,KAAK,EAAE;YACHC,OAAO,EAAE,MAAM;YAAU;YACzBc,cAAc,EAAE,eAAe;YAAG;YAClCC,UAAU,EAAE,QAAQ;YAAK;YACzBC,UAAU,EAAE5H,cAAc,KAAK0G,MAAM,CAAC9G,EAAE,GAAG,MAAM,GAAG,QAAQ;YAC5DiI,eAAe,EAAE7H,cAAc,KAAK0G,MAAM,CAAC9G,EAAE,GAAG,SAAS,GAAG,aAAa;YACzEqH,OAAO,EAAE,KAAK;YACda,YAAY,EAAE;UAClB,CAAE;UAAAhB,QAAA,gBAEF9H,OAAA;YAAA8H,QAAA,EAAOJ,MAAM,CAAC7G;UAAI;YAAAsH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,KAAC,EAG1BZ,MAAM,CAAC9G,EAAE,KAAK,CAAC,iBACZZ,OAAA;YACIuI,OAAO,EAAGQ,CAAC,IAAK;cACZA,CAAC,CAACC,eAAe,CAAC,CAAC,CAAC,CAAC;cACrBvB,cAAc,CAACC,MAAM,CAAC9G,EAAE,CAAC;YAC7B,CAAE;YAAAkH,QAAA,EAAC;UAEP;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CACX;QAAA,GAvBIZ,MAAM,CAAC9G,EAAE;UAAAuH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAwBd,CACP,CAAC,gBAEFtI,OAAA;UAAA8H,QAAA,EAAG;QAAmB;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAC5B;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAGLtI,OAAA;QAAA8H,QAAA,gBACI9H,OAAA;UACIiJ,IAAI,EAAC,MAAM;UACXC,KAAK,EAAExH,aAAc;UACrByH,QAAQ,EAAGJ,CAAC,IAAKpH,gBAAgB,CAACoH,CAAC,CAACK,MAAM,CAACF,KAAK,CAAE;UAClDG,WAAW,EAAC,kCAAS;UACrB1B,KAAK,EAAE;YAAEa,WAAW,EAAE;UAAG;QAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B,CAAC,eACFtI,OAAA;UAAQuI,OAAO,EAAExD,SAAU;UAAA+C,QAAA,EAAC;QAAK;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC,EACLhI,YAAY,IAAIU,cAAc,KAAK,CAAC,iBACjChB,OAAA;QAAA8H,QAAA,IAAA3H,aAAA,GACKO,OAAO,CAAC2E,IAAI,CAAEqC,MAAM,IAAKA,MAAM,CAAC9G,EAAE,KAAKI,cAAc,CAAC,cAAAb,aAAA,uBAAtDA,aAAA,CAAwDU,IAAI,EAAC,wCAClE;MAAA;QAAAsH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CACP,EACAhI,YAAY,IACTQ,SAAS,CAACyD,GAAG,CAAC,CAAC;QAAEmC,MAAM;QAAErC;MAAS,CAAC,KAAK;QAAA,IAAAiF,qBAAA;QACpC;QACA,IAAIjF,QAAQ,KAAKrD,cAAc,IAAIqD,QAAQ,KAAK,CAAC,EAAE,OAAO,IAAI;QAE9D,MAAMkF,IAAI,IAAAD,qBAAA,GAAG9I,KAAK,CAACQ,cAAc,CAAC,cAAAsI,qBAAA,uBAArBA,qBAAA,CAAuBjE,IAAI,CAAEb,IAAI,IAAKA,IAAI,CAAC5D,EAAE,KAAK8F,MAAM,CAAC;QACtE,OAAO6C,IAAI,gBACPvJ,OAAA;UAAkBuI,OAAO,EAAEA,CAAA,KAAMzB,SAAS,CAACyC,IAAI,CAAE;UAAAzB,QAAA,EAC5CyB,IAAI,CAACjI;QAAK,GADLoF,MAAM;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEX,CAAC,GACN,IAAI;MACZ,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGL,CAAC,eAGNtI,OAAA;MAAK2H,KAAK,EAAE;QAAE6B,IAAI,EAAE,CAAC;QAAEvB,OAAO,EAAE;MAAG,CAAE;MAAAH,QAAA,gBACjC9H,OAAA;QAAA8H,QAAA,GAAA1H,cAAA,GAAKM,OAAO,CAAC2E,IAAI,CAAEqC,MAAM,IAAKA,MAAM,CAAC9G,EAAE,KAAKI,cAAc,CAAC,cAAAZ,cAAA,uBAAtDA,cAAA,CAAwDS;MAAI;QAAAsH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACvEtI,OAAA;QAAA8H,QAAA,eAII9H,OAAA;UACIiJ,IAAI,EAAC,MAAM;UACXI,WAAW,EAAC,0CAAY;UACxBH,KAAK,EAAEtH,KAAM;UACbuH,QAAQ,EAAGJ,CAAC,IAAKlH,QAAQ,CAACkH,CAAC,CAACK,MAAM,CAACF,KAAK,CAAE;UAC1CvB,KAAK,EAAE;YACHI,KAAK,EAAE,KAAK;YACZE,OAAO,EAAE,EAAE;YACXwB,YAAY,EAAE,EAAE;YAChBvB,SAAS,EAAE;UACf;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNtI,OAAA;QAAK2H,KAAK,EAAE;UAAE8B,YAAY,EAAE;QAAG,CAAE;QAAA3B,QAAA,gBAC7B9H,OAAA;UACIiJ,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEhH,UAAW;UAClBiH,QAAQ,EAAGJ,CAAC,IAAK5G,aAAa,CAAC4G,CAAC,CAACK,MAAM,CAACF,KAAK,CAAE;UAC/CvB,KAAK,EAAE;YAAEa,WAAW,EAAE;UAAG;QAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAE9B,CAAC,eACFtI,OAAA;UAAQuI,OAAO,EAAEA,CAAA,KAAMtG,YAAY,CAACD,SAAS,KAAK,QAAQ,GAAG,QAAQ,GAAG,QAAQ,CAAE;UAAA8F,QAAA,EAC7E9F,SAAS,KAAK,QAAQ,GAAG,KAAK,GAAG;QAAO;UAAAmG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,eACNtI,OAAA;QACI2H,KAAK,EAAE;UACHC,OAAO,EAAE,MAAM;UACf8B,mBAAmB,EAAE,uCAAuC;UAC5DC,GAAG,EAAE;QACT,CAAE;QAAA7B,QAAA,EAEDxH,YAAY,GACT6G,aAAa,CAAC5C,GAAG,CAAEC,IAAI,iBACnBxE,OAAA;UAEI2H,KAAK,EAAE;YACHiC,MAAM,EAAE,gBAAgB;YACxBd,YAAY,EAAE,EAAE;YAChBb,OAAO,EAAE,EAAE;YACXY,eAAe,EAAE;UACrB,CAAE;UAAAf,QAAA,gBAEF9H,OAAA;YACIuI,OAAO,EAAEA,CAAA,KAAMzB,SAAS,CAACtC,IAAI,CAAE;YAAAsD,QAAA,EAC9BtD,IAAI,CAAClD;UAAK;YAAA6G,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CAAC,eACLtI,OAAA;YAAG2H,KAAK,EAAE;cAAEkC,QAAQ,EAAE,EAAE;cAAEC,KAAK,EAAE;YAAO,CAAE;YAAAhC,QAAA,EACrCtD,IAAI,CAAChD,OAAO,CAACoD,MAAM,GAAG,EAAE,GAAGJ,IAAI,CAAChD,OAAO,CAACuI,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK,GAAGvF,IAAI,CAAChD;UAAO;YAAA2G,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7E,CAAC,eAGJtI,OAAA;YAAA8H,QAAA,EAAItD,IAAI,CAACf;UAAI;YAAA0E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAElBtI,OAAA;YAAK2H,KAAK,EAAE;cAAEC,OAAO,EAAE,MAAM;cAAEc,cAAc,EAAE,eAAe;cAAEX,KAAK,EAAE;YAAO,CAAE;YAAAD,QAAA,GAC3E9G,cAAc,KAAK,CAAC,iBACjBhB,OAAA;cAAQuI,OAAO,EAAEA,CAAA,KAAM9B,cAAc,CAACjC,IAAI,CAAC5D,EAAE,EAAE4D,IAAI,CAACH,QAAQ,CAAE;cAAAyD,QAAA,EACzDhH,SAAS,CAAC8F,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACH,MAAM,KAAKlC,IAAI,CAAC5D,EAAE,IAAIiG,IAAI,CAACxC,QAAQ,KAAKG,IAAI,CAACH,QAAQ,CAAC,GAAG,GAAG,GAAG;YAAG;cAAA8D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7F,CAAE,EACbtH,cAAc,KAAK,CAAC,iBACjBhB,OAAA;cAAQuI,OAAO,EAAEA,CAAA,KAAMrD,QAAQ,CAACV,IAAI,CAAC5D,EAAE,CAAE;cAAAkH,QAAA,EAAC;YAE1C;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CACX;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eAINtI,OAAA;YAAK2H,KAAK,EAAE;cAAEC,OAAO,EAAE,MAAM;cAAEc,cAAc,EAAE,eAAe;cAAEX,KAAK,EAAE;YAAO,CAAE;YAAAD,QAAA,GAC3E9G,cAAc,KAAK,CAAC,iBACjBhB,OAAA;cACIuI,OAAO,EAAEA,CAAA,KAAMpC,WAAW,CAAC3B,IAAI,CAAC5D,EAAE,CAAE;cAAAkH,QAAA,EAAC;YAEzC;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CACX,EACAtH,cAAc,KAAK,CAAC,iBACjBhB,OAAA;cAAQuI,OAAO,EAAEA,CAAA,KAAMvC,YAAY,CAACxB,IAAI,CAAC5D,EAAE,CAAE;cAAAkH,QAAA,EAAC;YAE9C;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CACX;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC;QAAA,GA7CD9D,IAAI,CAAC5D,EAAE;UAAAuH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA8CX,CACR,CAAC,gBAEFtI,OAAA;UAAA8H,QAAA,EAAG;QAAqB;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAC9B;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,EAELpH,WAAW,iBACRlB,OAAA;MACI2H,KAAK,EAAE;QACHqC,QAAQ,EAAE,OAAO;QACjBjC,KAAK,EAAE,MAAM;QACbF,MAAM,EAAE,MAAM;QACdgB,eAAe,EAAE,qBAAqB;QACtCjB,OAAO,EAAE,MAAM;QACfc,cAAc,EAAE,QAAQ;QACxBC,UAAU,EAAE;MAChB,CAAE;MAAAb,QAAA,eACF9H,OAAA;QACI2H,KAAK,EAAE;UACHkB,eAAe,EAAE,OAAO;UACxBd,KAAK,EAAE,KAAK;UACZF,MAAM,EAAE,KAAK;UACbiB,YAAY,EAAE;QAClB,CAAE;QAAAhB,QAAA,gBACF9H,OAAA;UACIuI,OAAO,EAAEzD,UAAW;UAAAgD,QAAA,EAAC;QAEzB;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTtI,OAAA;UAAK2H,KAAK,EAAE;YAAEM,OAAO,EAAE;UAAG,CAAE;UAAAH,QAAA,gBACxB9H,OAAA;YACIiJ,IAAI,EAAC,MAAM;YACXC,KAAK,EAAE5H,KAAM;YACb6H,QAAQ,EAAGJ,CAAC,IAAKxH,QAAQ,CAACwH,CAAC,CAACK,MAAM,CAACF,KAAK,CAAE;YAC1CG,WAAW,EAAC,2BAAO;YACnB1B,KAAK,EAAE;cACHI,KAAK,EAAE,MAAM;cACbE,OAAO,EAAE,EAAE;cACX4B,QAAQ,EAAE,EAAE;cACZ3B,SAAS,EAAE,YAAY;cACvBuB,YAAY,EAAE;YAClB;UAAE;YAAAtB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,eACFtI,OAAA;YACIkJ,KAAK,EAAE1H,OAAQ;YACf2H,QAAQ,EAAGJ,CAAC,IAAKtH,UAAU,CAACsH,CAAC,CAACK,MAAM,CAACF,KAAK,CAAE;YAC5CG,WAAW,EAAC,2BAAO;YACnB1B,KAAK,EAAE;cACHI,KAAK,EAAE,MAAM;cACbF,MAAM,EAAE,GAAG;cACXI,OAAO,EAAE,EAAE;cACX4B,QAAQ,EAAE,EAAE;cACZ3B,SAAS,EAAE;YACf;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACK,CAAC,eAEZtI,OAAA;YACIuI,OAAO,EAAEjB,YAAa;YAAAQ,QAAA,EAAC;UAE3B;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EACRxG,OAAO,iBACJ9B,OAAA;YAAA8H,QAAA,gBACI9H,OAAA;cAAA8H,QAAA,EAAIhG;YAAO;cAAAqG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAChBtI,OAAA;cACIuI,OAAO,EAAEf,iBAAkB;cAAAM,QAAA,EAAC;YAEhC;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR,CACR,eACDtI,OAAA;YACIuI,OAAO,EAAEtE,aAAc;YAAA6D,QAAA,EAAC;UAE5B;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACpI,EAAA,CA/iBQD,QAAQ;EAAA,QAGIH,WAAW;AAAA;AAAAmK,EAAA,GAHvBhK,QAAQ;AAijBjB,eAAeA,QAAQ;AAAC,IAAAgK,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}