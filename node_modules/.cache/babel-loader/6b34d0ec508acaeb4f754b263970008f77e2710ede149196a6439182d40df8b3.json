{"ast":null,"code":"var _jsxFileName = \"/Users/ldy/Code/React/\\u110B\\u1170\\u11B8\\u1100\\u1162\\u1107\\u1161\\u11AF\\u110B\\u1173\\u11BC\\u110B\\u116D\\u11BC/week15/Todolist/src/App.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport ToDoList from './components/ToDoList';\nimport Login from './components/Login';\nimport Join from './components/Join';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Join, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 12\n  }, this);\n}\n_c = App;\nexport default App;\n\n// import React, { useState } from \"react\";\n// import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n// import Header from \"./components/Header\";\n\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n\n// function App() {\n//     const [loggedInUser, setLoggedInUser] = useState(null); // Stores the logged-in user\n//     const [isAdmin, setIsAdmin] = useState(false); // Indicates whether the logged-in user is an admin\n\n//     const msg = \"Q&A입니다. 문의사항을 남겨주세요.\"; // Custom message\n\n//     return (\n//         <Router>\n//             <Header loggedInUser={loggedInUser} isAdmin={isAdmin} msg={msg} />\n//             <main className=\"container my-4\">\n//                 <Routes>\n//                     <Route path=\"/qna/create\" element={<QnaForm />} />\n//                     <Route path=\"/qnas\" element={<QnaList loggedInUser={loggedInUser} isAdmin={isAdmin} />} />\n//                     <Route path=\"/qna/:qnaId\" element={<QnaDetail loggedInUser={loggedInUser} isAdmin={isAdmin} />} />\n//                 </Routes>\n//             </main>\n//             <Footer />\n//         </Router>\n//     );\n// }\n\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Route","Routes","ToDoList","Login","Join","jsxDEV","_jsxDEV","App","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ldy/Code/React/웹개발응용/week15/Todolist/src/App.js"],"sourcesContent":["import React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport ToDoList from './components/ToDoList';\nimport Login from './components/Login';\nimport Join from './components/Join';\n\n\nfunction App() {\n    return <Join />;\n\n}\nexport default App;\n\n\n\n\n// import React, { useState } from \"react\";\n// import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n// import Header from \"./components/Header\";\n\n\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n\n// function App() {\n//     const [loggedInUser, setLoggedInUser] = useState(null); // Stores the logged-in user\n//     const [isAdmin, setIsAdmin] = useState(false); // Indicates whether the logged-in user is an admin\n\n//     const msg = \"Q&A입니다. 문의사항을 남겨주세요.\"; // Custom message\n\n//     return (\n//         <Router>\n//             <Header loggedInUser={loggedInUser} isAdmin={isAdmin} msg={msg} />\n//             <main className=\"container my-4\">\n//                 <Routes>\n//                     <Route path=\"/qna/create\" element={<QnaForm />} />\n//                     <Route path=\"/qnas\" element={<QnaList loggedInUser={loggedInUser} isAdmin={isAdmin} />} />\n//                     <Route path=\"/qna/:qnaId\" element={<QnaDetail loggedInUser={loggedInUser} isAdmin={isAdmin} />} />\n//                 </Routes>\n//             </main>\n//             <Footer />\n//         </Router>\n//     );\n// }\n\n// export default App;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AACzE,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,IAAI,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGrC,SAASC,GAAGA,CAAA,EAAG;EACX,oBAAOD,OAAA,CAACF,IAAI;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAEnB;AAACC,EAAA,GAHQL,GAAG;AAIZ,eAAeA,GAAG;;AAKlB;AACA;AACA;;AAGA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAK,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}